{"/home/travis/build/npmtest/node-npmtest-jquery-form-validator/test.js":"/* istanbul instrument in package npmtest_jquery_form_validator */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/lib.npmtest_jquery_form_validator.js":"/* istanbul instrument in package npmtest_jquery_form_validator */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_jquery_form_validator = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_jquery_form_validator = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-jquery-form-validator && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_jquery_form_validator */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_jquery_form_validator\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_jquery_form_validator.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_jquery_form_validator.rollup.js'] =\n            local.assetsDict['/assets.npmtest_jquery_form_validator.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_jquery_form_validator.__dirname + '/lib.npmtest_jquery_form_validator.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/jquery.form-validator.min.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){function c(a,b){this.$form=a,this.$input=b,this.reset(),b.on(\"change paste\",this.reset.bind(this))}var d=function(){return!1},e={numHalted:0,haltValidation:function(b){this.numHalted++,a.formUtils.haltValidation=!0,b.unbind(\"submit\",d).bind(\"submit\",d).find('*[type=\"submit\"]').addClass(\"disabled\").attr(\"disabled\",\"disabled\")},unHaltValidation:function(b){this.numHalted--,0===this.numHalted&&(a.formUtils.haltValidation=!1,b.unbind(\"submit\",d).find('*[type=\"submit\"]').removeClass(\"disabled\").removeAttr(\"disabled\",\"disabled\"))}};c.prototype.reset=function(){this.haltedFormValidation=!1,this.hasRun=!1,this.isRunning=!1,this.result=b},c.prototype.run=function(a,b){return\"keyup\"===a?null:this.isRunning?(this.haltedFormValidation||\"submit\"!==a||(e.haltValidation(),this.haltedFormValidation=!0),null):this.hasRun?this.result:(\"submit\"===a&&(e.haltValidation(this.$form),this.haltedFormValidation=!0),this.isRunning=!0,this.$input.attr(\"disabled\",\"disabled\").addClass(\"async-validation\"),this.$form.addClass(\"async-validation\"),b(function(a){this.done(a)}.bind(this)),null)},c.prototype.done=function(a){this.result=a,this.hasRun=!0,this.isRunning=!1,this.$input.removeAttr(\"disabled\").removeClass(\"async-validation\"),this.$form.removeClass(\"async-validation\"),this.haltedFormValidation?(e.unHaltValidation(this.$form),this.$form.trigger(\"submit\")):this.$input.trigger(\"validation.revalidate\")},a.formUtils=a.extend(a.formUtils||{},{asyncValidation:function(a,b,d){var e,f=b.get(0);return f.asyncValidators||(f.asyncValidators={}),f.asyncValidators[a]?e=f.asyncValidators[a]:(e=new c(d,b),f.asyncValidators[a]=e),e}})}(a),function(a,b){\"use strict\";function c(b){b&&\"custom\"===b.errorMessagePosition&&\"function\"==typeof b.errorMessageCustom&&(a.formUtils.warn(\"Use of deprecated function errorMessageCustom, use config.submitErrorMessageCallback instead\"),b.submitErrorMessageCallback=function(a,c){b.errorMessageCustom(a,b.language.errorTitle,c,b)})}function d(b){if(b.errorMessagePosition&&\"object\"==typeof b.errorMessagePosition){a.formUtils.warn(\"Deprecated use of config parameter errorMessagePosition, use config.submitErrorMessageCallback instead\");var c=b.errorMessagePosition;b.errorMessagePosition=\"top\",b.submitErrorMessageCallback=function(){return c}}}function e(b){var c=b.find(\"[data-validation-if-checked]\");c.length&&a.formUtils.warn('Detected use of attribute \"data-validation-if-checked\" which is deprecated. Use \"data-validation-depends-on\" provided by module \"logic\"'),c.on(\"beforeValidation\",function(){var c=a(this),d=c.valAttr(\"if-checked\"),e=a('input[name=\"'+d+'\"]',b),f=e.is(\":checked\"),g=(a.formUtils.getValue(e)||\"\").toString(),h=c.valAttr(\"if-checked-value\");(!f||h&&h!==g)&&c.valAttr(\"skipped\",!0)})}function f(b){var c={se:\"sv\",cz:\"cs\",dk:\"da\"};if(b.lang in c){var d=c[b.lang];a.formUtils.warn('Deprecated use of lang code \"'+b.lang+'\" use \"'+d+'\" instead'),b.lang=d}}a.fn.validateForm=function(b,c){return a.formUtils.warn(\"Use of deprecated function $.validateForm, use $.isValid instead\"),this.isValid(b,c,!0)},a(window).on(\"formValidationPluginInit\",function(a,b){f(b),c(b),d(b)}).on(\"validatorsLoaded formValidationSetup\",function(b,c){c||(c=a(\"form\")),e(c)})}(a),function(a){\"use strict\";var b={resolveErrorMessage:function(a,b,c,d,e){var f=d.validationErrorMsgAttribute+\"-\"+c.replace(\"validate_\",\"\"),g=a.attr(f);return g||(g=a.attr(d.validationErrorMsgAttribute),g||(g=\"function\"!=typeof b.errorMessageKey?e[b.errorMessageKey]:e[b.errorMessageKey(d)],g||(g=b.errorMessage))),g},getParentContainer:function(b){if(b.valAttr(\"error-msg-container\"))return a(b.valAttr(\"error-msg-container\"));var c=b.parent();if(!c.hasClass(\"form-group\")&&!c.closest(\"form\").hasClass(\"form-horizontal\")){var d=c.closest(\".form-group\");if(d.length)return d.eq(0)}return c},applyInputErrorStyling:function(a,b){a.addClass(b.errorElementClass).removeClass(b.successElementClass),this.getParentContainer(a).addClass(b.inputParentClassOnError).removeClass(b.inputParentClassOnSuccess),\"\"!==b.borderColorOnError&&a.css(\"border-color\",b.borderColorOnError)},applyInputSuccessStyling:function(a,b){a.addClass(\"valid\"),this.getParentContainer(a).addClass(b.inputParentClassOnSuccess)},removeInputStylingAndMessage:function(a,c){a.removeClass(c.successElementClass).removeClass(c.errorElementClass).css(\"border-color\",\"\");var d=b.getParentContainer(a);if(d.removeClass(c.inputParentClassOnError).removeClass(c.inputParentClassOnSuccess),\"function\"==typeof c.inlineErrorMessageCallback){var e=c.inlineErrorMessageCallback(a,!1,c);e&&e.html(\"\")}else d.find(\".\"+c.errorMessageClass).remove()},removeAllMessagesAndStyling:function(c,d){if(\"function\"==typeof d.submitErrorMessageCallback){var e=d.submitErrorMessageCallback(c,!1,d);e&&e.html(\"\")}else c.find(\".\"+d.errorMessageClass+\".alert\").remove();c.find(\".\"+d.errorElementClass+\",.\"+d.successElementClass).each(function(){b.removeInputStylingAndMessage(a(this),d)})},setInlineMessage:function(b,c,d){this.applyInputErrorStyling(b,d);var e,f=document.getElementById(b.attr(\"name\")+\"_err_msg\"),g=!1,h=function(d){a.formUtils.$win.trigger(\"validationErrorDisplay\",[b,d]),d.html(c)},i=function(){var f=!1;g.find(\".\"+d.errorMessageClass).each(function(){if(this.inputReferer===b[0])return f=a(this),!1}),f?c?h(f):f.remove():\"\"!==c&&(e=a('<div class=\"'+d.errorMessageClass+' alert\"></div>'),h(e),e[0].inputReferer=b[0],g.prepend(e))};if(f)a.formUtils.warn(\"Using deprecated element reference \"+f.id),g=a(f),i();else if(\"function\"==typeof d.inlineErrorMessageCallback){if(g=d.inlineErrorMessageCallback(b,c,d),!g)return;i()}else{var j=this.getParentContainer(b);e=j.find(\".\"+d.errorMessageClass+\".help-block\"),0===e.length&&(e=a(\"<span></span>\").addClass(\"help-block\").addClass(d.errorMessageClass),e.appendTo(j)),h(e)}},setMessageInTopOfForm:function(b,c,d,e){var f='<div class=\"{errorMessageClass} alert alert-danger\"><strong>{errorTitle}</strong><ul>{fields}</ul></div>',g=!1;if(\"function\"!=typeof d.submitErrorMessageCallback||(g=d.submitErrorMessageCallback(b,c,d))){var h={errorTitle:e.errorTitle,fields:\"\",errorMessageClass:d.errorMessageClass};a.each(c,function(a,b){h.fields+=\"<li>\"+b+\"</li>\"}),a.each(h,function(a,b){f=f.replace(\"{\"+a+\"}\",b)}),g?g.html(f):b.children().eq(0).before(a(f))}}};a.formUtils=a.extend(a.formUtils||{},{dialogs:b})}(a),function(a,b,c){\"use strict\";var d=0;a.fn.validateOnBlur=function(b,c){var d=this,e=this.find(\"*[data-validation]\");return e.each(function(){var e=a(this);if(e.is(\"[type=radio]\")){var f=d.find('[type=radio][name=\"'+e.attr(\"name\")+'\"]');f.bind(\"blur.validation\",function(){e.validateInputOnBlur(b,c,!0,\"blur\")}),c.validateCheckboxRadioOnClick&&f.bind(\"click.validation\",function(){e.validateInputOnBlur(b,c,!0,\"click\")})}}),e.bind(\"blur.validation\",function(){a(this).validateInputOnBlur(b,c,!0,\"blur\")}),c.validateCheckboxRadioOnClick&&this.find(\"input[type=checkbox][data-validation],input[type=radio][data-validation]\").bind(\"click.validation\",function(){a(this).validateInputOnBlur(b,c,!0,\"click\")}),this},a.fn.validateOnEvent=function(b,c){var d=\"FORM\"===this[0].nodeName?this.find(\"*[data-validation-event]\"):this;return d.each(function(){var d=a(this),e=d.valAttr(\"event\");e&&d.unbind(e+\".validation\").bind(e+\".validation\",function(d){9!==(d||{}).keyCode&&a(this).validateInputOnBlur(b,c,!0,e)})}),this},a.fn.showHelpOnFocus=function(b){return b||(b=\"data-validation-help\"),this.find(\"textarea,input\").each(function(){var c=a(this),e=\"jquery_form_help_\"+ ++d,f=c.attr(b);c.removeClass(\"has-help-text\").unbind(\"focus.help\").unbind(\"blur.help\"),f&&c.addClass(\"has-help-txt\").bind(\"focus.help\",function(){var b=c.parent().find(\".\"+e);0===b.length&&(b=a(\"<span />\").addClass(e).addClass(\"help\").addClass(\"help-block\").text(f).hide(),c.after(b)),b.fadeIn()}).bind(\"blur.help\",function(){a(this).parent().find(\".\"+e).fadeOut(\"slow\")})}),this},a.fn.validate=function(b,c,d){var e=a.extend({},a.formUtils.LANG,d||{});this.each(function(){var d=a(this),f=d.closest(\"form\").get(0)||{},g=f.validationConfig||{};d.one(\"validation\",function(a,c){\"function\"==typeof b&&b(c,this,a)}),d.validateInputOnBlur(e,a.extend({},g,c||{}),!0)})},a.fn.willPostponeValidation=function(){return(this.valAttr(\"suggestion-nr\")||this.valAttr(\"postpone\")||this.hasClass(\"hasDatepicker\"))&&!b.postponedValidation},a.fn.validateInputOnBlur=function(c,d,e,f){if(a.formUtils.eventType=f,this.willPostponeValidation()){var g=this,h=this.valAttr(\"postpone\")||200;return b.postponedValidation=function(){g.validateInputOnBlur(c,d,e,f),b.postponedValidation=!1},setTimeout(function(){b.postponedValidation&&b.postponedValidation()},h),this}c=a.extend({},a.formUtils.LANG,c||{}),a.formUtils.dialogs.removeInputStylingAndMessage(this,d);var i=this,j=i.closest(\"form\"),k=a.formUtils.validateInput(i,c,d,j,f),l=function(){i.validateInputOnBlur(c,d,!1,\"blur.revalidated\")};return\"blur\"===f&&i.unbind(\"validation.revalidate\",l).one(\"validation.revalidate\",l),e&&i.removeKeyUpValidation(),k.shouldChangeDisplay&&(k.isValid?a.formUtils.dialogs.applyInputSuccessStyling(i,d):a.formUtils.dialogs.setInlineMessage(i,k.errorMsg,d)),!k.isValid&&e&&i.validateOnKeyUp(c,d),this},a.fn.validateOnKeyUp=function(b,c){return this.each(function(){var d=a(this);d.valAttr(\"has-keyup-event\")||d.valAttr(\"has-keyup-event\",\"true\").bind(\"keyup.validation\",function(a){9!==a.keyCode&&d.validateInputOnBlur(b,c,!1,\"keyup\")})}),this},a.fn.removeKeyUpValidation=function(){return this.each(function(){a(this).valAttr(\"has-keyup-event\",!1).unbind(\"keyup.validation\")}),this},a.fn.valAttr=function(a,b){return b===c?this.attr(\"data-validation-\"+a):b===!1||null===b?this.removeAttr(\"data-validation-\"+a):(a=a.length>0?\"-\"+a:\"\",this.attr(\"data-validation\"+a,b))},a.fn.isValid=function(b,c,d){if(a.formUtils.isLoadingModules){var e=this;return setTimeout(function(){e.isValid(b,c,d)},200),null}c=a.extend({},a.formUtils.defaultConfig(),c||{}),b=a.extend({},a.formUtils.LANG,b||{}),d=d!==!1,a.formUtils.errorDisplayPreventedWhenHalted&&(delete a.formUtils.errorDisplayPreventedWhenHalted,d=!1);var f=function(b,e){a.inArray(b,h)<0&&h.push(b),i.push(e),e.valAttr(\"current-error\",b),d&&a.formUtils.dialogs.applyInputErrorStyling(e,c)},g=[],h=[],i=[],j=this,k=function(b,d){return\"submit\"===d||\"button\"===d||\"reset\"===d||a.inArray(b,c.ignore||[])>-1};if(d&&a.formUtils.dialogs.removeAllMessagesAndStyling(j,c),j.find(\"input,textarea,select\").filter(':not([type=\"submit\"],[type=\"button\"])').each(function(){var d=a(this),e=d.attr(\"type\"),h=\"radio\"===e||\"checkbox\"===e,i=d.attr(\"name\");if(!k(i,e)&&(!h||a.inArray(i,g)<0)){h&&g.push(i);var l=a.formUtils.validateInput(d,b,c,j,\"submit\");l.isValid?l.isValid&&l.shouldChangeDisplay&&(d.valAttr(\"current-error\",!1),a.formUtils.dialogs.applyInputSuccessStyling(d,c)):f(l.errorMsg,d)}}),\"function\"==typeof c.onValidate){var l=c.onValidate(j);a.isArray(l)?a.each(l,function(a,b){f(b.message,b.element)}):l&&l.element&&l.message&&f(l.message,l.element)}return a.formUtils.isValidatingEntireForm=!1,i.length>0&&d&&(\"top\"===c.errorMessagePosition?a.formUtils.dialogs.setMessageInTopOfForm(j,h,c,b):a.each(i,function(b,d){a.formUtils.dialogs.setInlineMessage(d,d.valAttr(\"current-error\"),c)}),c.scrollToTopOnError&&a.formUtils.$win.scrollTop(j.offset().top-20)),!d&&a.formUtils.haltValidation&&(a.formUtils.errorDisplayPreventedWhenHalted=!0),0===i.length&&!a.formUtils.haltValidation},a.fn.restrictLength=function(b){return new a.formUtils.lengthRestriction(this,b),this},a.fn.addSuggestions=function(b){var c=!1;return this.find(\"input\").each(function(){var d=a(this);c=a.split(d.attr(\"data-suggestions\")),c.length>0&&!d.hasClass(\"has-suggestions\")&&(a.formUtils.suggest(d,c,b),d.addClass(\"has-suggestions\"))}),this}}(a,window),function(a){\"use strict\";a.formUtils=a.extend(a.formUtils||{},{isLoadingModules:!1,loadedModules:{},loadModules:function(b,c,d){if(a.formUtils.isLoadingModules)return void setTimeout(function(){a.formUtils.loadModules(b,c,d)},10);var e=!1,f=function(b,c){var f=a.split(b),g=f.length,h=function(){g--,0===g&&(a.formUtils.isLoadingModules=!1,d&&e&&\"function\"==typeof d&&d())};g>0&&(a.formUtils.isLoadingModules=!0);var i=\"?_=\"+(new Date).getTime(),j=document.getElementsByTagName(\"head\")[0]||document.getElementsByTagName(\"body\")[0];a.each(f,function(b,d){if(d=a.trim(d),0===d.length)h();else{var f=c+d+(\".js\"===d.slice(-3)?\"\":\".js\"),g=document.createElement(\"SCRIPT\");f in a.formUtils.loadedModules?h():(a.formUtils.loadedModules[f]=1,e=!0,\"function\"==typeof define&&define.amd?require([f+(\".dev.js\"===f.slice(-7)?i:\"\")],h):(g.type=\"text/javascript\",g.onload=h,g.src=f+(\".dev.js\"===f.slice(-7)?i:\"\"),g.onerror=function(){a.formUtils.warn(\"Unable to load form validation module \"+f)},g.onreadystatechange=function(){\"complete\"!==this.readyState&&\"loaded\"!==this.readyState||(h(),this.onload=null,this.onreadystatechange=null)},j.appendChild(g)))}})};if(c)f(b,c);else{var g=function(){var c=!1;return a('script[src*=\"form-validator\"]').each(function(){var a=this.src.split(\"form-validator\")[1].split(\"node_modules\").length>1;if(!a)return c=this.src.substr(0,this.src.lastIndexOf(\"/\"))+\"/\",\"/\"===c&&(c=\"\"),!1}),c!==!1&&(f(b,c),!0)};g()||a(g)}}})}(a),function(a){\"use strict\";a.split=function(b,c,d){d=void 0===d||d===!0;var e=\"[,|\"+(d?\"\\\\s\":\"\")+\"-]\\\\s*\",f=new RegExp(e,\"g\");if(\"function\"!=typeof c){if(!b)return[];var g=[];return a.each(b.split(c?c:f),function(b,c){c=a.trim(c),c.length&&g.push(c)}),g}b&&a.each(b.split(f),function(b,d){if(d=a.trim(d),d.length)return c(d,b)})},a.validate=function(b){var c=a.extend(a.formUtils.defaultConfig(),{form:\"form\",validateOnEvent:!1,validateOnBlur:!0,validateCheckboxRadioOnClick:!0,showHelpOnFocus:!0,addSuggestions:!0,modules:\"\",onModulesLoaded:null,language:!1,onSuccess:!1,onError:!1,onElementValidate:!1});if(b=a.extend(c,b||{}),a(window).trigger(\"formValidationPluginInit\",[b]),b.lang&&\"en\"!==b.lang){var d=\"lang/\"+b.lang+\".js\";b.modules+=b.modules.length?\",\"+d:d}a(b.form).each(function(c,d){d.validationConfig=b;var e=a(d);e.trigger(\"formValidationSetup\",[e,b]),e.find(\".has-help-txt\").unbind(\"focus.validation\").unbind(\"blur.validation\"),e.removeClass(\"has-validation-callback\").unbind(\"submit.validation\").unbind(\"reset.validation\").find(\"input[data-validation],textarea[data-validation]\").unbind(\"blur.validation\"),e.bind(\"submit.validation\",function(c){var d=a(this),e=function(){return c.stopImmediatePropagation(),!1};if(a.formUtils.haltValidation)return e();if(a.formUtils.isLoadingModules)return setTimeout(function(){d.trigger(\"submit.validation\")},200),e();var f=d.isValid(b.language,b);if(a.formUtils.haltValidation)return e();if(!f||\"function\"!=typeof b.onSuccess)return f||\"function\"!=typeof b.onError?!!f||e():(b.onError(d),e());var g=b.onSuccess(d);return g===!1?e():void 0}).bind(\"reset.validation\",function(){a.formUtils.dialogs.removeAllMessagesAndStyling(e,b)}).addClass(\"has-validation-callback\"),b.showHelpOnFocus&&e.showHelpOnFocus(),b.addSuggestions&&e.addSuggestions(),b.validateOnBlur&&(e.validateOnBlur(b.language,b),e.bind(\"html5ValidationAttrsFound\",function(){e.validateOnBlur(b.language,b)})),b.validateOnEvent&&e.validateOnEvent(b.language,b)}),\"\"!==b.modules&&a.formUtils.loadModules(b.modules,!1,function(){\"function\"==typeof b.onModulesLoaded&&b.onModulesLoaded();var c=\"string\"==typeof b.form?a(b.form):b.form;a.formUtils.$win.trigger(\"validatorsLoaded\",[c,b])})}}(a),function(a,b){\"use strict\";var c=a(b);a.formUtils=a.extend(a.formUtils||{},{$win:c,defaultConfig:function(){return{ignore:[],errorElementClass:\"error\",successElementClass:\"valid\",borderColorOnError:\"#b94a48\",errorMessageClass:\"form-error\",validationRuleAttribute:\"data-validation\",validationErrorMsgAttribute:\"data-validation-error-msg\",errorMessagePosition:\"inline\",errorMessageTemplate:{container:'<div class=\"{errorMessageClass} alert alert-danger\">{messages}</div>',messages:\"<strong>{errorTitle}</strong><ul>{fields}</ul>\",field:\"<li>{msg}</li>\"},scrollToTopOnError:!0,dateFormat:\"yyyy-mm-dd\",addValidClassOnAll:!1,decimalSeparator:\".\",inputParentClassOnError:\"has-error\",inputParentClassOnSuccess:\"has-success\",validateHiddenInputs:!1,inlineErrorMessageCallback:!1,submitErrorMessageCallback:!1}},validators:{},_events:{load:[],valid:[],invalid:[]},haltValidation:!1,addValidator:function(a){var b=0===a.name.indexOf(\"validate_\")?a.name:\"validate_\"+a.name;void 0===a.validateOnKeyUp&&(a.validateOnKeyUp=!0),this.validators[b]=a},warn:function(a){\"console\"in b?\"function\"==typeof b.console.warn?b.console.warn(a):\"function\"==typeof b.console.log&&b.console.log(a):alert(a)},getValue:function(a,b){var c=b?b.find(a):a;if(c.length>0){var d=c.eq(0).attr(\"type\");return\"radio\"===d||\"checkbox\"===d?c.filter(\":checked\").val()||\"\":c.val()||\"\"}return!1},validateInput:function(b,c,d,e,f){d=d||a.formUtils.defaultConfig(),c=c||a.formUtils.LANG;var g=this.getValue(b);b.valAttr(\"skipped\",!1).one(\"beforeValidation\",function(){(b.attr(\"disabled\")||!b.is(\":visible\")&&!d.validateHiddenInputs)&&b.valAttr(\"skipped\",1)}).trigger(\"beforeValidation\",[g,c,d]);var h=\"true\"===b.valAttr(\"optional\"),i=!g&&h,j=b.attr(d.validationRuleAttribute),k=!0,l=\"\",m={isValid:!0,shouldChangeDisplay:!0,errorMsg:\"\"};if(!j||i||b.valAttr(\"skipped\"))return m.shouldChangeDisplay=d.addValidClassOnAll,m;var n=b.valAttr(\"ignore\");return n&&a.each(n.split(\"\"),function(a,b){g=g.replace(new RegExp(\"\\\\\"+b,\"g\"),\"\")}),a.split(j,function(h){0!==h.indexOf(\"validate_\")&&(h=\"validate_\"+h);var i=a.formUtils.validators[h];if(!i)throw new Error('Using undefined validator \"'+h+'\". Maybe you have forgotten to load the module that \"'+h+'\" belongs to?');if(\"validate_checkbox_group\"===h&&(b=e.find('[name=\"'+b.attr(\"name\")+'\"]:eq(0)')),(\"keyup\"!==f||i.validateOnKeyUp)&&(k=i.validatorFunction(g,b,d,c,e,f)),!k)return d.validateOnBlur&&b.validateOnKeyUp(c,d),l=a.formUtils.dialogs.resolveErrorMessage(b,i,h,d,c),!1}),k===!1?(b.trigger(\"validation\",!1),m.errorMsg=l,m.isValid=!1,m.shouldChangeDisplay=!0):null===k?m.shouldChangeDisplay=!1:(b.trigger(\"validation\",!0),m.shouldChangeDisplay=!0),\"function\"==typeof d.onElementValidate&&null!==l&&d.onElementValidate(m.isValid,b,e,l),b.trigger(\"afterValidation\",[m,f]),m},parseDate:function(b,c,d){var e,f,g,h,i=c.replace(/[a-zA-Z]/gi,\"\").substring(0,1),j=\"^\",k=c.split(i||null);if(a.each(k,function(a,b){j+=(a>0?\"\\\\\"+i:\"\")+\"(\\\\d{\"+b.length+\"})\"}),j+=\"$\",d){var l=[];a.each(b.split(i),function(a,b){1===b.length&&(b=\"0\"+b),l.push(b)}),b=l.join(i)}if(e=b.match(new RegExp(j)),null===e)return!1;var m=function(b,c,d){for(var e=0;e<c.length;e++)if(c[e].substring(0,1)===b)return a.formUtils.parseDateInt(d[e+1]);return-1};return g=m(\"m\",k,e),f=m(\"d\",k,e),h=m(\"y\",k,e),!(2===g&&f>28&&(h%4!==0||h%100===0&&h%400!==0)||2===g&&f>29&&(h%4===0||h%100!==0&&h%400===0)||g>12||0===g)&&(!(this.isShortMonth(g)&&f>30||!this.isShortMonth(g)&&f>31||0===f)&&[h,g,f])},parseDateInt:function(a){return 0===a.indexOf(\"0\")&&(a=a.replace(\"0\",\"\")),parseInt(a,10)},isShortMonth:function(a){return a%2===0&&a<7||a%2!==0&&a>7},lengthRestriction:function(b,c){var d=parseInt(c.text(),10),e=0,f=function(){var a=b.val().length;if(a>d){var f=b.scrollTop();b.val(b.val().substring(0,d)),b.scrollTop(f)}e=d-a,e<0&&(e=0),c.text(e)};a(b).bind(\"keydown keyup keypress focus blur\",f).bind(\"cut paste\",function(){setTimeout(f,100)}),a(document).bind(\"ready\",f)},numericRangeCheck:function(b,c){var d=a.split(c),e=parseInt(c.substr(3),10);return 1===d.length&&c.indexOf(\"min\")===-1&&c.indexOf(\"max\")===-1&&(d=[c,c]),2===d.length&&(b<parseInt(d[0],10)||b>parseInt(d[1],10))?[\"out\",d[0],d[1]]:0===c.indexOf(\"min\")&&b<e?[\"min\",e]:0===c.indexOf(\"max\")&&b>e?[\"max\",e]:[\"ok\"]},_numSuggestionElements:0,_selectedSuggestion:null,_previousTypedVal:null,suggest:function(b,d,e){var f={css:{maxHeight:\"150px\",background:\"#FFF\",lineHeight:\"150%\",textDecoration:\"underline\",overflowX:\"hidden\",overflowY:\"auto\",border:\"#CCC solid 1px\",borderTop:\"none\",cursor:\"pointer\"},activeSuggestionCSS:{background:\"#E9E9E9\"}},g=function(a,b){var c=b.offset();a.css({width:b.outerWidth(),left:c.left+\"px\",top:c.top+b.outerHeight()+\"px\"})};e&&a.extend(f,e),f.css.position=\"absolute\",f.css[\"z-index\"]=9999,b.attr(\"autocomplete\",\"off\"),0===this._numSuggestionElements&&c.bind(\"resize\",function(){a(\".jquery-form-suggestions\").each(function(){var b=a(this),c=b.attr(\"data-suggest-container\");g(b,a(\".suggestions-\"+c).eq(0))})}),this._numSuggestionElements++;var h=function(b){var c=b.valAttr(\"suggestion-nr\");a.formUtils._selectedSuggestion=null,a.formUtils._previousTypedVal=null,a(\".jquery-form-suggestion-\"+c).fadeOut(\"fast\")};return b.data(\"suggestions\",d).valAttr(\"suggestion-nr\",this._numSuggestionElements).unbind(\"focus.suggest\").bind(\"focus.suggest\",function(){a(this).trigger(\"keyup\"),a.formUtils._selectedSuggestion=null}).unbind(\"keyup.suggest\").bind(\"keyup.suggest\",function(){var c=a(this),d=[],e=a.trim(c.val()).toLocaleLowerCase();if(e!==a.formUtils._previousTypedVal){a.formUtils._previousTypedVal=e;var i=!1,j=c.valAttr(\"suggestion-nr\"),k=a(\".jquery-form-suggestion-\"+j);if(k.scrollTop(0),\"\"!==e){var l=e.length>2;a.each(c.data(\"suggestions\"),function(a,b){var c=b.toLocaleLowerCase();return c===e?(d.push(\"<strong>\"+b+\"</strong>\"),i=!0,!1):void((0===c.indexOf(e)||l&&c.indexOf(e)>-1)&&d.push(b.replace(new RegExp(e,\"gi\"),\"<strong>$&</strong>\")))})}i||0===d.length&&k.length>0?k.hide():d.length>0&&0===k.length?(k=a(\"<div></div>\").css(f.css).appendTo(\"body\"),b.addClass(\"suggestions-\"+j),k.attr(\"data-suggest-container\",j).addClass(\"jquery-form-suggestions\").addClass(\"jquery-form-suggestion-\"+j)):d.length>0&&!k.is(\":visible\")&&k.show(),d.length>0&&e.length!==d[0].length&&(g(k,c),k.html(\"\"),a.each(d,function(b,d){a(\"<div></div>\").append(d).css({overflow:\"hidden\",textOverflow:\"ellipsis\",whiteSpace:\"nowrap\",padding:\"5px\"}).addClass(\"form-suggest-element\").appendTo(k).click(function(){c.focus(),c.val(a(this).text()),c.trigger(\"change\"),h(c)})}))}}).unbind(\"keydown.validation\").bind(\"keydown.validation\",function(b){var c,d,e=b.keyCode?b.keyCode:b.which,g=a(this);if(13===e&&null!==a.formUtils._selectedSuggestion){if(c=g.valAttr(\"suggestion-nr\"),d=a(\".jquery-form-suggestion-\"+c),d.length>0){var i=d.find(\"div\").eq(a.formUtils._selectedSuggestion).text();g.val(i),g.trigger(\"change\"),h(g),b.preventDefault()}}else{c=g.valAttr(\"suggestion-nr\"),d=a(\".jquery-form-suggestion-\"+c);var j=d.children();if(j.length>0&&a.inArray(e,[38,40])>-1){38===e?(null===a.formUtils._selectedSuggestion?a.formUtils._selectedSuggestion=j.length-1:a.formUtils._selectedSuggestion--,a.formUtils._selectedSuggestion<0&&(a.formUtils._selectedSuggestion=j.length-1)):40===e&&(null===a.formUtils._selectedSuggestion?a.formUtils._selectedSuggestion=0:a.formUtils._selectedSuggestion++,a.formUtils._selectedSuggestion>j.length-1&&(a.formUtils._selectedSuggestion=0));var k=d.innerHeight(),l=d.scrollTop(),m=d.children().eq(0).outerHeight(),n=m*a.formUtils._selectedSuggestion;return(n<l||n>l+k)&&d.scrollTop(n),j.removeClass(\"active-suggestion\").css(\"background\",\"none\").eq(a.formUtils._selectedSuggestion).addClass(\"active-suggestion\").css(f.activeSuggestionCSS),b.preventDefault(),!1}}}).unbind(\"blur.suggest\").bind(\"blur.suggest\",function(){h(a(this))}),b},LANG:{errorTitle:\"Form submission failed!\",requiredField:\"This is a required field\",requiredFields:\"You have not answered all required fields\",badTime:\"You have not given a correct time\",badEmail:\"You have not given a correct e-mail address\",badTelephone:\"You have not given a correct phone number\",badSecurityAnswer:\"You have not given a correct answer to the security question\",badDate:\"You have not given a correct date\",lengthBadStart:\"The input value must be between \",lengthBadEnd:\" characters\",lengthTooLongStart:\"The input value is longer than \",lengthTooShortStart:\"The input value is shorter than \",notConfirmed:\"Input values could not be confirmed\",badDomain:\"Incorrect domain value\",badUrl:\"The input value is not a correct URL\",badCustomVal:\"The input value is incorrect\",andSpaces:\" and spaces \",badInt:\"The input value was not a correct number\",badSecurityNumber:\"Your social security number was incorrect\",badUKVatAnswer:\"Incorrect UK VAT Number\",badUKNin:\"Incorrect UK NIN\",badUKUtr:\"Incorrect UK UTR Number\",badStrength:\"The password isn't strong enough\",badNumberOfSelectedOptionsStart:\"You have to choose at least \",badNumberOfSelectedOptionsEnd:\" answers\",badAlphaNumeric:\"The input value can only contain alphanumeric characters \",badAlphaNumericExtra:\" and \",wrongFileSize:\"The file you are trying to upload is too large (max %s)\",wrongFileType:\"Only files of type %s is allowed\",groupCheckedRangeStart:\"Please choose between \",groupCheckedTooFewStart:\"Please choose at least \",groupCheckedTooManyStart:\"Please choose a maximum of \",groupCheckedEnd:\" item(s)\",badCreditCard:\"The credit card number is not correct\",badCVV:\"The CVV number was not correct\",wrongFileDim:\"Incorrect image dimensions,\",imageTooTall:\"the image can not be taller than\",imageTooWide:\"the image can not be wider than\",imageTooSmall:\"the image was too small\",min:\"min\",max:\"max\",imageRatioNotAccepted:\"Image ratio is not be accepted\",badBrazilTelephoneAnswer:\"The phone number entered is invalid\",badBrazilCEPAnswer:\"The CEP entered is invalid\",badBrazilCPFAnswer:\"The CPF entered is invalid\",badPlPesel:\"The PESEL entered is invalid\",badPlNip:\"The NIP entered is invalid\",badPlRegon:\"The REGON entered is invalid\",badreCaptcha:\"Please confirm that you are not a bot\",passwordComplexityStart:\"Password must contain at least \",passwordComplexitySeparator:\", \",passwordComplexityUppercaseInfo:\" uppercase letter(s)\",passwordComplexityLowercaseInfo:\" lowercase letter(s)\",passwordComplexitySpecialCharsInfo:\" special character(s)\",passwordComplexityNumericCharsInfo:\" numeric character(s)\",passwordComplexityEnd:\".\"}})}(a,window),function(a){a.formUtils.addValidator({name:\"email\",validatorFunction:function(b){var c=b.toLowerCase().split(\"@\"),d=c[0],e=c[1];if(d&&e){if(0===d.indexOf('\"')){var f=d.length;if(d=d.replace(/\\\"/g,\"\"),d.length!==f-2)return!1}return a.formUtils.validators.validate_domain.validatorFunction(c[1])&&0!==d.indexOf(\".\")&&\".\"!==d.substring(d.length-1,d.length)&&d.indexOf(\"..\")===-1&&!/[^\\w\\+\\.\\-\\#\\-\\_\\~\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\:]/.test(d)}return!1},errorMessage:\"\",errorMessageKey:\"badEmail\"}),a.formUtils.addValidator({name:\"domain\",validatorFunction:function(a){return a.length>0&&a.length<=253&&!/[^a-zA-Z0-9]/.test(a.slice(-2))&&!/[^a-zA-Z0-9]/.test(a.substr(0,1))&&!/[^a-zA-Z0-9\\.\\-]/.test(a)&&1===a.split(\"..\").length&&a.split(\".\").length>1},errorMessage:\"\",errorMessageKey:\"badDomain\"}),a.formUtils.addValidator({name:\"required\",validatorFunction:function(b,c,d,e,f){switch(c.attr(\"type\")){case\"checkbox\":return c.is(\":checked\");case\"radio\":return f.find('input[name=\"'+c.attr(\"name\")+'\"]').filter(\":checked\").length>0;default:return\"\"!==a.trim(b)}},errorMessage:\"\",errorMessageKey:function(a){return\"top\"===a.errorMessagePosition||\"function\"==typeof a.errorMessagePosition?\"requiredFields\":\"requiredField\"}}),a.formUtils.addValidator({name:\"length\",validatorFunction:function(b,c,d,e){var f=c.valAttr(\"length\"),g=c.attr(\"type\");if(void 0===f)return alert('Please add attribute \"data-validation-length\" to '+c[0].nodeName+\" named \"+c.attr(\"name\")),!0;var h,i=\"file\"===g&&void 0!==c.get(0).files?c.get(0).files.length:b.length,j=a.formUtils.numericRangeCheck(i,f);switch(j[0]){case\"out\":this.errorMessage=e.lengthBadStart+f+e.lengthBadEnd,h=!1;break;case\"min\":this.errorMessage=e.lengthTooShortStart+j[1]+e.lengthBadEnd,h=!1;break;case\"max\":this.errorMessage=e.lengthTooLongStart+j[1]+e.lengthBadEnd,h=!1;break;default:h=!0}return h},errorMessage:\"\",errorMessageKey:\"\"}),a.formUtils.addValidator({name:\"url\",validatorFunction:function(b){var c=/^(https?|ftp):\\/\\/((((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])(\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])(\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/(((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|\\[|\\]|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#(((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i;if(c.test(b)){var d=b.split(\"://\")[1],e=d.indexOf(\"/\");return e>-1&&(d=d.substr(0,e)),a.formUtils.validators.validate_domain.validatorFunction(d)}return!1},errorMessage:\"\",errorMessageKey:\"badUrl\"}),a.formUtils.addValidator({name:\"number\",validatorFunction:function(a,b,c){if(\"\"!==a){var d,e,f=b.valAttr(\"allowing\")||\"\",g=b.valAttr(\"decimal-separator\")||c.decimalSeparator,h=!1,i=b.valAttr(\"step\")||\"\",j=!1,k=b.attr(\"data-sanitize\")||\"\",l=k.match(/(^|[\\s])numberFormat([\\s]|$)/i);if(l){if(!window.numeral)throw new ReferenceError(\"The data-sanitize value numberFormat cannot be used without the numeral library. Please see Data Validation in http://www.formvalidator.net for more information.\");a.length&&(a=String(numeral().unformat(a)))}if(f.indexOf(\"number\")===-1&&(f+=\",number\"),f.indexOf(\"negative\")===-1&&0===a.indexOf(\"-\"))return!1;if(f.indexOf(\"range\")>-1&&(d=parseFloat(f.substring(f.indexOf(\"[\")+1,f.indexOf(\";\"))),e=parseFloat(f.substring(f.indexOf(\";\")+1,f.indexOf(\"]\"))),h=!0),\"\"!==i&&(j=!0),\",\"===g){if(a.indexOf(\".\")>-1)return!1;a=a.replace(\",\",\".\")}if(\"\"===a.replace(/[0-9-]/g,\"\")&&(!h||a>=d&&a<=e)&&(!j||a%i===0))return!0;if(f.indexOf(\"float\")>-1&&null!==a.match(new RegExp(\"^([0-9-]+)\\\\.([0-9]+)$\"))&&(!h||a>=d&&a<=e)&&(!j||a%i===0))return!0}return!1},errorMessage:\"\",errorMessageKey:\"badInt\"}),a.formUtils.addValidator({name:\"alphanumeric\",validatorFunction:function(b,c,d,e){var f=\"^([a-zA-Z0-9\",g=\"]+)$\",h=c.valAttr(\"allowing\"),i=\"\";if(h){i=f+h+g;var j=h.replace(/\\\\/g,\"\");j.indexOf(\" \")>-1&&(j=j.replace(\" \",\"\"),j+=e.andSpaces||a.formUtils.LANG.andSpaces),this.errorMessage=e.badAlphaNumeric+e.badAlphaNumericExtra+j}else i=f+g,this.errorMessage=e.badAlphaNumeric;return new RegExp(i).test(b)},errorMessage:\"\",errorMessageKey:\"\"}),a.formUtils.addValidator({name:\"custom\",validatorFunction:function(a,b){var c=new RegExp(b.valAttr(\"regexp\"));return c.test(a)},errorMessage:\"\",errorMessageKey:\"badCustomVal\"}),a.formUtils.addValidator({name:\"date\",validatorFunction:function(b,c,d){var e=c.valAttr(\"format\")||d.dateFormat||\"yyyy-mm-dd\",f=\"false\"===c.valAttr(\"require-leading-zero\");return a.formUtils.parseDate(b,e,f)!==!1},errorMessage:\"\",errorMessageKey:\"badDate\"}),a.formUtils.addValidator({name:\"checkbox_group\",validatorFunction:function(b,c,d,e,f){var g=!0,h=c.attr(\"name\"),i=a('input[type=checkbox][name^=\"'+h+'\"]',f),j=i.filter(\":checked\").length,k=c.valAttr(\"qty\");if(void 0===k){var l=c.get(0).nodeName;alert('Attribute \"data-validation-qty\" is missing from '+l+\" named \"+c.attr(\"name\"))}var m=a.formUtils.numericRangeCheck(j,k);switch(m[0]){case\"out\":this.errorMessage=e.groupCheckedRangeStart+k+e.groupCheckedEnd,g=!1;break;case\"min\":this.errorMessage=e.groupCheckedTooFewStart+m[1]+e.groupCheckedEnd,g=!1;break;case\"max\":this.errorMessage=e.groupCheckedTooManyStart+m[1]+e.groupCheckedEnd,g=!1;break;default:g=!0}if(!g){var n=function(){i.unbind(\"click\",n),i.filter(\"*[data-validation]\").validateInputOnBlur(e,d,!1,\"blur\");\n};i.bind(\"click\",n)}return g}})}(a)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/Gruntfile.js":"//TODO: During next major version bump change to /dist. Leaving at ./form-validator for backwards\n//compatibility\nconst DIST_DIR = './form-validator';\nconst MAIN_PLUGIN_FILE = 'jquery.form-validator';\nconst SRC_DIR = './src';\nconst MAIN_DIR = '/main/';\nconst MODULE_DIR = '/modules';\nconst LANG_DIR = '/lang';\nconst CSS_FILE = 'theme-default.css';\nconst CORE_VALIDATORS = 'core-validators.js'; //must come at end of concatted file\nconst coreValidatorsPath = SRC_DIR + MAIN_DIR + CORE_VALIDATORS;\n\nvar fs = require('fs'),\n  readFile = function (file) {\n    return fs.readFileSync(file, 'utf-8');\n  },\n  replaceInFile = function (path, from, to) {\n    fs.writeFileSync(path, readFile(path).replace(from, to));\n  };\n\nfunction initializeGruntConfig(grunt) {\n\n  grunt.initConfig({\n\n    // Import package manifest\n    pkg: grunt.file.readJSON(\"package.json\"),\n\n    // Banner definitions\n    meta: {\n      banner: \"/** File generated by Grunt -- do not modify\\n\" +\n      \" *  <%= (pkg.title || pkg.name).toUpperCase() %>\\n\" +\n      \" *\\n\" +\n      \" *  @version <%= pkg.version %>\\n\" +\n      \" *  @website <%= pkg.homepage %>\\n\" +\n      \" *  @author <%= pkg.author.name %>, <%= pkg.author.url %>\\n\" +\n      \" *  @license <%= pkg.license %>\\n\" +\n      \" */\\n\"\n    },\n\n    concat: {\n      main:{\n        files: [\n          //This concatenates the core validators file after the other files\n          //Per: http://gruntjs.com/configuring-tasks\n          {\n            src: [SRC_DIR + MAIN_DIR+'*.js', '!' + coreValidatorsPath, coreValidatorsPath],\n            dest: DIST_DIR + '/' + MAIN_PLUGIN_FILE + '.js'\n          },\n          {\n            src: [SRC_DIR + MAIN_DIR+'*.js', '!' + coreValidatorsPath, coreValidatorsPath],\n            dest: DIST_DIR + '/' + MAIN_PLUGIN_FILE + '.min.js'\n          }]\n      },\n      options: {\n        banner: \"<%= meta.banner %>\"\n      }\n    },\n\n    cssmin: {\n      target: {\n        files:   [\n          {\n            dest: DIST_DIR,\n            src: CSS_FILE,\n            cwd: SRC_DIR,\n            expand: true,\n            ext: '.min.css'\n          }\n        ]\n      }\n    },\n    // Lint definitions\n    jshint: {\n      files: [SRC_DIR + '/*'],\n      options: {\n        jshintrc: \".jshintrc\",\n        ignores: [SRC_DIR + '/' + CSS_FILE]\n      }\n    },\n\n    // Minify definitions\n    uglify: {\n      options: {\n        banner: \"<%= meta.banner %>\"\n      },\n      main: {\n        files: [\n          {\n            expand: true,\n            cwd: DIST_DIR + '/',\n            src: ['**/*.js', '!' + MAIN_PLUGIN_FILE +'.js'],\n            dest: DIST_DIR + '/'\n          }\n        ]\n      }\n    },\n\n    // watch for changes to source\n    // Better than calling grunt a million times\n    // (call 'grunt watch')\n    watch: {\n      files: [SRC_DIR + '/**'],\n      tasks: ['test'],\n      options: { nospawn: true}\n    },\n\n    // Unit tests\n    qunit: {\n      all: ['test/qunit.html']\n    },\n\n    // Standalone servers\n    connect: {\n      server: {\n        options: {\n          port: 8000,\n          base: '.',\n          keepalive: true\n        }\n      }\n    },\n\n    copy: {\n      main: {\n        files: [\n          {\n            src: SRC_DIR + '/' + CSS_FILE,\n            dest: DIST_DIR + '/' + CSS_FILE\n          },\n          {\n            cwd: SRC_DIR + '/' + MODULE_DIR,\n            src: '**',\n            dest: DIST_DIR  + '/',\n            expand: true\n          },\n          {\n            cwd: SRC_DIR + '/' + LANG_DIR,\n            src: '**',\n            dest: DIST_DIR + LANG_DIR +'/',\n            expand: true\n          }]\n      }\n    },\n\n    clean: [DIST_DIR + '/'],\n\n    umd: {\n      main: {\n        options: {\n          src: DIST_DIR + '/**/*.js',\n          dest: './',\n          deps: {\n            default: ['jQuery'],\n            amd: [{'jquery': 'jQuery'}],\n            cjs: [{'jquery': 'jQuery'}]\n          }\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = function (grunt) {\n\n  initializeGruntConfig(grunt);\n  /*\n   * Change to new version or the next version number. The project must be built again after this task\n   * in order for the version change to take effect.\n   */\n  grunt.registerTask('version', 'Bump up the version number, or change version name by adding --new-version=3.1.0', function () {\n    var pkg = grunt.config.get('pkg'),\n      currentVersion = pkg.version,\n      newVersion = grunt.option('new-version');\n\n    if (!newVersion) {\n      var versionParts = currentVersion.split('.'),\n        newSubVersion = parseInt(versionParts.splice(versionParts.length - 1, 1)[0]) + 1;\n      newSubVersion = newSubVersion < 10 && newSubVersion > 0 ? '0' + newSubVersion : newSubVersion.toString();\n      newVersion = versionParts.join('.') + '.' + newSubVersion;\n    }\n\n    grunt.log.writeln('* Moving from version ' + currentVersion + ' to ' + newVersion);\n\n    replaceInFile('package.json', '\"version\": \"' + currentVersion + '\"',\n      '\"version\": \"' + newVersion + '\"');\n    replaceInFile('formvalidator.jquery.json', '\"version\": \"' + currentVersion + '\"', '\"version\": \"' + newVersion + '\"');\n\n    // Set new version globally (can later on be used by concat/uglify)\n    pkg.version = newVersion;\n    grunt.config.set('pkg', pkg);\n  });\n\n  grunt.loadNpmTasks('grunt-contrib-clean');\n  grunt.loadNpmTasks(\"grunt-contrib-concat\");\n  grunt.loadNpmTasks('grunt-contrib-copy');\n  grunt.loadNpmTasks(\"grunt-contrib-jshint\");\n  grunt.loadNpmTasks(\"grunt-contrib-uglify\");\n  grunt.loadNpmTasks(\"grunt-contrib-watch\");\n  grunt.loadNpmTasks('grunt-contrib-connect');\n  grunt.loadNpmTasks('grunt-contrib-qunit');\n  grunt.loadNpmTasks('grunt-contrib-cssmin');\n  grunt.loadNpmTasks('grunt-umd');\n\n  grunt.registerTask(\"build-production\", [\"version\", \"test\", \"uglify\"]);\n  grunt.registerTask('test', ['concat', 'copy', 'umd', 'cssmin','jshint', 'qunit']);\n  grunt.registerTask(\"default\", [\"test\", \"watch\"]);\n  grunt.registerTask(\"prepublish\", [\"test\", \"uglify\"]);\n};\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/brazil.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){$.formUtils.addValidator({name:\"cpf\",validatorFunction:function(a){var b=a.replace(/\\D/g,\"\"),c=0,d=0,e=0,f=0;if(11!==b.length||\"00000000000\"===b)return!1;for(i=1;i<=9;i++)c+=parseInt(b.substring(i-1,i))*(11-i);if(e=10*c%11,e>=10&&(e=0),e!==parseInt(b.substring(9,10)))return!1;for(i=1;i<=10;i++)d+=parseInt(b.substring(i-1,i))*(12-i);return f=10*d%11,f>=10&&(f=0),f===parseInt(b.substring(10,11))},errorMessage:\"\",errorMessageKey:\"badBrazilCPFAnswer\"}),$.formUtils.addValidator({name:\"brphone\",validatorFunction:function(a){return!!a.match(/^(\\+[\\d]{1,3}[\\s]{0,1}){0,1}(\\(){0,1}(\\d){2}(\\)){0,1}(\\s){0,1}(\\d){4,5}([-. ]){0,1}(\\d){4}$/g)},errorMessage:\"\",errorMessageKey:\"badBrazilTelephoneAnswer\"}),$.formUtils.addValidator({name:\"cep\",validatorFunction:function(a){return!!a.match(/^(\\d){5}([-. ]){0,1}(\\d){3}$/g)},errorMessage:\"\",errorMessageKey:\"badBrazilCEPAnswer\"})});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/date.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a){a.formUtils.addValidator({name:\"time\",validatorFunction:function(a){if(null===a.match(/^(\\d{2}):(\\d{2})$/))return!1;var b=parseInt(a.split(\":\")[0],10),c=parseInt(a.split(\":\")[1],10);return!(b>23||c>59)},errorMessage:\"\",errorMessageKey:\"badTime\"}),a.formUtils.addValidator({name:\"birthdate\",validatorFunction:function(b,c,d){var e=\"yyyy-mm-dd\";c.valAttr(\"format\")?e=c.valAttr(\"format\"):\"undefined\"!=typeof d.dateFormat&&(e=d.dateFormat);var f=a.formUtils.parseDate(b,e);if(!f)return!1;var g=new Date,h=g.getFullYear(),i=f[0],j=f[1],k=f[2];if(i===h){var l=g.getMonth()+1;if(j===l){var m=g.getDate();return k<=m}return j<l}return i<h&&i>h-124},errorMessage:\"\",errorMessageKey:\"badDate\"})}(a)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/file.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";var c=\"undefined\"!=typeof b.FileReader,d=function(b){var c=a.split((b.valAttr(\"allowing\")||\"\").toLowerCase());return a.inArray(\"jpg\",c)>-1&&a.inArray(\"jpeg\",c)===-1?c.push(\"jpeg\"):a.inArray(\"jpeg\",c)>-1&&a.inArray(\"jpg\",c)===-1&&c.push(\"jpg\"),c},e=function(a,b,c,d){var e=d[b]||\"\";a.errorMessageKey=\"\",a.errorMessage=e.replace(\"%s\",c)},f=function(c,d,e){var f=new FileReader,g=new Image;f.readAsDataURL(c),f.onload=function(c){g.onload=function(){a(b).trigger(\"imageValidation\",[this]),d(this)},g.onerror=function(){e()},g.src=c.target.result}};a.formUtils.addValidator({name:\"mime\",validatorFunction:function(b,f,g,h){if(c){var i=!0,j=f.get(0).files||[],k=\"\",l=d(f);return j.length&&(a.each(j,function(b,c){return i=!1,k=c.type||c.name.substring(c.name.lastIndexOf(\".\")+1),a.each(l,function(a,b){if(i=k.indexOf(b)>-1)return!1}),i}),i||(a.formUtils.warn(\"Trying to upload a file with mime type \"+k+\" which is not allowed\"),e(this,\"wrongFileType\",l.join(\", \"),h))),i}return a.formUtils.warn(\"FileReader not supported by browser, will check file extension\"),a.formUtils.validators.validate_extension.validatorFunction(b,f,g,h)},errorMessage:\"\",errorMessageKey:\"wrongFileType\"}),a.formUtils.addValidator({name:\"extension\",validatorFunction:function(b,c,f,g){var h=!0,i=this,j=d(c);return a.each(c.get(0).files||[b],function(b,c){var d=\"string\"==typeof c?c:c.value||c.fileName||c.name,f=d.substr(d.lastIndexOf(\".\")+1);if(a.inArray(f.toLowerCase(),j)===-1)return h=!1,e(i,\"wrongFileType\",j.join(\", \"),g),!1}),h},errorMessage:\"\",errorMessageKey:\"wrongFileType\"}),a.formUtils.addValidator({name:\"size\",validatorFunction:function(b,d,f,g){var h=d.valAttr(\"max-size\");if(!h)return a.formUtils.warn('Input \"'+d.attr(\"name\")+'\" is missing data-validation-max-size attribute'),!0;if(!c)return!0;var i=a.formUtils.convertSizeNameToBytes(h),j=!0;return a.each(d.get(0).files||[],function(a,b){return j=b.size<=i}),j||e(this,\"wrongFileSize\",h,g),j},errorMessage:\"\",errorMessageKey:\"wrongFileSize\"}),a.formUtils.convertSizeNameToBytes=function(a){return a=a.toUpperCase(),\"M\"===a.substr(a.length-1,1)?1024*parseInt(a.substr(0,a.length-1),10)*1024:\"MB\"===a.substr(a.length-2,2)?1024*parseInt(a.substr(0,a.length-2),10)*1024:\"KB\"===a.substr(a.length-2,2)?1024*parseInt(a.substr(0,a.length-2),10):\"B\"===a.substr(a.length-1,1)?parseInt(a.substr(0,a.length-1),10):parseInt(a,10)},a.formUtils.checkImageDimension=function(a,b,c){var d=!1,e={width:0,height:0},f=function(a){a=a.replace(\"min\",\"\").replace(\"max\",\"\");var b=a.split(\"x\");e.width=b[0],e.height=b[1]?b[1]:b[0]},g=!1,h=!1,i=b.split(\"-\");return 1===i.length?0===i[0].indexOf(\"min\")?g=i[0]:h=i[0]:(g=i[0],h=i[1]),g&&(f(g),(a.width<e.width||a.height<e.height)&&(d=c.imageTooSmall+\" (\"+c.min+\" \"+e.width+\"x\"+e.height+\"px)\")),!d&&h&&(f(h),(a.width>e.width||a.height>e.height)&&(d=a.width>e.width?c.imageTooWide+\" \"+e.width+\"px\":c.imageTooTall+\" \"+e.height+\"px\",d+=\" (\"+c.max+\" \"+e.width+\"x\"+e.height+\"px)\")),d},a.formUtils.checkImageRatio=function(a,b,c){var d=a.width/a.height,e=function(a){var b=a.replace(\"max\",\"\").replace(\"min\",\"\").split(\":\");return b[0]/b[1]},f=b.split(\"-\"),g=function(a,b,c){return a>=b&&a<=c};if(1===f.length){if(d!==e(f[0]))return c.imageRatioNotAccepted}else if(2===f.length&&!g(d,e(f[0]),e(f[1])))return c.imageRatioNotAccepted;return!1},a.formUtils.addValidator({name:\"dimension\",validatorFunction:function(b,d,e,g,h,i){if(c){var j=this,k=a.formUtils.asyncValidation(this.name,d,h);return k.run(i,function(b){var c=d.get(0).files||[];d.attr(\"data-validation\").indexOf(\"mime\")===-1?(alert(\"You should validate file type being jpg, gif or png on input \"+d[0].name),b(!1)):c.length>1?(alert(\"Validating image dimensions does not support inputs allowing multiple files\"),b(!1)):0===c.length?b(!0):f(c[0],function(c){var e=!1;d.valAttr(\"dimension\")&&(e=a.formUtils.checkImageDimension(c,d.valAttr(\"dimension\"),g)),!e&&d.valAttr(\"ratio\")&&(e=a.formUtils.checkImageRatio(c,d.valAttr(\"ratio\"),g)),e?(j.errorMessage=g.wrongFileDim+\" \"+d.valAttr(\"has-not-valid-dim\"),b(!1)):b(!0)},function(a){throw a})})}return!0},errorMessage:\"\",errorMessageKey:\"\"}),a(b).one(\"validatorsLoaded formValidationSetup\",function(b,c,d){var e;e=c?c.find('input[type=\"file\"]'):a('input[type=\"file\"]'),a.formUtils.dialogs.removeInputStylingAndMessage(e,d)})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/html5.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a){\"use strict\";var b=\"placeholder\"in document.createElement(\"INPUT\"),c=\"options\"in document.createElement(\"DATALIST\"),d=!1,e=function(e){e.each(function(){var e=a(this),f=e.find(\"input,textarea,select\"),g=!1;f.each(function(){var b=[],e=a(this),f=e.attr(\"required\"),h={};switch(f&&b.push(\"required\"),(e.attr(\"type\")||\"\").toLowerCase()){case\"time\":b.push(\"time\"),a.formUtils.validators.validate_date||d||(d=!0,a.formUtils.loadModules(\"date\"));break;case\"url\":b.push(\"url\");break;case\"email\":b.push(\"email\");break;case\"date\":b.push(\"date\");break;case\"number\":b.push(\"number\");var i=e.attr(\"max\"),j=e.attr(\"min\"),k=e.attr(\"step\");j||i?(j||(j=\"0\"),i||(i=\"9007199254740992\"),k||(k=\"1\"),h[\"data-validation-allowing\"]=\"range[\"+j+\";\"+i+\"]\",0!==j.indexOf(\"-\")&&0!==i.indexOf(\"-\")||(h[\"data-validation-allowing\"]+=\",negative\"),(j.indexOf(\".\")>-1||i.indexOf(\".\")>-1||k.indexOf(\".\")>-1)&&(h[\"data-validation-allowing\"]+=\",float\")):h[\"data-validation-allowing\"]+=\",float,negative\"}if(e.attr(\"pattern\")&&(b.push(\"custom\"),h[\"data-validation-regexp\"]=e.attr(\"pattern\")),e.attr(\"maxlength\")&&(b.push(\"length\"),h[\"data-validation-length\"]=\"max\"+e.attr(\"maxlength\")),!c&&e.attr(\"list\")){var l=[],m=a(\"#\"+e.attr(\"list\"));if(m.find(\"option\").each(function(){l.push(a(this).text())}),0===l.length){var n=a.trim(a(\"#\"+e.attr(\"list\")).text()).split(\"\\n\");a.each(n,function(b,c){l.push(a.trim(c))})}m.remove(),a.formUtils.suggest(e,l)}if(b.length){f||(h[\"data-validation-optional\"]=\"true\"),g=!0;var o=(e.attr(\"data-validation\")||\"\")+\" \"+b.join(\" \");e.attr(\"data-validation\",a.trim(o)),a.each(h,function(a,b){e.attr(a,b)})}}),g&&e.trigger(\"html5ValidationAttrsFound\"),b||f.filter(\"input[placeholder]\").each(function(){this.__defaultValue=this.getAttribute(\"placeholder\"),a(this).bind(\"focus\",function(){this.value===this.__defaultValue&&(this.value=\"\",a(this).removeClass(\"showing-placeholder\"))}).bind(\"blur\",function(){\"\"===a.trim(this.value)&&(this.value=this.__defaultValue,a(this).addClass(\"showing-placeholder\"))})})})};a.formUtils.$win.bind(\"validatorsLoaded formValidationSetup\",function(b,c){c||(c=a(\"form\")),e(c)}),a.formUtils.setupValidationUsingHTML5Attr=e}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/jquery.form-validator.js":"(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([\"jquery\"], function (a0) {\n      return (factory(a0));\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"jquery\"));\n  } else {\n    factory(root[\"jQuery\"]);\n  }\n}(this, function (jQuery) {\n\n/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n/**\n */\n(function ($, undefined) {\n\n  var disableFormSubmit = function () {\n      return false;\n    },\n    HaltManager = {\n      numHalted: 0,\n      haltValidation: function($form) {\n        this.numHalted++;\n        $.formUtils.haltValidation = true;\n        $form\n          .unbind('submit', disableFormSubmit)\n          .bind('submit', disableFormSubmit)\n          .find('*[type=\"submit\"]')\n            .addClass('disabled')\n            .attr('disabled', 'disabled');\n      },\n      unHaltValidation: function($form) {\n        this.numHalted--;\n        if (this.numHalted === 0) {\n          $.formUtils.haltValidation = false;\n          $form\n            .unbind('submit', disableFormSubmit)\n            .find('*[type=\"submit\"]')\n              .removeClass('disabled')\n              .removeAttr('disabled', 'disabled');\n        }\n      }\n    };\n\n  function AsyncValidation($form, $input) {\n    this.$form = $form;\n    this.$input = $input;\n    this.reset();\n    $input.on('change paste', this.reset.bind(this));\n  }\n\n  AsyncValidation.prototype.reset = function() {\n    this.haltedFormValidation = false;\n    this.hasRun = false;\n    this.isRunning = false;\n    this.result = undefined;\n  };\n\n  AsyncValidation.prototype.run = function(eventContext, callback) {\n    if (eventContext === 'keyup') {\n      return null;\n    } else if (this.isRunning) {\n      if (!this.haltedFormValidation && eventContext === 'submit') {\n        HaltManager.haltValidation();\n        this.haltedFormValidation = true;\n      }\n      return null; // Waiting for result\n    } else if(this.hasRun) {\n      //this.$input.one('keyup change paste', this.reset.bind(this));\n      return this.result;\n    } else {\n      if (eventContext === 'submit') {\n        HaltManager.haltValidation(this.$form);\n        this.haltedFormValidation = true;\n      }\n      this.isRunning = true;\n      this.$input\n        .attr('disabled', 'disabled')\n        .addClass('async-validation');\n      this.$form.addClass('async-validation');\n\n      callback(function(result) {\n        this.done(result);\n      }.bind(this));\n\n      return null;\n    }\n  };\n\n  AsyncValidation.prototype.done = function(result) {\n    this.result = result;\n    this.hasRun = true;\n    this.isRunning = false;\n    this.$input\n      .removeAttr('disabled')\n      .removeClass('async-validation');\n    this.$form.removeClass('async-validation');\n    if (this.haltedFormValidation) {\n      HaltManager.unHaltValidation(this.$form);\n      this.$form.trigger('submit');\n    } else {\n      this.$input.trigger('validation.revalidate');\n    }\n  };\n\n  $.formUtils = $.extend($.formUtils || {}, {\n    asyncValidation: function(validatorName, $input, $form) {\n      // Return async validator attached to this input element\n      // or create a new async validator and attach it to the input\n      var asyncValidation,\n        input = $input.get(0);\n\n      if (!input.asyncValidators) {\n        input.asyncValidators = {};\n      }\n\n      if (input.asyncValidators[validatorName]) {\n        asyncValidation = input.asyncValidators[validatorName];\n      } else {\n        asyncValidation = new AsyncValidation($form, $input);\n        input.asyncValidators[validatorName] = asyncValidation;\n      }\n\n      return asyncValidation;\n    }\n  });\n\n})(jQuery);\n\n/**\n * Deprecated functions and attributes\n * @todo: Remove in release of 3.0\n */\n(function ($, undefined) {\n\n  'use strict';\n\n  /**\n   * @deprecated\n   * @param language\n   * @param conf\n   */\n  $.fn.validateForm = function (language, conf) {\n    $.formUtils.warn('Use of deprecated function $.validateForm, use $.isValid instead');\n    return this.isValid(language, conf, true);\n  };\n\n  $(window)\n    .on('formValidationPluginInit', function(evt, config) {\n      convertDeprecatedLangCodeToISO6391(config);\n      addSupportForCustomErrorMessageCallback(config);\n      addSupportForElementReferenceInPositionParam(config);\n    })\n    .on('validatorsLoaded formValidationSetup', function(evt, $form) {\n      if( !$form ) {\n        $form = $('form');\n      }\n      addSupportForValidationDependingOnCheckedInput($form);\n    });\n\n\n  function addSupportForCustomErrorMessageCallback(config) {\n    if (config &&\n        config.errorMessagePosition === 'custom' &&\n        typeof config.errorMessageCustom === 'function') {\n\n      $.formUtils.warn('Use of deprecated function errorMessageCustom, use config.submitErrorMessageCallback instead');\n\n      config.submitErrorMessageCallback = function($form, errorMessages) {\n        config.errorMessageCustom(\n            $form,\n            config.language.errorTitle,\n            errorMessages,\n            config\n        );\n      };\n    }\n  }\n\n  function addSupportForElementReferenceInPositionParam(config) {\n    if (config.errorMessagePosition && typeof config.errorMessagePosition === 'object') {\n      $.formUtils.warn('Deprecated use of config parameter errorMessagePosition, use config.submitErrorMessageCallback instead');\n      var $errorMessageContainer = config.errorMessagePosition;\n      config.errorMessagePosition = 'top';\n      config.submitErrorMessageCallback = function() {\n        return $errorMessageContainer;\n      };\n    }\n  }\n\n  function addSupportForValidationDependingOnCheckedInput($form) {\n    var $inputsDependingOnCheckedInputs = $form.find('[data-validation-if-checked]');\n    if ($inputsDependingOnCheckedInputs.length) {\n      $.formUtils.warn(\n        'Detected use of attribute \"data-validation-if-checked\" which is '+\n        'deprecated. Use \"data-validation-depends-on\" provided by module \"logic\"'\n      );\n    }\n\n    $inputsDependingOnCheckedInputs\n      .on('beforeValidation', function() {\n\n        var $elem = $(this),\n          nameOfDependingInput = $elem.valAttr('if-checked');\n\n        // Set the boolean telling us that the validation depends\n        // on another input being checked\n        var $dependingInput = $('input[name=\"' + nameOfDependingInput + '\"]', $form),\n          dependingInputIsChecked = $dependingInput.is(':checked'),\n          valueOfDependingInput = ($.formUtils.getValue($dependingInput) || '').toString(),\n          requiredValueOfDependingInput = $elem.valAttr('if-checked-value');\n\n        if (!dependingInputIsChecked || !(\n              !requiredValueOfDependingInput ||\n              requiredValueOfDependingInput === valueOfDependingInput\n          )) {\n          $elem.valAttr('skipped', true);\n        }\n\n      });\n    }\n\n    function convertDeprecatedLangCodeToISO6391(config) {\n      var deprecatedLangCodes = {\n        se: 'sv',\n        cz: 'cs',\n        dk: 'da'\n      };\n\n      if (config.lang in deprecatedLangCodes) {\n        var newLangCode = deprecatedLangCodes[config.lang];\n        $.formUtils.warn(\n          'Deprecated use of lang code \"'+config.lang+'\" use \"'+newLangCode+'\" instead'\n        );\n        config.lang = newLangCode;\n      }\n    }\n\n})(jQuery);\n\n/**\n * Utility methods used for displaying error messages (attached to $.formUtils)\n */\n(function ($) {\n\n  'use strict';\n\n  var dialogs = {\n\n    resolveErrorMessage: function($elem, validator, validatorName, conf, language) {\n      var errorMsgAttr = conf.validationErrorMsgAttribute + '-' + validatorName.replace('validate_', ''),\n        validationErrorMsg = $elem.attr(errorMsgAttr);\n\n      if (!validationErrorMsg) {\n        validationErrorMsg = $elem.attr(conf.validationErrorMsgAttribute);\n        if (!validationErrorMsg) {\n          if (typeof validator.errorMessageKey !== 'function') {\n            validationErrorMsg = language[validator.errorMessageKey];\n          }\n          else {\n            validationErrorMsg = language[validator.errorMessageKey(conf)];\n          }\n          if (!validationErrorMsg) {\n            validationErrorMsg = validator.errorMessage;\n          }\n        }\n      }\n      return validationErrorMsg;\n    },\n    getParentContainer: function ($elem) {\n      if ($elem.valAttr('error-msg-container')) {\n        return $($elem.valAttr('error-msg-container'));\n      } else {\n        var $parent = $elem.parent();\n        if (!$parent.hasClass('form-group') && !$parent.closest('form').hasClass('form-horizontal')) {\n          var $formGroup = $parent.closest('.form-group');\n          if ($formGroup.length) {\n            return $formGroup.eq(0);\n          }\n        }\n        return $parent;\n      }\n    },\n    applyInputErrorStyling: function ($input, conf) {\n      $input\n        .addClass(conf.errorElementClass)\n        .removeClass(conf.successElementClass);\n\n      this.getParentContainer($input)\n        .addClass(conf.inputParentClassOnError)\n        .removeClass(conf.inputParentClassOnSuccess);\n\n      if (conf.borderColorOnError !== '') {\n        $input.css('border-color', conf.borderColorOnError);\n      }\n    },\n    applyInputSuccessStyling: function($input, conf) {\n      $input.addClass('valid');\n      this.getParentContainer($input)\n        .addClass(conf.inputParentClassOnSuccess);\n    },\n    removeInputStylingAndMessage: function($input, conf) {\n\n      // Reset input css\n      $input\n        .removeClass(conf.successElementClass)\n        .removeClass(conf.errorElementClass)\n        .css('border-color', '');\n\n      var $parentContainer = dialogs.getParentContainer($input);\n\n      // Reset parent css\n      $parentContainer\n        .removeClass(conf.inputParentClassOnError)\n        .removeClass(conf.inputParentClassOnSuccess);\n\n      // Remove possible error message\n      if (typeof conf.inlineErrorMessageCallback === 'function') {\n        var $errorMessage = conf.inlineErrorMessageCallback($input, false, conf);\n        if ($errorMessage) {\n          $errorMessage.html('');\n        }\n      } else {\n        $parentContainer\n          .find('.' + conf.errorMessageClass)\n          .remove();\n      }\n\n    },\n    removeAllMessagesAndStyling: function($form, conf) {\n\n      // Remove error messages in top of form\n      if (typeof conf.submitErrorMessageCallback === 'function') {\n        var $errorMessagesInTopOfForm = conf.submitErrorMessageCallback($form, false, conf);\n        if ($errorMessagesInTopOfForm) {\n          $errorMessagesInTopOfForm.html('');\n        }\n      } else {\n        $form.find('.' + conf.errorMessageClass + '.alert').remove();\n      }\n\n      // Remove input css/messages\n      $form.find('.' + conf.errorElementClass + ',.' + conf.successElementClass).each(function() {\n        dialogs.removeInputStylingAndMessage($(this), conf);\n      });\n    },\n    setInlineMessage: function ($input, errorMsg, conf) {\n\n      this.applyInputErrorStyling($input, conf);\n\n      var custom = document.getElementById($input.attr('name') + '_err_msg'),\n        $messageContainer = false,\n        setErrorMessage = function ($elem) {\n          $.formUtils.$win.trigger('validationErrorDisplay', [$input, $elem]);\n          $elem.html(errorMsg);\n        },\n        addErrorToMessageContainer = function() {\n          var $found = false;\n          $messageContainer.find('.' + conf.errorMessageClass).each(function () {\n            if (this.inputReferer === $input[0]) {\n              $found = $(this);\n              return false;\n            }\n          });\n          if ($found) {\n            if (!errorMsg) {\n              $found.remove();\n            } else {\n              setErrorMessage($found);\n            }\n          } else if(errorMsg !== '') {\n            $message = $('<div class=\"' + conf.errorMessageClass + ' alert\"></div>');\n            setErrorMessage($message);\n            $message[0].inputReferer = $input[0];\n            $messageContainer.prepend($message);\n          }\n        },\n        $message;\n\n      if (custom) {\n        // Todo: remove in 3.0\n        $.formUtils.warn('Using deprecated element reference ' + custom.id);\n        $messageContainer = $(custom);\n        addErrorToMessageContainer();\n      } else if (typeof conf.inlineErrorMessageCallback === 'function') {\n        $messageContainer = conf.inlineErrorMessageCallback($input, errorMsg, conf);\n        if (!$messageContainer) {\n          // Error display taken care of by inlineErrorMessageCallback\n          return;\n        }\n        addErrorToMessageContainer();\n      } else {\n        var $parent = this.getParentContainer($input);\n        $message = $parent.find('.' + conf.errorMessageClass + '.help-block');\n        if ($message.length === 0) {\n          $message = $('<span></span>').addClass('help-block').addClass(conf.errorMessageClass);\n          $message.appendTo($parent);\n        }\n        setErrorMessage($message);\n      }\n    },\n    setMessageInTopOfForm: function ($form, errorMessages, conf, lang) {\n      var view = '<div class=\"{errorMessageClass} alert alert-danger\">'+\n                    '<strong>{errorTitle}</strong>'+\n                    '<ul>{fields}</ul>'+\n                '</div>',\n          $container = false;\n\n      if (typeof conf.submitErrorMessageCallback === 'function') {\n        $container = conf.submitErrorMessageCallback($form, errorMessages, conf);\n        if (!$container) {\n          // message display taken care of by callback\n          return;\n        }\n      }\n\n      var viewParams = {\n            errorTitle: lang.errorTitle,\n            fields: '',\n            errorMessageClass: conf.errorMessageClass\n          };\n\n      $.each(errorMessages, function (i, msg) {\n        viewParams.fields += '<li>'+msg+'</li>';\n      });\n\n      $.each(viewParams, function(param, value) {\n        view = view.replace('{'+param+'}', value);\n      });\n\n      if ($container) {\n        $container.html(view);\n      } else {\n        $form.children().eq(0).before($(view));\n      }\n    }\n  };\n\n  $.formUtils = $.extend($.formUtils || {}, {\n    dialogs: dialogs\n  });\n\n})(jQuery);\n\n/**\n * File declaring all methods if this plugin which is applied to $.fn.\n */\n(function($, window, undefined) {\n\n  'use strict';\n\n  var _helpers = 0;\n\n\n  /**\n   * Assigns validateInputOnBlur function to elements blur event\n   *\n   * @param {Object} language Optional, will override $.formUtils.LANG\n   * @param {Object} conf Optional, will override the default settings\n   * @return {jQuery}\n   */\n  $.fn.validateOnBlur = function (language, conf) {\n    var $form = this,\n        $elems = this.find('*[data-validation]');\n\n    $elems.each(function(){\n      var $this = $(this);\n      if ($this.is('[type=radio]')){\n        var $additionals = $form.find('[type=radio][name=\"' + $this.attr('name') + '\"]');\n        $additionals.bind('blur.validation', function(){\n          $this.validateInputOnBlur(language, conf, true, 'blur');\n        });\n        if (conf.validateCheckboxRadioOnClick) {\n          $additionals.bind('click.validation', function () {\n            $this.validateInputOnBlur(language, conf, true, 'click');\n          });\n        }\n      }\n    });\n\n    $elems.bind('blur.validation', function () {\n      $(this).validateInputOnBlur(language, conf, true, 'blur');\n    });\n\n    if (conf.validateCheckboxRadioOnClick) {\n      // bind click event to validate on click for radio & checkboxes for nice UX\n      this.find('input[type=checkbox][data-validation],input[type=radio][data-validation]')\n        .bind('click.validation', function () {\n          $(this).validateInputOnBlur(language, conf, true, 'click');\n        });\n    }\n\n    return this;\n  };\n\n  /*\n   * Assigns validateInputOnBlur function to elements custom event\n   * @param {Object} language Optional, will override $.formUtils.LANG\n   * @param {Object} settings Optional, will override the default settings\n   * * @return {jQuery}\n   */\n  $.fn.validateOnEvent = function (language, config) {\n    var $elements = this[0].nodeName === 'FORM' ? this.find('*[data-validation-event]') : this;\n    $elements\n      .each(function () {\n        var $el = $(this),\n          etype = $el.valAttr('event');\n        if (etype) {\n          $el\n            .unbind(etype + '.validation')\n            .bind(etype + '.validation', function (evt) {\n              if( (evt || {}).keyCode !== 9 ) {\n                $(this).validateInputOnBlur(language, config, true, etype);\n              }\n            });\n        }\n      });\n    return this;\n  };\n\n  /**\n   * fade in help message when input gains focus\n   * fade out when input loses focus\n   * <input data-help=\"The info that I want to display for the user when input is focused\" ... />\n   *\n   * @param {String} attrName - Optional, default is data-help\n   * @return {jQuery}\n   */\n  $.fn.showHelpOnFocus = function (attrName) {\n    if (!attrName) {\n      attrName = 'data-validation-help';\n    }\n\n    // Add help text listeners\n    this.find('textarea,input').each(function () {\n      var $elem = $(this),\n        className = 'jquery_form_help_' + (++_helpers),\n        help = $elem.attr(attrName);\n\n      // Reset\n      $elem\n        .removeClass('has-help-text')\n        .unbind('focus.help')\n        .unbind('blur.help');\n\n      if (help) {\n        $elem\n          .addClass('has-help-txt')\n          .bind('focus.help', function () {\n            var $help = $elem.parent().find('.' + className);\n            if ($help.length === 0) {\n              $help = $('<span />')\n                .addClass(className)\n                .addClass('help')\n                .addClass('help-block') // twitter bs\n                .text(help)\n                .hide();\n\n              $elem.after($help);\n            }\n            $help.fadeIn();\n          })\n          .bind('blur.help', function () {\n            $(this)\n              .parent()\n              .find('.' + className)\n              .fadeOut('slow');\n          });\n      }\n    });\n\n    return this;\n  };\n\n  /**\n   * @param {Function} cb\n   * @param {Object} [conf]\n   * @param {Object} [lang]\n   */\n  $.fn.validate = function(cb, conf, lang) {\n    var language = $.extend({}, $.formUtils.LANG, lang || {});\n    this.each(function() {\n      var $elem = $(this),\n        $closestForm = $elem.closest('form').get(0) || {},\n        formDefaultConfig = $closestForm.validationConfig || {};\n\n      $elem.one('validation', function(evt, isValid) {\n        if ( typeof cb === 'function' ) {\n          cb(isValid, this, evt);\n        }\n      });\n\n      $elem.validateInputOnBlur(\n        language,\n        $.extend({}, formDefaultConfig, conf || {}),\n        true\n      );\n    });\n  };\n\n  /**\n   * Tells whether or not validation of this input will have to postpone the form submit ()\n   * @returns {Boolean}\n   */\n  $.fn.willPostponeValidation = function() {\n    return (this.valAttr('suggestion-nr') ||\n      this.valAttr('postpone') ||\n      this.hasClass('hasDatepicker')) &&\n      !window.postponedValidation;\n  };\n\n  /**\n   * Validate single input when it loses focus\n   * shows error message in a span element\n   * that is appended to the parent element\n   *\n   * @param {Object} [language] Optional, will override $.formUtils.LANG\n   * @param {Object} [conf] Optional, will override the default settings\n   * @param {Boolean} attachKeyupEvent Optional\n   * @param {String} eventContext\n   * @return {jQuery}\n   */\n  $.fn.validateInputOnBlur = function (language, conf, attachKeyupEvent, eventContext) {\n\n    $.formUtils.eventType = eventContext;\n\n    if ( this.willPostponeValidation() ) {\n      // This validation has to be postponed\n      var _self = this,\n        postponeTime = this.valAttr('postpone') || 200;\n\n      window.postponedValidation = function () {\n        _self.validateInputOnBlur(language, conf, attachKeyupEvent, eventContext);\n        window.postponedValidation = false;\n      };\n\n      setTimeout(function () {\n        if (window.postponedValidation) {\n          window.postponedValidation();\n        }\n      }, postponeTime);\n\n      return this;\n    }\n\n    language = $.extend({}, $.formUtils.LANG, language || {});\n    $.formUtils.dialogs.removeInputStylingAndMessage(this, conf);\n\n    var $elem = this,\n      $form = $elem.closest('form'),\n      result = $.formUtils.validateInput(\n        $elem,\n        language,\n        conf,\n        $form,\n        eventContext\n      );\n\n    var reValidate = function() {\n      $elem.validateInputOnBlur(language, conf, false, 'blur.revalidated');\n    };\n\n    if (eventContext === 'blur') {\n      $elem\n        .unbind('validation.revalidate', reValidate)\n        .one('validation.revalidate', reValidate);\n    }\n\n    if (attachKeyupEvent) {\n      $elem.removeKeyUpValidation();\n    }\n\n    if (result.shouldChangeDisplay) {\n      if (result.isValid) {\n        $.formUtils.dialogs.applyInputSuccessStyling($elem, conf);\n      } else {\n        $.formUtils.dialogs.setInlineMessage($elem, result.errorMsg, conf);\n      }\n    }\n\n    if (!result.isValid && attachKeyupEvent) {\n      $elem.validateOnKeyUp(language, conf);\n    }\n\n    return this;\n  };\n\n  /**\n   * Validate element on keyup-event\n   */\n  $.fn.validateOnKeyUp = function(language, conf) {\n    this.each(function() {\n      var $input = $(this);\n      if (!$input.valAttr('has-keyup-event')) {\n        $input\n          .valAttr('has-keyup-event', 'true')\n          .bind('keyup.validation', function (evt) {\n            if( evt.keyCode !== 9 ) {\n              $input.validateInputOnBlur(language, conf, false, 'keyup');\n            }\n          });\n      }\n    });\n    return this;\n  };\n\n  /**\n   * Remove validation on keyup\n   */\n  $.fn.removeKeyUpValidation = function() {\n    this.each(function() {\n      $(this)\n        .valAttr('has-keyup-event', false)\n        .unbind('keyup.validation');\n    });\n    return this;\n  };\n\n  /**\n   * Short hand for fetching/adding/removing element attributes\n   * prefixed with 'data-validation-'\n   *\n   * @param {String} name\n   * @param {String|Boolean} [val]\n   * @return {String|undefined|jQuery}\n   * @protected\n   */\n  $.fn.valAttr = function (name, val) {\n    if (val === undefined) {\n      return this.attr('data-validation-' + name);\n    } else if (val === false || val === null) {\n      return this.removeAttr('data-validation-' + name);\n    } else {\n      name = ((name.length > 0) ? '-' + name : '');\n      return this.attr('data-validation' + name, val);\n    }\n  };\n\n  /**\n   * Function that validates all inputs in active form\n   *\n   * @param {Object} [language]\n   * @param {Object} [conf]\n   * @param {Boolean} [displayError] Defaults to true\n   */\n  $.fn.isValid = function (language, conf, displayError) {\n\n    if ($.formUtils.isLoadingModules) {\n      var $self = this;\n      setTimeout(function () {\n        $self.isValid(language, conf, displayError);\n      }, 200);\n      return null;\n    }\n\n    conf = $.extend({}, $.formUtils.defaultConfig(), conf || {});\n    language = $.extend({}, $.formUtils.LANG, language || {});\n    displayError = displayError !== false;\n\n    if ($.formUtils.errorDisplayPreventedWhenHalted) {\n      // isValid() was called programmatically with argument displayError set\n      // to false when the validation was halted by any of the validators\n      delete $.formUtils.errorDisplayPreventedWhenHalted;\n      displayError = false;\n    }\n\n    /**\n     * Adds message to error message stack if not already in the message stack\n     *\n     * @param {String} mess\n     * @para {jQuery} $elem\n     */\n    var addErrorMessage = function (mess, $elem) {\n        if ($.inArray(mess, errorMessages) < 0) {\n          errorMessages.push(mess);\n        }\n        errorInputs.push($elem);\n        $elem.valAttr('current-error', mess);\n        if (displayError) {\n          $.formUtils.dialogs.applyInputErrorStyling($elem, conf);\n        }\n      },\n\n      /** Holds inputs (of type checkox or radio) already validated, to prevent recheck of mulitple checkboxes & radios */\n      checkedInputs = [],\n\n      /** Error messages for this validation */\n      errorMessages = [],\n\n      /** Input elements which value was not valid */\n      errorInputs = [],\n\n      /** Form instance */\n      $form = this,\n\n      /**\n       * Tells whether or not to validate element with this name and of this type\n       *\n       * @param {String} name\n       * @param {String} type\n       * @return {Boolean}\n       */\n      ignoreInput = function (name, type) {\n        if (type === 'submit' || type === 'button' || type === 'reset') {\n          return true;\n        }\n        return $.inArray(name, conf.ignore || []) > -1;\n      };\n\n    // Reset style and remove error class\n    if (displayError) {\n      $.formUtils.dialogs.removeAllMessagesAndStyling($form, conf);\n    }\n\n    // Validate element values\n    $form.find('input,textarea,select').filter(':not([type=\"submit\"],[type=\"button\"])').each(function () {\n      var $elem = $(this),\n        elementType = $elem.attr('type'),\n        isCheckboxOrRadioBtn = elementType === 'radio' || elementType === 'checkbox',\n        elementName = $elem.attr('name');\n\n      if (!ignoreInput(elementName, elementType) && (!isCheckboxOrRadioBtn || $.inArray(elementName, checkedInputs) < 0)) {\n\n        if (isCheckboxOrRadioBtn) {\n          checkedInputs.push(elementName);\n        }\n\n        var result = $.formUtils.validateInput(\n          $elem,\n          language,\n          conf,\n          $form,\n          'submit'\n        );\n\n        if (!result.isValid) {\n          addErrorMessage(result.errorMsg, $elem);\n        } else if (result.isValid && result.shouldChangeDisplay) {\n          $elem.valAttr('current-error', false);\n          $.formUtils.dialogs.applyInputSuccessStyling($elem, conf);\n        }\n      }\n\n    });\n\n    // Run validation callback\n    if (typeof conf.onValidate === 'function') {\n      var errors = conf.onValidate($form);\n      if ($.isArray(errors)) {\n        $.each(errors, function (i, err) {\n          addErrorMessage(err.message, err.element);\n        });\n      }\n      else if (errors && errors.element && errors.message) {\n        addErrorMessage(errors.message, errors.element);\n      }\n    }\n\n    // Reset form validation flag\n    $.formUtils.isValidatingEntireForm = false;\n\n    // Validation failed\n    if (errorInputs.length > 0) {\n      if (displayError) {\n        if (conf.errorMessagePosition === 'top') {\n          $.formUtils.dialogs.setMessageInTopOfForm($form, errorMessages, conf, language);\n        } else {\n          $.each(errorInputs, function (i, $input) {\n            $.formUtils.dialogs.setInlineMessage($input, $input.valAttr('current-error'), conf);\n          });\n        }\n        if (conf.scrollToTopOnError) {\n          $.formUtils.$win.scrollTop($form.offset().top - 20);\n        }\n      }\n    }\n\n    if (!displayError && $.formUtils.haltValidation) {\n      $.formUtils.errorDisplayPreventedWhenHalted = true;\n    }\n\n    return errorInputs.length === 0 && !$.formUtils.haltValidation;\n  };\n\n  /**\n   * Plugin for displaying input length restriction\n   */\n  $.fn.restrictLength = function (maxLengthElement) {\n    new $.formUtils.lengthRestriction(this, maxLengthElement);\n    return this;\n  };\n\n  /**\n   * Add suggestion dropdown to inputs having data-suggestions with a comma\n   * separated string with suggestions\n   * @param {Array} [settings]\n   * @returns {jQuery}\n   */\n  $.fn.addSuggestions = function (settings) {\n    var sugs = false;\n    this.find('input').each(function () {\n      var $field = $(this);\n\n      sugs = $.split($field.attr('data-suggestions'));\n\n      if (sugs.length > 0 && !$field.hasClass('has-suggestions')) {\n        $.formUtils.suggest($field, sugs, settings);\n        $field.addClass('has-suggestions');\n      }\n    });\n    return this;\n  };\n\n\n})(jQuery, window);\n\n/**\n * Utility methods used for handling loading of modules (attached to $.formUtils)\n */\n(function($) {\n\n  'use strict';\n\n  $.formUtils = $.extend($.formUtils || {}, {\n\n    /**\n     * @var {Boolean}\n     */\n    isLoadingModules: false,\n\n    /**\n     * @var {Object}\n     */\n    loadedModules: {},\n\n    /**\n     * @example\n     *  $.formUtils.loadModules('date, security.dev');\n     *\n     * Will load the scripts date.js and security.dev.js from the\n     * directory where this script resides. If you want to load\n     * the modules from another directory you can use the\n     * path argument.\n     *\n     * The script will be cached by the browser unless the module\n     * name ends with .dev\n     *\n     * @param {String} modules - Comma separated string with module file names (no directory nor file extension)\n     * @param {String} [path] - Optional, path where the module files is located if their not in the same directory as the core modules\n     * @param {function} [callback] - Optional, whether or not to fire event 'load' when modules finished loading\n     */\n    loadModules: function (modules, path, callback) {\n\n      if ($.formUtils.isLoadingModules) {\n        setTimeout(function () {\n          $.formUtils.loadModules(modules, path, callback);\n        }, 10);\n        return;\n      }\n\n      var hasLoadedAnyModule = false,\n        loadModuleScripts = function (modules, path) {\n\n          var moduleList = $.split(modules),\n            numModules = moduleList.length,\n            moduleLoadedCallback = function () {\n              numModules--;\n              if (numModules === 0) {\n                $.formUtils.isLoadingModules = false;\n                if (callback && hasLoadedAnyModule) {\n                  if( typeof callback === 'function' ) {\n                    callback();\n                  }\n                }\n              }\n            };\n\n\n          if (numModules > 0) {\n            $.formUtils.isLoadingModules = true;\n          }\n\n          var cacheSuffix = '?_=' + ( new Date().getTime() ),\n            appendToElement = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n          $.each(moduleList, function (i, modName) {\n            modName = $.trim(modName);\n            if (modName.length === 0) {\n              moduleLoadedCallback();\n            }\n            else {\n              var scriptUrl = path + modName + (modName.slice(-3) === '.js' ? '' : '.js'),\n                script = document.createElement('SCRIPT');\n\n              if (scriptUrl in $.formUtils.loadedModules) {\n                // already loaded\n                moduleLoadedCallback();\n              }\n              else {\n\n                // Remember that this script is loaded\n                $.formUtils.loadedModules[scriptUrl] = 1;\n                hasLoadedAnyModule = true;\n\n                if (typeof define === 'function' && define.amd) {\n                  require([scriptUrl + ( scriptUrl.slice(-7) === '.dev.js' ? cacheSuffix : '' )], moduleLoadedCallback);\n                } else {\n                  // Load the script\n                  script.type = 'text/javascript';\n                  script.onload = moduleLoadedCallback;\n                  script.src = scriptUrl + ( scriptUrl.slice(-7) === '.dev.js' ? cacheSuffix : '' );\n                  script.onerror = function() {\n                    $.formUtils.warn('Unable to load form validation module '+scriptUrl);\n                  };\n                  script.onreadystatechange = function () {\n                    // IE 7 fix\n                    if (this.readyState === 'complete' || this.readyState === 'loaded') {\n                      moduleLoadedCallback();\n                      // Handle memory leak in IE\n                      this.onload = null;\n                      this.onreadystatechange = null;\n                    }\n                  };\n                  appendToElement.appendChild(script);\n                }\n              }\n            }\n          });\n        };\n\n      if (path) {\n        loadModuleScripts(modules, path);\n      } else {\n        var findScriptPathAndLoadModules = function () {\n          var foundPath = false;\n          $('script[src*=\"form-validator\"]').each(function () {\n            var isScriptFromPluginNodeModulesDirectory = this.src.split('form-validator')[1].split('node_modules').length > 1;\n            if (!isScriptFromPluginNodeModulesDirectory) {\n              foundPath = this.src.substr(0, this.src.lastIndexOf('/')) + '/';\n              if (foundPath === '/') {\n                foundPath = '';\n              }\n              return false;\n            }\n          });\n\n          if (foundPath !== false) {\n            loadModuleScripts(modules, foundPath);\n            return true;\n          }\n          return false;\n        };\n\n        if (!findScriptPathAndLoadModules()) {\n          $(findScriptPathAndLoadModules);\n        }\n      }\n    }\n\n  });\n\n})(jQuery);\n\n/**\n * Setup function for the plugin\n */\n(function ($) {\n\n  'use strict';\n\n\n  /**\n   * A bit smarter split function\n   * delimiter can be space, comma, dash or pipe\n   * @param {String} val\n   * @param {Function|String} [callback]\n   * @param {Boolean} [allowSpaceAsDelimiter]\n   * @returns {Array|void}\n   */\n  $.split = function (val, callback, allowSpaceAsDelimiter) {\n    // default to true\n    allowSpaceAsDelimiter = allowSpaceAsDelimiter === undefined || allowSpaceAsDelimiter === true;\n    var pattern = '[,|'+(allowSpaceAsDelimiter ? '\\\\s':'')+'-]\\\\s*',\n      regex = new RegExp(pattern, 'g');\n    if (typeof callback !== 'function') {\n      // return array\n      if (!val) {\n        return [];\n      }\n      var values = [];\n      $.each(val.split(callback ? callback : regex),\n        function (i, str) {\n          str = $.trim(str);\n          if (str.length) {\n            values.push(str);\n          }\n        }\n      );\n      return values;\n    } else if (val) {\n      // exec callback func on each\n      $.each(val.split(regex),\n        function (i, str) {\n          str = $.trim(str);\n          if (str.length) {\n            return callback(str, i);\n          }\n        }\n      );\n    }\n  };\n\n  /**\n   * Short hand function that makes the validation setup require less code\n   * @param conf\n   */\n  $.validate = function (conf) {\n\n    var defaultConf = $.extend($.formUtils.defaultConfig(), {\n      form: 'form',\n      validateOnEvent: false,\n      validateOnBlur: true,\n      validateCheckboxRadioOnClick: true,\n      showHelpOnFocus: true,\n      addSuggestions: true,\n      modules: '',\n      onModulesLoaded: null,\n      language: false,\n      onSuccess: false,\n      onError: false,\n      onElementValidate: false\n    });\n\n    conf = $.extend(defaultConf, conf || {});\n\n    $(window).trigger('formValidationPluginInit', [conf]);\n\n    if( conf.lang && conf.lang !== 'en' ) {\n      var langModule = 'lang/'+conf.lang+'.js';\n      conf.modules += conf.modules.length ? ','+langModule : langModule;\n    }\n\n    // Add validation to forms\n    $(conf.form).each(function (i, form) {\n\n      // Make a reference to the config for this form\n      form.validationConfig = conf;\n\n      // Trigger jQuery event that we're about to setup validation\n      var $form = $(form);\n      $form.trigger('formValidationSetup', [$form, conf]);\n\n      // Remove classes and event handlers that might have been\n      // added by a previous call to $.validate\n      $form.find('.has-help-txt')\n          .unbind('focus.validation')\n          .unbind('blur.validation');\n\n      $form\n        .removeClass('has-validation-callback')\n        .unbind('submit.validation')\n        .unbind('reset.validation')\n        .find('input[data-validation],textarea[data-validation]')\n          .unbind('blur.validation');\n\n      // Validate when submitted\n      $form.bind('submit.validation', function (evt) {\n\n        var $form = $(this),\n          stop = function() {\n            evt.stopImmediatePropagation();\n            return false;\n          };\n\n        if ($.formUtils.haltValidation) {\n          // pressing several times on submit button while validation is halted\n          return stop();\n        }\n\n        if ($.formUtils.isLoadingModules) {\n          setTimeout(function () {\n            $form.trigger('submit.validation');\n          }, 200);\n          return stop();\n        }\n\n        var valid = $form.isValid(conf.language, conf);\n        if ($.formUtils.haltValidation) {\n          // Validation got halted by one of the validators\n          return stop();\n        } else {\n          if (valid && typeof conf.onSuccess === 'function') {\n            var callbackResponse = conf.onSuccess($form);\n            if (callbackResponse === false) {\n              return stop();\n            }\n          } else if (!valid && typeof conf.onError === 'function') {\n            conf.onError($form);\n            return stop();\n          } else {\n            return valid ? true : stop();\n          }\n        }\n      })\n      .bind('reset.validation', function () {\n        $.formUtils.dialogs.removeAllMessagesAndStyling($form, conf);\n      })\n      .addClass('has-validation-callback');\n\n      if (conf.showHelpOnFocus) {\n        $form.showHelpOnFocus();\n      }\n      if (conf.addSuggestions) {\n        $form.addSuggestions();\n      }\n      if (conf.validateOnBlur) {\n        $form.validateOnBlur(conf.language, conf);\n        $form.bind('html5ValidationAttrsFound', function () {\n          $form.validateOnBlur(conf.language, conf);\n        });\n      }\n      if (conf.validateOnEvent) {\n        $form.validateOnEvent(conf.language, conf);\n      }\n    });\n\n    if (conf.modules !== '') {\n      $.formUtils.loadModules(conf.modules, false, function() {\n        if (typeof conf.onModulesLoaded === 'function') {\n          conf.onModulesLoaded();\n        }\n        var $form = typeof conf.form === 'string' ? $(conf.form) : conf.form;\n        $.formUtils.$win.trigger('validatorsLoaded', [$form, conf]);\n      });\n    }\n  };\n\n})(jQuery);\n\n/**\n * Utility methods and properties attached to $.formUtils\n */\n(function($, window) {\n\n  'use strict';\n\n  var $win = $(window);\n\n  $.formUtils = $.extend($.formUtils || {}, {\n\n    $win: $win,\n\n    /**\n     * Default config for $(...).isValid();\n     */\n    defaultConfig: function () {\n      return {\n        ignore: [], // Names of inputs not to be validated even though `validationRuleAttribute` containing the validation rules tells us to\n        errorElementClass: 'error', // Class that will be put on elements which value is invalid\n        successElementClass: 'valid', // Class that will be put on elements that has been validated with success\n        borderColorOnError: '#b94a48', // Border color of elements which value is invalid, empty string to not change border color\n        errorMessageClass: 'form-error', // class name of div containing error messages when validation fails\n        validationRuleAttribute: 'data-validation', // name of the attribute holding the validation rules\n        validationErrorMsgAttribute: 'data-validation-error-msg', // define custom err msg inline with element\n        errorMessagePosition: 'inline', // Can be either \"top\" or \"inline\"\n        errorMessageTemplate: {\n          container: '<div class=\"{errorMessageClass} alert alert-danger\">{messages}</div>',\n          messages: '<strong>{errorTitle}</strong><ul>{fields}</ul>',\n          field: '<li>{msg}</li>'\n        },\n        scrollToTopOnError: true,\n        dateFormat: 'yyyy-mm-dd',\n        addValidClassOnAll: false, // whether or not to apply class=\"valid\" even if the input wasn't validated\n        decimalSeparator: '.',\n        inputParentClassOnError: 'has-error', // twitter-bootstrap default class name\n        inputParentClassOnSuccess: 'has-success', // twitter-bootstrap default class name\n        validateHiddenInputs: false, // whether or not hidden inputs should be validated\n        inlineErrorMessageCallback: false,\n        submitErrorMessageCallback: false\n      };\n    },\n\n    /**\n     * Available validators\n     */\n    validators: {},\n\n    /**\n     * Events triggered by form validator\n     */\n    _events: {load: [], valid: [], invalid: []},\n\n    /**\n     * Setting this property to true during validation will\n     * stop further validation from taking place and form will\n     * not be sent\n     */\n    haltValidation: false,\n\n    /**\n     * Function for adding a validator\n     * @param {Object} validator\n     */\n    addValidator: function (validator) {\n      // prefix with \"validate_\" for backward compatibility reasons\n      var name = validator.name.indexOf('validate_') === 0 ? validator.name : 'validate_' + validator.name;\n      if (validator.validateOnKeyUp === undefined) {\n        validator.validateOnKeyUp = true;\n      }\n      this.validators[name] = validator;\n    },\n\n    /**\n     * Warn user via the console if available\n     */\n    warn: function(msg) {\n      if( 'console' in window ) {\n        if( typeof window.console.warn === 'function' ) {\n          window.console.warn(msg);\n        } else if( typeof window.console.log === 'function' ) {\n          window.console.log(msg);\n        }\n      } else {\n        alert(msg);\n      }\n    },\n\n    /**\n     * Same as input $.fn.val() but also supporting input of typ radio or checkbox\n     * @example\n     *\n     *  $.formUtils.getValue('.myRadioButtons', $('#some-form'));\n     *  $.formUtils.getValue($('#some-form').find('.check-boxes'));\n     *\n     * @param query\n     * @param $parent\n     * @returns {String|Boolean}\n     */\n    getValue: function(query, $parent) {\n      var $inputs = $parent ? $parent.find(query) : query;\n      if ($inputs.length > 0 ) {\n        var type = $inputs.eq(0).attr('type');\n        if (type === 'radio' || type === 'checkbox') {\n          return $inputs.filter(':checked').val() || '';\n        } else {\n          return $inputs.val() || '';\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Validate the value of given element according to the validation rules\n     * found in the attribute data-validation. Will return an object representing\n     * a validation result, having the props shouldChangeDisplay, isValid and errorMsg\n     * @param {jQuery} $elem\n     * @param {Object} language ($.formUtils.LANG)\n     * @param {Object} conf\n     * @param {jQuery} $form\n     * @param {String} [eventContext]\n     * @return {Object}\n     */\n    validateInput: function ($elem, language, conf, $form, eventContext) {\n\n      conf = conf || $.formUtils.defaultConfig();\n      language = language || $.formUtils.LANG;\n\n      var value = this.getValue($elem);\n\n      $elem\n        .valAttr('skipped', false)\n        .one('beforeValidation', function() {\n          // Skip input because its hidden or disabled\n          // Doing this in a callback makes it possible for others to prevent the default\n          // behaviour by binding to the same event and call evt.stopImmediatePropagation()\n          if ($elem.attr('disabled') || (!$elem.is(':visible') && !conf.validateHiddenInputs)) {\n            $elem.valAttr('skipped', 1);\n          }\n        })\n        .trigger('beforeValidation', [value, language, conf]);\n\n\n      var inputIsOptional = $elem.valAttr('optional') === 'true',\n          skipBecauseItsEmpty = !value && inputIsOptional,\n          validationRules = $elem.attr(conf.validationRuleAttribute),\n          isValid = true,\n          errorMsg = '',\n          result = {isValid: true, shouldChangeDisplay:true, errorMsg:''};\n\n      // For input type=\"number\", browsers attempt to parse the entered value into a number.\n      // If the input is not numeric, browsers handle the situation differently:\n      // Chrome 48 simply disallows non-numeric input; FF 44 clears out the input box on blur;\n      // Safari 5 parses the entered string to find a leading number.\n      // If the input fails browser validation, the browser sets the input value equal to an empty string.\n      // Therefore, we cannot distinguish (apart from hacks) between an empty input type=\"text\" and one with a\n      // value that can't be parsed by the browser.\n\n      if (!validationRules || skipBecauseItsEmpty || $elem.valAttr('skipped')) {\n        result.shouldChangeDisplay = conf.addValidClassOnAll;\n        return result;\n      }\n\n      // Filter out specified characters\n      var ignore = $elem.valAttr('ignore');\n      if (ignore) {\n        $.each(ignore.split(''), function(i, character) {\n          value = value.replace(new RegExp('\\\\'+character, 'g'), '');\n        });\n      }\n\n      $.split(validationRules, function (rule) {\n\n        if (rule.indexOf('validate_') !== 0) {\n          rule = 'validate_' + rule;\n        }\n\n        var validator = $.formUtils.validators[rule];\n\n        if (validator) {\n\n          // special change of element for checkbox_group rule\n          if (rule === 'validate_checkbox_group') {\n            // set element to first in group, so error msg attr doesn't need to be set on all elements in group\n            $elem = $form.find('[name=\"' + $elem.attr('name') + '\"]:eq(0)');\n          }\n\n          if (eventContext !== 'keyup' || validator.validateOnKeyUp) {\n            // A validator can prevent itself from getting triggered on keyup\n            isValid = validator.validatorFunction(value, $elem, conf, language, $form, eventContext);\n          }\n\n          if (!isValid) {\n            if (conf.validateOnBlur) {\n              $elem.validateOnKeyUp(language, conf);\n            }\n            errorMsg = $.formUtils.dialogs.resolveErrorMessage($elem, validator, rule, conf, language);\n            return false; // break iteration\n          }\n\n        } else {\n\n          // todo: Add some validator lookup function and tell immediately which module is missing\n          throw new Error('Using undefined validator \"' + rule +\n            '\". Maybe you have forgotten to load the module that \"' + rule +'\" belongs to?');\n\n        }\n\n      });\n\n\n      if (isValid === false) {\n        $elem.trigger('validation', false);\n        result.errorMsg = errorMsg;\n        result.isValid = false;\n        result.shouldChangeDisplay = true;\n      } else if (isValid === null) {\n        // A validatorFunction returning null means that it's not able to validate\n        // the input at this time. Most probably some async stuff need to gets finished\n        // first and then the validator will re-trigger the validation.\n        result.shouldChangeDisplay = false;\n      } else {\n        $elem.trigger('validation', true);\n        result.shouldChangeDisplay = true;\n      }\n\n      // Run element validation callback\n      if (typeof conf.onElementValidate === 'function' && errorMsg !== null) {\n        conf.onElementValidate(result.isValid, $elem, $form, errorMsg);\n      }\n\n      $elem.trigger('afterValidation', [result, eventContext]);\n\n      return result;\n    },\n\n    /**\n     * Is it a correct date according to given dateFormat. Will return false if not, otherwise\n     * an array 0=>year 1=>month 2=>day\n     *\n     * @param {String} val\n     * @param {String} dateFormat\n     * @param {Boolean} [addMissingLeadingZeros]\n     * @return {Array}|{Boolean}\n     */\n    parseDate: function (val, dateFormat, addMissingLeadingZeros) {\n      var divider = dateFormat.replace(/[a-zA-Z]/gi, '').substring(0, 1),\n        regexp = '^',\n        formatParts = dateFormat.split(divider || null),\n        matches, day, month, year;\n\n      $.each(formatParts, function (i, part) {\n        regexp += (i > 0 ? '\\\\' + divider : '') + '(\\\\d{' + part.length + '})';\n      });\n\n      regexp += '$';\n\n      if (addMissingLeadingZeros) {\n        var newValueParts = [];\n        $.each(val.split(divider), function(i, part) {\n          if(part.length === 1) {\n            part = '0'+part;\n          }\n          newValueParts.push(part);\n        });\n        val = newValueParts.join(divider);\n      }\n\n      matches = val.match(new RegExp(regexp));\n      if (matches === null) {\n        return false;\n      }\n\n      var findDateUnit = function (unit, formatParts, matches) {\n        for (var i = 0; i < formatParts.length; i++) {\n          if (formatParts[i].substring(0, 1) === unit) {\n            return $.formUtils.parseDateInt(matches[i + 1]);\n          }\n        }\n        return -1;\n      };\n\n      month = findDateUnit('m', formatParts, matches);\n      day = findDateUnit('d', formatParts, matches);\n      year = findDateUnit('y', formatParts, matches);\n\n      if ((month === 2 && day > 28 && (year % 4 !== 0 || year % 100 === 0 && year % 400 !== 0)) ||\n        (month === 2 && day > 29 && (year % 4 === 0 || year % 100 !== 0 && year % 400 === 0)) ||\n        month > 12 || month === 0) {\n        return false;\n      }\n      if ((this.isShortMonth(month) && day > 30) || (!this.isShortMonth(month) && day > 31) || day === 0) {\n        return false;\n      }\n\n      return [year, month, day];\n    },\n\n    /**\n     * skum fix. är talet 05 eller lägre ger parseInt rätt int annars får man 0 när man kör parseInt?\n     *\n     * @param {String} val\n     * @return {Number}\n     */\n    parseDateInt: function (val) {\n      if (val.indexOf('0') === 0) {\n        val = val.replace('0', '');\n      }\n      return parseInt(val, 10);\n    },\n\n    /**\n     * Has month only 30 days?\n     *\n     * @param {Number} m\n     * @return {Boolean}\n     */\n    isShortMonth: function (m) {\n      return (m % 2 === 0 && m < 7) || (m % 2 !== 0 && m > 7);\n    },\n\n    /**\n     * Restrict input length\n     *\n     * @param {jQuery} $inputElement Jquery Html object\n     * @param {jQuery} $maxLengthElement jQuery Html Object\n     * @return void\n     */\n    lengthRestriction: function ($inputElement, $maxLengthElement) {\n      // read maxChars from counter display initial text value\n      var maxChars = parseInt($maxLengthElement.text(), 10),\n        charsLeft = 0,\n\n      // internal function does the counting and sets display value\n        countCharacters = function () {\n          var numChars = $inputElement.val().length;\n          if (numChars > maxChars) {\n            // get current scroll bar position\n            var currScrollTopPos = $inputElement.scrollTop();\n            // trim value to max length\n            $inputElement.val($inputElement.val().substring(0, maxChars));\n            $inputElement.scrollTop(currScrollTopPos);\n          }\n          charsLeft = maxChars - numChars;\n          if (charsLeft < 0) {\n            charsLeft = 0;\n          }\n\n          // set counter text\n          $maxLengthElement.text(charsLeft);\n        };\n\n      // bind events to this element\n      // setTimeout is needed, cut or paste fires before val is available\n      $($inputElement).bind('keydown keyup keypress focus blur', countCharacters)\n        .bind('cut paste', function () {\n          setTimeout(countCharacters, 100);\n        });\n\n      // count chars on pageload, if there are prefilled input-values\n      $(document).bind('ready', countCharacters);\n    },\n\n    /**\n     * Test numeric against allowed range\n     *\n     * @param $value int\n     * @param $rangeAllowed str; (1-2, min1, max2, 10)\n     * @return array\n     */\n    numericRangeCheck: function (value, rangeAllowed) {\n      // split by dash\n      var range = $.split(rangeAllowed),\n      // min or max\n        minmax = parseInt(rangeAllowed.substr(3), 10);\n\n      if( range.length === 1 && rangeAllowed.indexOf('min') === -1 && rangeAllowed.indexOf('max') === -1 ) {\n        range = [rangeAllowed, rangeAllowed]; // only a number, checking agains an exact number of characters\n      }\n\n      // range ?\n      if (range.length === 2 && (value < parseInt(range[0], 10) || value > parseInt(range[1], 10) )) {\n        return [ 'out', range[0], range[1] ];\n      } // value is out of range\n      else if (rangeAllowed.indexOf('min') === 0 && (value < minmax )) // min\n      {\n        return ['min', minmax];\n      } // value is below min\n      else if (rangeAllowed.indexOf('max') === 0 && (value > minmax )) // max\n      {\n        return ['max', minmax];\n      } // value is above max\n      // since no other returns executed, value is in allowed range\n      return [ 'ok' ];\n    },\n\n\n    _numSuggestionElements: 0,\n    _selectedSuggestion: null,\n    _previousTypedVal: null,\n\n    /**\n     * Utility function that can be used to create plugins that gives\n     * suggestions when inputs is typed into\n     * @param {jQuery} $elem\n     * @param {Array} suggestions\n     * @param {Object} settings - Optional\n     * @return {jQuery}\n     */\n    suggest: function ($elem, suggestions, settings) {\n      var conf = {\n          css: {\n            maxHeight: '150px',\n            background: '#FFF',\n            lineHeight: '150%',\n            textDecoration: 'underline',\n            overflowX: 'hidden',\n            overflowY: 'auto',\n            border: '#CCC solid 1px',\n            borderTop: 'none',\n            cursor: 'pointer'\n          },\n          activeSuggestionCSS: {\n            background: '#E9E9E9'\n          }\n        },\n        setSuggsetionPosition = function ($suggestionContainer, $input) {\n          var offset = $input.offset();\n          $suggestionContainer.css({\n            width: $input.outerWidth(),\n            left: offset.left + 'px',\n            top: (offset.top + $input.outerHeight()) + 'px'\n          });\n        };\n\n      if (settings) {\n        $.extend(conf, settings);\n      }\n\n      conf.css.position = 'absolute';\n      conf.css['z-index'] = 9999;\n      $elem.attr('autocomplete', 'off');\n\n      if (this._numSuggestionElements === 0) {\n        // Re-position suggestion container if window size changes\n        $win.bind('resize', function () {\n          $('.jquery-form-suggestions').each(function () {\n            var $container = $(this),\n              suggestID = $container.attr('data-suggest-container');\n            setSuggsetionPosition($container, $('.suggestions-' + suggestID).eq(0));\n          });\n        });\n      }\n\n      this._numSuggestionElements++;\n\n      var onSelectSuggestion = function ($el) {\n        var suggestionId = $el.valAttr('suggestion-nr');\n        $.formUtils._selectedSuggestion = null;\n        $.formUtils._previousTypedVal = null;\n        $('.jquery-form-suggestion-' + suggestionId).fadeOut('fast');\n      };\n\n      $elem\n        .data('suggestions', suggestions)\n        .valAttr('suggestion-nr', this._numSuggestionElements)\n        .unbind('focus.suggest')\n        .bind('focus.suggest', function () {\n          $(this).trigger('keyup');\n          $.formUtils._selectedSuggestion = null;\n        })\n        .unbind('keyup.suggest')\n        .bind('keyup.suggest', function () {\n          var $input = $(this),\n            foundSuggestions = [],\n            val = $.trim($input.val()).toLocaleLowerCase();\n\n          if (val === $.formUtils._previousTypedVal) {\n            return;\n          }\n          else {\n            $.formUtils._previousTypedVal = val;\n          }\n\n          var hasTypedSuggestion = false,\n            suggestionId = $input.valAttr('suggestion-nr'),\n            $suggestionContainer = $('.jquery-form-suggestion-' + suggestionId);\n\n          $suggestionContainer.scrollTop(0);\n\n          // Find the right suggestions\n          if (val !== '') {\n            var findPartial = val.length > 2;\n            $.each($input.data('suggestions'), function (i, suggestion) {\n              var lowerCaseVal = suggestion.toLocaleLowerCase();\n              if (lowerCaseVal === val) {\n                foundSuggestions.push('<strong>' + suggestion + '</strong>');\n                hasTypedSuggestion = true;\n                return false;\n              } else if (lowerCaseVal.indexOf(val) === 0 || (findPartial && lowerCaseVal.indexOf(val) > -1)) {\n                foundSuggestions.push(suggestion.replace(new RegExp(val, 'gi'), '<strong>$&</strong>'));\n              }\n            });\n          }\n\n          // Hide suggestion container\n          if (hasTypedSuggestion || (foundSuggestions.length === 0 && $suggestionContainer.length > 0)) {\n            $suggestionContainer.hide();\n          }\n\n          // Create suggestion container if not already exists\n          else if (foundSuggestions.length > 0 && $suggestionContainer.length === 0) {\n            $suggestionContainer = $('<div></div>').css(conf.css).appendTo('body');\n            $elem.addClass('suggestions-' + suggestionId);\n            $suggestionContainer\n              .attr('data-suggest-container', suggestionId)\n              .addClass('jquery-form-suggestions')\n              .addClass('jquery-form-suggestion-' + suggestionId);\n          }\n\n          // Show hidden container\n          else if (foundSuggestions.length > 0 && !$suggestionContainer.is(':visible')) {\n            $suggestionContainer.show();\n          }\n\n          // add suggestions\n          if (foundSuggestions.length > 0 && val.length !== foundSuggestions[0].length) {\n\n            // put container in place every time, just in case\n            setSuggsetionPosition($suggestionContainer, $input);\n\n            // Add suggestions HTML to container\n            $suggestionContainer.html('');\n            $.each(foundSuggestions, function (i, text) {\n              $('<div></div>')\n                .append(text)\n                .css({\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap',\n                  padding: '5px'\n                })\n                .addClass('form-suggest-element')\n                .appendTo($suggestionContainer)\n                .click(function () {\n                  $input.focus();\n                  $input.val($(this).text());\n                  $input.trigger('change');\n                  onSelectSuggestion($input);\n                });\n            });\n          }\n        })\n        .unbind('keydown.validation')\n        .bind('keydown.validation', function (e) {\n          var code = (e.keyCode ? e.keyCode : e.which),\n            suggestionId,\n            $suggestionContainer,\n            $input = $(this);\n\n          if (code === 13 && $.formUtils._selectedSuggestion !== null) {\n            suggestionId = $input.valAttr('suggestion-nr');\n            $suggestionContainer = $('.jquery-form-suggestion-' + suggestionId);\n            if ($suggestionContainer.length > 0) {\n              var newText = $suggestionContainer.find('div').eq($.formUtils._selectedSuggestion).text();\n              $input.val(newText);\n              $input.trigger('change');\n              onSelectSuggestion($input);\n              e.preventDefault();\n            }\n          }\n          else {\n            suggestionId = $input.valAttr('suggestion-nr');\n            $suggestionContainer = $('.jquery-form-suggestion-' + suggestionId);\n            var $suggestions = $suggestionContainer.children();\n            if ($suggestions.length > 0 && $.inArray(code, [38, 40]) > -1) {\n              if (code === 38) { // key up\n                if ($.formUtils._selectedSuggestion === null) {\n                  $.formUtils._selectedSuggestion = $suggestions.length - 1;\n                }\n                else{\n                  $.formUtils._selectedSuggestion--;\n                }\n                if ($.formUtils._selectedSuggestion < 0) {\n                  $.formUtils._selectedSuggestion = $suggestions.length - 1;\n                }\n              }\n              else if (code === 40) { // key down\n                if ($.formUtils._selectedSuggestion === null) {\n                  $.formUtils._selectedSuggestion = 0;\n                }\n                else {\n                  $.formUtils._selectedSuggestion++;\n                }\n                if ($.formUtils._selectedSuggestion > ($suggestions.length - 1)) {\n                  $.formUtils._selectedSuggestion = 0;\n                }\n              }\n\n              // Scroll in suggestion window\n              var containerInnerHeight = $suggestionContainer.innerHeight(),\n                containerScrollTop = $suggestionContainer.scrollTop(),\n                suggestionHeight = $suggestionContainer.children().eq(0).outerHeight(),\n                activeSuggestionPosY = suggestionHeight * ($.formUtils._selectedSuggestion);\n\n              if (activeSuggestionPosY < containerScrollTop || activeSuggestionPosY > (containerScrollTop + containerInnerHeight)) {\n                $suggestionContainer.scrollTop(activeSuggestionPosY);\n              }\n\n              $suggestions\n                .removeClass('active-suggestion')\n                .css('background', 'none')\n                .eq($.formUtils._selectedSuggestion)\n                .addClass('active-suggestion')\n                .css(conf.activeSuggestionCSS);\n\n              e.preventDefault();\n              return false;\n            }\n          }\n        })\n        .unbind('blur.suggest')\n        .bind('blur.suggest', function () {\n          onSelectSuggestion($(this));\n        });\n\n      return $elem;\n    },\n\n    /**\n     * Error dialogs\n     *\n     * @var {Object}\n     */\n    LANG: {\n      errorTitle: 'Form submission failed!',\n      requiredField: 'This is a required field',\n      requiredFields: 'You have not answered all required fields',\n      badTime: 'You have not given a correct time',\n      badEmail: 'You have not given a correct e-mail address',\n      badTelephone: 'You have not given a correct phone number',\n      badSecurityAnswer: 'You have not given a correct answer to the security question',\n      badDate: 'You have not given a correct date',\n      lengthBadStart: 'The input value must be between ',\n      lengthBadEnd: ' characters',\n      lengthTooLongStart: 'The input value is longer than ',\n      lengthTooShortStart: 'The input value is shorter than ',\n      notConfirmed: 'Input values could not be confirmed',\n      badDomain: 'Incorrect domain value',\n      badUrl: 'The input value is not a correct URL',\n      badCustomVal: 'The input value is incorrect',\n      andSpaces: ' and spaces ',\n      badInt: 'The input value was not a correct number',\n      badSecurityNumber: 'Your social security number was incorrect',\n      badUKVatAnswer: 'Incorrect UK VAT Number',\n      badUKNin: 'Incorrect UK NIN',\n      badUKUtr: 'Incorrect UK UTR Number',\n      badStrength: 'The password isn\\'t strong enough',\n      badNumberOfSelectedOptionsStart: 'You have to choose at least ',\n      badNumberOfSelectedOptionsEnd: ' answers',\n      badAlphaNumeric: 'The input value can only contain alphanumeric characters ',\n      badAlphaNumericExtra: ' and ',\n      wrongFileSize: 'The file you are trying to upload is too large (max %s)',\n      wrongFileType: 'Only files of type %s is allowed',\n      groupCheckedRangeStart: 'Please choose between ',\n      groupCheckedTooFewStart: 'Please choose at least ',\n      groupCheckedTooManyStart: 'Please choose a maximum of ',\n      groupCheckedEnd: ' item(s)',\n      badCreditCard: 'The credit card number is not correct',\n      badCVV: 'The CVV number was not correct',\n      wrongFileDim : 'Incorrect image dimensions,',\n      imageTooTall : 'the image can not be taller than',\n      imageTooWide : 'the image can not be wider than',\n      imageTooSmall : 'the image was too small',\n      min : 'min',\n      max : 'max',\n      imageRatioNotAccepted : 'Image ratio is not be accepted',\n      badBrazilTelephoneAnswer: 'The phone number entered is invalid',\n      badBrazilCEPAnswer: 'The CEP entered is invalid',\n      badBrazilCPFAnswer: 'The CPF entered is invalid',\n      badPlPesel: 'The PESEL entered is invalid',\n      badPlNip: 'The NIP entered is invalid',\n      badPlRegon: 'The REGON entered is invalid',\n      badreCaptcha: 'Please confirm that you are not a bot',\n      passwordComplexityStart: 'Password must contain at least ',\n      passwordComplexitySeparator: ', ',\n      passwordComplexityUppercaseInfo: ' uppercase letter(s)',\n      passwordComplexityLowercaseInfo: ' lowercase letter(s)',\n      passwordComplexitySpecialCharsInfo: ' special character(s)',\n      passwordComplexityNumericCharsInfo: ' numeric character(s)',\n      passwordComplexityEnd: '.'\n    }\n  });\n\n})(jQuery, window);\n\n/**\n * File declaring all default validators.\n */\n(function($) {\n\n  /*\n   * Validate email\n   */\n  $.formUtils.addValidator({\n    name: 'email',\n    validatorFunction: function (email) {\n\n      var emailParts = email.toLowerCase().split('@'),\n        localPart = emailParts[0],\n        domain = emailParts[1];\n\n      if (localPart && domain) {\n\n        if( localPart.indexOf('\"') === 0 ) {\n          var len = localPart.length;\n          localPart = localPart.replace(/\\\"/g, '');\n          if( localPart.length !== (len-2) ) {\n            return false; // It was not allowed to have more than two apostrophes\n          }\n        }\n\n        return $.formUtils.validators.validate_domain.validatorFunction(emailParts[1]) &&\n          localPart.indexOf('.') !== 0 &&\n          localPart.substring(localPart.length-1, localPart.length) !== '.' &&\n          localPart.indexOf('..') === -1 &&\n          !(/[^\\w\\+\\.\\-\\#\\-\\_\\~\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\:]/.test(localPart));\n      }\n\n      return false;\n    },\n    errorMessage: '',\n    errorMessageKey: 'badEmail'\n  });\n\n  /*\n   * Validate domain name\n   */\n  $.formUtils.addValidator({\n    name: 'domain',\n    validatorFunction: function (val) {\n      return val.length > 0 &&\n        val.length <= 253 && // Including sub domains\n        !(/[^a-zA-Z0-9]/.test(val.slice(-2))) && !(/[^a-zA-Z0-9]/.test(val.substr(0, 1))) && !(/[^a-zA-Z0-9\\.\\-]/.test(val)) &&\n        val.split('..').length === 1 &&\n        val.split('.').length > 1;\n    },\n    errorMessage: '',\n    errorMessageKey: 'badDomain'\n  });\n\n  /*\n   * Validate required\n   */\n  $.formUtils.addValidator({\n    name: 'required',\n    validatorFunction: function (val, $el, config, language, $form) {\n      switch ($el.attr('type')) {\n        case 'checkbox':\n          return $el.is(':checked');\n        case 'radio':\n          return $form.find('input[name=\"' + $el.attr('name') + '\"]').filter(':checked').length > 0;\n        default:\n          return $.trim(val) !== '';\n      }\n    },\n    errorMessage: '',\n    errorMessageKey: function(config) {\n      if (config.errorMessagePosition === 'top' || typeof config.errorMessagePosition === 'function') {\n        return 'requiredFields';\n      }\n      else {\n        return 'requiredField';\n      }\n    }\n  });\n\n  /*\n   * Validate length range\n   */\n  $.formUtils.addValidator({\n    name: 'length',\n    validatorFunction: function (val, $el, conf, lang) {\n      var lengthAllowed = $el.valAttr('length'),\n        type = $el.attr('type');\n\n      if (lengthAllowed === undefined) {\n        alert('Please add attribute \"data-validation-length\" to ' + $el[0].nodeName + ' named ' + $el.attr('name'));\n        return true;\n      }\n\n      // check if length is above min, below max or within range.\n      var len = type === 'file' && $el.get(0).files !== undefined ? $el.get(0).files.length : val.length,\n        lengthCheckResults = $.formUtils.numericRangeCheck(len, lengthAllowed),\n        checkResult;\n\n      switch (lengthCheckResults[0]) {   // outside of allowed range\n        case 'out':\n          this.errorMessage = lang.lengthBadStart + lengthAllowed + lang.lengthBadEnd;\n          checkResult = false;\n          break;\n        // too short\n        case 'min':\n          this.errorMessage = lang.lengthTooShortStart + lengthCheckResults[1] + lang.lengthBadEnd;\n          checkResult = false;\n          break;\n        // too long\n        case 'max':\n          this.errorMessage = lang.lengthTooLongStart + lengthCheckResults[1] + lang.lengthBadEnd;\n          checkResult = false;\n          break;\n        // ok\n        default:\n          checkResult = true;\n      }\n\n      return checkResult;\n    },\n    errorMessage: '',\n    errorMessageKey: ''\n  });\n\n  /*\n   * Validate url\n   */\n  $.formUtils.addValidator({\n    name: 'url',\n    validatorFunction: function (url) {\n      // written by Scott Gonzalez: http://projects.scottsplayground.com/iri/\n      // - Victor Jonsson added support for arrays in the url ?arg[]=sdfsdf\n      // - General improvements made by Stéphane Moureau <https://github.com/TraderStf>\n\n      var urlFilter = /^(https?|ftp):\\/\\/((((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])(\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])(\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/(((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|\\[|\\]|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#(((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i;\n      if (urlFilter.test(url)) {\n        var domain = url.split('://')[1],\n          domainSlashPos = domain.indexOf('/');\n\n        if (domainSlashPos > -1) {\n          domain = domain.substr(0, domainSlashPos);\n        }\n\n        return $.formUtils.validators.validate_domain.validatorFunction(domain); // todo: add support for IP-addresses\n      }\n      return false;\n    },\n    errorMessage: '',\n    errorMessageKey: 'badUrl'\n  });\n\n  /*\n   * Validate number (floating or integer)\n   */\n  $.formUtils.addValidator({\n    name: 'number',\n    validatorFunction: function (val, $el, conf) {\n      if (val !== '') {\n        var allowing = $el.valAttr('allowing') || '',\n          decimalSeparator = $el.valAttr('decimal-separator') || conf.decimalSeparator,\n          allowsRange = false,\n          begin, end,\n          steps = $el.valAttr('step') || '',\n          allowsSteps = false,\n          sanitize = $el.attr('data-sanitize') || '',\n          isFormattedWithNumeral = sanitize.match(/(^|[\\s])numberFormat([\\s]|$)/i);\n\n        if (isFormattedWithNumeral) {\n          if (!window.numeral) {\n            throw new ReferenceError('The data-sanitize value numberFormat cannot be used without the numeral' +\n              ' library. Please see Data Validation in http://www.formvalidator.net for more information.');\n          }\n          //Unformat input first, then convert back to String\n          if (val.length) {\n            val = String(numeral().unformat(val));\n          }\n        }\n\n        if (allowing.indexOf('number') === -1) {\n          allowing += ',number';\n        }\n\n        if (allowing.indexOf('negative') === -1 && val.indexOf('-') === 0) {\n          return false;\n        }\n\n        if (allowing.indexOf('range') > -1) {\n          begin = parseFloat(allowing.substring(allowing.indexOf('[') + 1, allowing.indexOf(';')));\n          end = parseFloat(allowing.substring(allowing.indexOf(';') + 1, allowing.indexOf(']')));\n          allowsRange = true;\n        }\n\n        if (steps !== '') {\n          allowsSteps = true;\n        }\n\n        if (decimalSeparator === ',') {\n          if (val.indexOf('.') > -1) {\n            return false;\n          }\n          // Fix for checking range with floats using ,\n          val = val.replace(',', '.');\n        }\n        if (val.replace(/[0-9-]/g, '') === '' && (!allowsRange || (val >= begin && val <= end)) && (!allowsSteps || (val % steps === 0))) {\n          return true;\n        }\n\n        if (allowing.indexOf('float') > -1 && val.match(new RegExp('^([0-9-]+)\\\\.([0-9]+)$')) !== null && (!allowsRange || (val >= begin && val <= end)) && (!allowsSteps || (val % steps === 0))) {\n          return true;\n        }\n      }\n      return false;\n    },\n    errorMessage: '',\n    errorMessageKey: 'badInt'\n  });\n\n  /*\n   * Validate alpha numeric\n   */\n  $.formUtils.addValidator({\n    name: 'alphanumeric',\n    validatorFunction: function (val, $el, conf, language) {\n      var patternStart = '^([a-zA-Z0-9',\n        patternEnd = ']+)$',\n        additionalChars = $el.valAttr('allowing'),\n        pattern = '';\n\n      if (additionalChars) {\n        pattern = patternStart + additionalChars + patternEnd;\n        var extra = additionalChars.replace(/\\\\/g, '');\n        if (extra.indexOf(' ') > -1) {\n          extra = extra.replace(' ', '');\n          extra += language.andSpaces || $.formUtils.LANG.andSpaces;\n        }\n        this.errorMessage = language.badAlphaNumeric + language.badAlphaNumericExtra + extra;\n      } else {\n        pattern = patternStart + patternEnd;\n        this.errorMessage = language.badAlphaNumeric;\n      }\n\n      return new RegExp(pattern).test(val);\n    },\n    errorMessage: '',\n    errorMessageKey: ''\n  });\n\n  /*\n   * Validate against regexp\n   */\n  $.formUtils.addValidator({\n    name: 'custom',\n    validatorFunction: function (val, $el) {\n      var regexp = new RegExp($el.valAttr('regexp'));\n      return regexp.test(val);\n    },\n    errorMessage: '',\n    errorMessageKey: 'badCustomVal'\n  });\n\n  /*\n   * Validate date\n   */\n  $.formUtils.addValidator({\n    name: 'date',\n    validatorFunction: function (date, $el, conf) {\n      var dateFormat = $el.valAttr('format') || conf.dateFormat || 'yyyy-mm-dd',\n        addMissingLeadingZeros = $el.valAttr('require-leading-zero') === 'false';\n      return $.formUtils.parseDate(date, dateFormat, addMissingLeadingZeros) !== false;\n    },\n    errorMessage: '',\n    errorMessageKey: 'badDate'\n  });\n\n\n  /*\n   * Validate group of checkboxes, validate qty required is checked\n   * written by Steve Wasiura : http://stevewasiura.waztech.com\n   * element attrs\n   *    data-validation=\"checkbox_group\"\n   *    data-validation-qty=\"1-2\"  // min 1 max 2\n   *    data-validation-error-msg=\"chose min 1, max of 2 checkboxes\"\n   */\n  $.formUtils.addValidator({\n    name: 'checkbox_group',\n    validatorFunction: function (val, $el, conf, lang, $form) {\n      // preset return var\n      var isValid = true,\n      // get name of element. since it is a checkbox group, all checkboxes will have same name\n        elname = $el.attr('name'),\n      // get checkboxes and count the checked ones\n        $checkBoxes = $('input[type=checkbox][name^=\"' + elname + '\"]', $form),\n        checkedCount = $checkBoxes.filter(':checked').length,\n      // get el attr that specs qty required / allowed\n        qtyAllowed = $el.valAttr('qty');\n\n      if (qtyAllowed === undefined) {\n        var elementType = $el.get(0).nodeName;\n        alert('Attribute \"data-validation-qty\" is missing from ' + elementType + ' named ' + $el.attr('name'));\n      }\n\n      // call Utility function to check if count is above min, below max, within range etc.\n      var qtyCheckResults = $.formUtils.numericRangeCheck(checkedCount, qtyAllowed);\n\n      // results will be array, [0]=result str, [1]=qty int\n      switch (qtyCheckResults[0]) {\n        // outside allowed range\n        case 'out':\n          this.errorMessage = lang.groupCheckedRangeStart + qtyAllowed + lang.groupCheckedEnd;\n          isValid = false;\n          break;\n        // below min qty\n        case 'min':\n          this.errorMessage = lang.groupCheckedTooFewStart + qtyCheckResults[1] + lang.groupCheckedEnd;\n          isValid = false;\n          break;\n        // above max qty\n        case 'max':\n          this.errorMessage = lang.groupCheckedTooManyStart + qtyCheckResults[1] + lang.groupCheckedEnd;\n          isValid = false;\n          break;\n        // ok\n        default:\n          isValid = true;\n      }\n\n      if( !isValid ) {\n        var _triggerOnBlur = function() {\n          $checkBoxes.unbind('click', _triggerOnBlur);\n          $checkBoxes.filter('*[data-validation]').validateInputOnBlur(lang, conf, false, 'blur');\n        };\n        $checkBoxes.bind('click', _triggerOnBlur);\n      }\n\n      return isValid;\n    }\n    //   errorMessage : '', // set above in switch statement\n    //   errorMessageKey: '' // not used\n  });\n\n})(jQuery);\n\n\n}));\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/jsconf.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a){\"use strict\";a.setupValidation=function(b){var c=a(b.form||\"form\");a.each(b.validate||b.validation||{},function(b,d){var e;e=\"#\"===b[0]?a(b):\".\"===b[0]?c.find(b):c.find('*[name=\"'+b+'\"]'),e.attr(\"data-validation\",d.validation),a.each(d,function(a,b){\"validation\"!==a&&b!==!1&&(b===!0&&(b=\"true\"),\"_\"===a[0]?(a=a.substring(1),b===!1?e.removeAttr(a):e.attr(a,b)):e.valAttr(a,b))})}),a.validate(b)}}(a)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/location.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a){a.formUtils.addValidator({name:\"country\",validatorFunction:function(b){return a.inArray(b.toLowerCase(),this.countries)>-1},countries:[\"afghanistan\",\"albania\",\"algeria\",\"american samoa\",\"andorra\",\"angola\",\"anguilla\",\"antarctica\",\"antigua and barbuda\",\"argentina\",\"armenia\",\"aruba\",\"australia\",\"austria\",\"azerbaijan\",\"bahamas\",\"bahrain\",\"bangladesh\",\"barbados\",\"belarus\",\"belgium\",\"belize\",\"benin\",\"bermuda\",\"bhutan\",\"bolivia\",\"bonaire\",\"bosnia and herzegovina\",\"botswana\",\"bouvet island\",\"brazil\",\"british indian ocean territory\",\"brunei darussalam\",\"bulgaria\",\"burkina faso\",\"burundi\",\"cabo verde\",\"cambodia\",\"cameroon\",\"canada\",\"cayman islands\",\"central african republic\",\"chad\",\"chile\",\"china\",\"christmas island\",\"cocos islands\",\"colombia\",\"comoros\",\"democratic republic of the congo\",\"congo\",\"cook islands\",\"costa rica\",\"côte d'ivoire\",\"croatia\",\"cuba\",\"curaçao\",\"cyprus\",\"czechia\",\"denmark\",\"djibouti\",\"dominica\",\"dominican republic\",\"ecuador\",\"egypt\",\"el salvador\",\"equatorial guinea\",\"eritrea\",\"estonia\",\"ethiopia\",\"falkland islands\",\"faroe islands\",\"fiji\",\"finland\",\"france\",\"french guiana\",\"french polynesia\",\"french southern territories\",\"gabon\",\"gambia\",\"georgia\",\"germany\",\"ghana\",\"gibraltar\",\"greece\",\"greenland\",\"grenada\",\"guadeloupe\",\"guam\",\"guatemala\",\"guernsey\",\"guinea\",\"guinea-bissau\",\"guyana\",\"haiti\",\"heard island and mcdonald islands\",\"honduras\",\"hong kong\",\"hungary\",\"iceland\",\"india\",\"indonesia\",\"iran\",\"iraq\",\"ireland\",\"isle of man\",\"israel\",\"italy\",\"jamaica\",\"japan\",\"jersey\",\"jordan\",\"kazakhstan\",\"kenya\",\"kiribati\",\"north korea\",\"south korea\",\"kuwait\",\"kyrgyzstan\",\"laos\",\"latvia\",\"lebanon\",\"lesotho\",\"liberia\",\"libya\",\"liechtenstein\",\"lithuania\",\"luxembourg\",\"macao\",\"macedonia\",\"madagascar\",\"malawi\",\"malaysia\",\"maldives\",\"mali\",\"malta\",\"marshall islands\",\"martinique\",\"mauritania\",\"mauritius\",\"mayotte\",\"mexico\",\"micronesia\",\"moldova\",\"monaco\",\"mongolia\",\"montenegro\",\"montserrat\",\"morocco\",\"mozambique\",\"myanmar\",\"namibia\",\"nauru\",\"nepal\",\"netherlands\",\"new caledonia\",\"new zealand\",\"nicaragua\",\"niger\",\"nigeria\",\"niue\",\"norfolk island\",\"northern mariana islands\",\"norway\",\"oman\",\"pakistan\",\"palau\",\"palestine\",\"panama\",\"papua new guinea\",\"paraguay\",\"peru\",\"philippines\",\"pitcairn\",\"poland\",\"portugal\",\"puerto rico\",\"qatar\",\"réunion\",\"romania\",\"russia\",\"rwanda\",\"saint barthélemy\",\"saint helena\",\"ascension and tristan da cunha\",\"Ascension and tristan da cunha\",\"saint kitts and nevis\",\"saint lucia\",\"saint martin\",\"saint pierre and miquelon\",\"saint vincent and the grenadines\",\"samoa\",\"san marino\",\"sao tome and principe\",\"saudi arabia\",\"senegal\",\"serbia\",\"seychelles\",\"sierra leone\",\"singapore\",\"sint maarten\",\"slovakia\",\"slovenia\",\"solomon islands\",\"somalia\",\"south africa\",\"south georgia and the south sandwich islands\",\"south sudan\",\"spain\",\"sri lanka\",\"sudan\",\"suriname\",\"svalbard and jan mayen\",\"swaziland\",\"sweden\",\"switzerland\",\"syria\",\"taiwan\",\"tajikistan\",\"tanzania\",\"thailand\",\"timor-leste\",\"togo\",\"tokelau\",\"tonga\",\"trinidad and tobago\",\"tunisia\",\"turkey\",\"turkmenistan\",\"turks and caicos islands\",\"tuvalu\",\"uganda\",\"ukraine\",\"united arab emirates\",\"united kingdom\",\"united states minor outlying islands\",\"united states\",\"uruguay\",\"uzbekistan\",\"vanuatu\",\"venezuela\",\"vatican city\",\"vietnam\",\"virgin islands (british)\",\"virgin islands (us)\",\"wallis and futuna\",\"western sahara\",\"yemen\",\"zambia\",\"zimbabwe\",\"åland islands\"],errorMessage:\"\",errorMessageKey:\"badCustomVal\"}),a.formUtils.addValidator({name:\"federatestate\",validatorFunction:function(b){return a.inArray(b.toLowerCase(),this.states)>-1},states:[\"alabama\",\"alaska\",\"arizona\",\"arkansas\",\"california\",\"colorado\",\"connecticut\",\"delaware\",\"florida\",\"georgia\",\"hawaii\",\"idaho\",\"illinois\",\"indiana\",\"iowa\",\"kansas\",\"kentucky\",\"louisiana\",\"maine\",\"maryland\",\"district of columbia\",\"massachusetts\",\"michigan\",\"minnesota\",\"mississippi\",\"missouri\",\"montana\",\"nebraska\",\"nevada\",\"new hampshire\",\"new jersey\",\"new mexico\",\"new york\",\"north carolina\",\"north dakota\",\"ohio\",\"oklahoma\",\"oregon\",\"pennsylvania\",\"rhode island\",\"south carolina\",\"south dakota\",\"tennessee\",\"texas\",\"utah\",\"vermont\",\"virginia\",\"washington\",\"west virginia\",\"wisconsin\",\"wyoming\"],errorMessage:\"\",errorMessageKey:\"badCustomVal\"}),a.formUtils.addValidator({name:\"longlat\",validatorFunction:function(a){var b=/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/;return b.test(a)},errorMessage:\"\",errorMessageKey:\"badCustomVal\"});var b=function(b){var c=[];return a.each(b,function(a,b){c.push(b.substr(0,1).toUpperCase()+b.substr(1,b.length))}),c.sort(),c};a.fn.suggestCountry=function(c){var d=b(a.formUtils.validators.validate_country.countries),e=a.inArray(d,\"Usa\");return d[e]=\"USA\",a.formUtils.suggest(this,d,c)},a.fn.suggestState=function(c){var d=b(a.formUtils.validators.validate_federatestate.states);return a.formUtils.suggest(this,d,c)}}(a)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/logic.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a){\"use strict\";var b=function(b,c){var d=function(){var c=a(this),d=c.valAttr(\"depends-on\")||c.valAttr(\"if-checked\");if(d){var f=a.formUtils.getValue('[name=\"'+d+'\"]',b),g=a.split(c.valAttr(\"depends-on-value\"),!1,!1),h=!f||g.length&&!e(f,g);h&&c.valAttr(\"skipped\",\"1\")}},e=function(b,c){var d=!1,e=b.toLocaleLowerCase();return a.each(c,function(a,b){if(e===b.toLocaleLowerCase())return d=!0,!1}),d},f=function(){var b=a(this),d=this.$dependingInput,e=a.formUtils.getValue(b),f=b.valAttr(\"depending-value\"),g=!!a.formUtils.getValue(d),h=!e||f&&f!==e;h&&!g&&a.formUtils.dialogs.removeInputStylingAndMessage(d,c)};b.find(\"[data-validation-depends-on]\").off(\"beforeValidation\",d).on(\"beforeValidation\",d).each(function(){var c=a(this);b.find('[name=\"'+c.valAttr(\"depends-on\")+'\"]').each(function(){a(this).off(\"change\",f).on(\"change\",f).valAttr(\"depending-value\",c.valAttr(\"depends-on-value\")),this.$dependingInput=c})})},c=function(b,c){var d=function(){var c=a(this),d=c.valAttr(\"optional-if-answered\"),e=!1,f=!!a.formUtils.getValue(c);f||(a.each(a.split(d),function(c,d){var f=b.find('[name=\"'+d+'\"]');if(e=!!a.formUtils.getValue(f))return!1}),e&&c.valAttr(\"skipped\",1))},e=function(){var d=a(this),e=d.valAttr(\"optional-if-answered\");a.each(a.split(e),function(d,e){var f=b.find('[name=\"'+e+'\"]'),g=!!a.formUtils.getValue(f);g||a.formUtils.dialogs.removeInputStylingAndMessage(f,c)})};b.find(\"[data-validation-optional-if-answered]\").off(\"beforeValidation\",d).on(\"beforeValidation\",d).each(function(){a(this).off(\"change\",e).on(\"change\",e)})};a.formUtils.$win.bind(\"validatorsLoaded formValidationSetup\",function(d,e,f){e||(e=a(\"form\")),b(e,f),c(e,f)})}(a)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/poland.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a){a.formUtils.addValidator({name:\"plpesel\",validatorFunction:function(a){var b=[1,3,7,9,1,3,7,9,1,3],c=0,d=0;if(/\\d{11}/.test(a)&&11===a.length){for(var e=0;e<10;e++)c+=a[e]*b[e];if(c%10!==0&&(d=10-c%10),parseInt(a.charAt(10))===d)return!0}return!1},errorMessage:\"\",errorMessageKey:\"badPlPesel\"}),a.formUtils.addValidator({name:\"plnip\",validatorFunction:function(a){var b=[6,5,7,2,3,4,5,6,7],c=0;if(/\\d{10}/.test(a)&&10===a.length){for(var d=0;d<9;d++)c+=a[d]*b[d];if(parseInt(a.charAt(9))===c%11)return!0}return!1},errorMessage:\"\",errorMessageKey:\"badPlNip\"}),a.formUtils.addValidator({name:\"plregon\",validatorFunction:function(a){var b=[8,9,2,3,4,5,6,7],c=[2,4,8,5,0,9,7,3,6,1,2,4,8],d=0,e=0;if(/(\\d{14}|\\d{9})/.test(a)&&(9===a.length||14===a.length)){for(var f=0;f<8;f++)d+=a[f]*b[f];if(d%11!==10&&(e=d%11),parseInt(a.charAt(8))===e){if(14!==a.length)return!0;for(d=0,f=0;f<13;f++)d+=a[f]*c[f];if(d%11!==10&&(e=d%11),parseInt(a.charAt(13))===e)return!0}}return!1},errorMessage:\"\",errorMessageKey:\"badPlRegon\"})}(a)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/sanitize.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";var c='[type=\"button\"], [type=\"submit\"], [type=\"radio\"], [type=\"checkbox\"], [type=\"reset\"], [type=\"search\"]',d={upper:function(a){return a.toLocaleUpperCase()},lower:function(a){return a.toLocaleLowerCase()},trim:function(b){return a.trim(b)},trimLeft:function(a){return a.replace(/^\\s+/,\"\")},trimRight:function(a){return a.replace(/\\s+$/,\"\")},capitalize:function(b){var c=b.split(\" \");return a.each(c,function(a,b){c[a]=b.substr(0,1).toUpperCase()+b.substr(1,b.length)}),c.join(\" \")},insert:function(a,b,c){var d=(b.attr(\"data-sanitize-insert-\"+c)||\"\").replace(/\\[SPACE\\]/g,\" \");return\"left\"===c&&0===a.indexOf(d)||\"right\"===c&&a.substring(a.length-d.length)===d?a:(\"left\"===c?d:\"\")+a+(\"right\"===c?d:\"\")},insertRight:function(a,b){return this.insert(a,b,\"right\")},insertLeft:function(a,b){return this.insert(a,b,\"left\")},numberFormat:function(a,c){if(0===a.length)return a;if(!(\"numeral\"in b))throw new ReferenceError('Using sanitation function \"numberFormat\" requires that you include numeral.js (http://numeraljs.com/)');return a=numeral().unformat(a),a=numeral(a).format(c.attr(\"data-sanitize-number-format\"))},strip:function(b,c){var d=c.attr(\"data-sanitize-strip\")||\"\";return a.split(d,function(c){var d=new RegExp(a.isNumeric(c)?c:\"\\\\\"+c,\"g\");b=b.replace(d,\"\")}),b},escape:function(b,c){var d=c.valAttr(\"is-escaped\"),e={\"<\":\"__%AMP%__lt;\",\">\":\"__%AMP%__gt;\",\"&\":\"__%AMP%__amp;\",\"'\":\"__%AMP%__#8217;\",'\"':\"__%AMP%__quot;\"};return\"yes\"===d?b:(c.valAttr(\"is-escaped\",\"yes\"),c.one(\"keyup\",function(a){9!==a.keyCode&&c.valAttr(\"is-escaped\",\"no\")}),a.each(e,function(a,c){b=b.replace(new RegExp(a,\"g\"),c)}),b.replace(new RegExp(\"__%AMP%__\",\"g\"),\"&\"))}},e=function(b,e,f){e||(e=a(\"form\")),e.each||(e=a(e));var g=function(){var b=a(this),c=b.val();a.split(b.attr(\"data-sanitize\"),function(a){if(!(a in d))throw new Error('Use of unknown sanitize command \"'+a+'\"');c=d[a](c,b,f)}),b.val(c).trigger(\"keyup.validation\")};e.each(function(){var b=a(this);f.sanitizeAll&&b.find(\"input,textarea\").not(c).each(function(){var b=a(this),c=b.attr(\"data-sanitize\")||\"\";b.attr(\"data-sanitize\",f.sanitizeAll+\" \"+c)}),b.find(\"[data-sanitize]\").unbind(\"blur.sanitation\",g).bind(\"blur.sanitation\",g),a(function(){b.trigger(\"blur.sanitation\")})})};a(b).on(\"validatorsLoaded formValidationSetup\",e),a.formUtils.setupSanitation=e}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/security.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a.formUtils.addValidator({name:\"spamcheck\",validatorFunction:function(a,b){var c=b.valAttr(\"captcha\");return c===a},errorMessage:\"\",errorMessageKey:\"badSecurityAnswer\"}),a.formUtils.addValidator({name:\"confirmation\",validatorFunction:function(b,c,d,e,f){var g,h=c.valAttr(\"confirm\")||c.attr(\"name\")+\"_confirmation\",i=f.find('[name=\"'+h+'\"]');if(!i.length)return a.formUtils.warn('Password confirmation validator: could not find an input with name \"'+h+'\"'),!1;if(g=i.val(),d.validateOnBlur&&!i[0].hasValidationCallback){i[0].hasValidationCallback=!0;var j=function(){c.validate()};i.on(\"keyup\",j),f.one(\"formValidationSetup\",function(){i[0].hasValidationCallback=!1,i.off(\"keyup\",j)})}return b===g},errorMessage:\"\",errorMessageKey:\"notConfirmed\"});var c={amex:[15,15],diners_club:[14,14],cjb:[16,16],laser:[16,19],visa:[16,16],mastercard:[16,16],maestro:[12,19],discover:[16,16]},d=!1,e=!1;a.formUtils.addValidator({name:\"creditcard\",validatorFunction:function(b,f){var g=a.split(f.valAttr(\"allowing\")||\"\");if(e=a.inArray(\"amex\",g)>-1,d=e&&1===g.length,g.length>0){var h=!1;if(a.each(g,function(d,e){if(e in c){if(b.length>=c[e][0]&&b.length<=c[e][1])return h=!0,!1}else a.formUtils.warn('Use of unknown credit card \"'+e+'\"')}),!h)return!1}if(\"\"!==b.replace(new RegExp(\"[0-9]\",\"g\"),\"\"))return!1;var i=0;return a.each(b.split(\"\").reverse(),function(a,b){b=parseInt(b,10),a%2===0?i+=b:(b*=2,i+=b<10?b:b-9)}),i%10===0},errorMessage:\"\",errorMessageKey:\"badCreditCard\"}),a.formUtils.addValidator({name:\"cvv\",validatorFunction:function(a){return\"\"===a.replace(/[0-9]/g,\"\")&&(a+=\"\",d?4===a.length:e?3===a.length||4===a.length:3===a.length)},errorMessage:\"\",errorMessageKey:\"badCVV\"}),a.formUtils.addValidator({name:\"strength\",validatorFunction:function(b,c){var d=c.valAttr(\"strength\")||2;return d&&d>3&&(d=3),a.formUtils.validators.validate_strength.calculatePasswordStrength(b)>=d},errorMessage:\"\",errorMessageKey:\"badStrength\",calculatePasswordStrength:function(a){if(a.length<4)return 0;var b=0,c=function(a,b){for(var c=\"\",d=0;d<b.length;d++){for(var e=!0,f=0;f<a&&f+d+a<b.length;f++)e=e&&b.charAt(f+d)===b.charAt(f+d+a);f<a&&(e=!1),e?(d+=a-1,e=!1):c+=b.charAt(d)}return c};return b+=4*a.length,b+=1*(c(1,a).length-a.length),b+=1*(c(2,a).length-a.length),b+=1*(c(3,a).length-a.length),b+=1*(c(4,a).length-a.length),a.match(/(.*[0-9].*[0-9].*[0-9])/)&&(b+=5),a.match(/(.*[!,@,#,$,%,^,&,*,?,_,~].*[!,@,#,$,%,^,&,*,?,_,~])/)&&(b+=5),a.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)&&(b+=10),a.match(/([a-zA-Z])/)&&a.match(/([0-9])/)&&(b+=15),a.match(/([!,@,#,$,%,^,&,*,?,_,~])/)&&a.match(/([0-9])/)&&(b+=15),a.match(/([!,@,#,$,%,^,&,*,?,_,~])/)&&a.match(/([a-zA-Z])/)&&(b+=15),(a.match(/^\\w+$/)||a.match(/^\\d+$/))&&(b-=10),b<0&&(b=0),b>100&&(b=100),b<20?0:b<40?1:b<=60?2:3},strengthDisplay:function(b,c){var d={fontSize:\"12pt\",padding:\"4px\",bad:\"Very bad\",weak:\"Weak\",good:\"Good\",strong:\"Strong\"};c&&a.extend(d,c),b.bind(\"keyup\",function(){var b=a(this).val(),c=\"undefined\"==typeof d.parent?a(this).parent():a(d.parent),e=c.find(\".strength-meter\"),f=a.formUtils.validators.validate_strength.calculatePasswordStrength(b),g={background:\"pink\",color:\"#FF0000\",fontWeight:\"bold\",border:\"red solid 1px\",borderWidth:\"0px 0px 4px\",display:\"inline-block\",fontSize:d.fontSize,padding:d.padding},h=d.bad;0===e.length&&(e=a(\"<span></span>\"),e.addClass(\"strength-meter\").appendTo(c)),b?e.show():e.hide(),1===f?h=d.weak:2===f?(g.background=\"lightyellow\",g.borderColor=\"yellow\",g.color=\"goldenrod\",h=d.good):f>=3&&(g.background=\"lightgreen\",g.borderColor=\"darkgreen\",g.color=\"darkgreen\",h=d.strong),e.css(g).text(h)})}});var f=function(b,c,d,e,f){var g=c.valAttr(\"req-params\")||c.data(\"validation-req-params\")||{},h=function(a,b){b(a)};g||(g={}),\"string\"==typeof g&&(g=a.parseJSON(g)),g[c.valAttr(\"param-name\")||c.attr(\"name\")]=d,a.ajax({url:b,type:\"POST\",cache:!1,data:g,dataType:\"json\",error:function(a){return h({valid:!1,message:\"Connection failed with status: \"+a.statusText},f),!1},success:function(a){h(a,f)}})};a.formUtils.addValidator({name:\"server\",validatorFunction:function(b,c,d,e,g,h){var i=a.formUtils.asyncValidation(this.name,c,g);return i.run(h,function(a){var e=c.valAttr(\"url\")||d.backendUrl||document.location.href;g.addClass(\"validating-server-side\"),c.addClass(\"validating-server-side\"),f(e,c,b,d,function(b){g.removeClass(\"validating-server-side\"),c.removeClass(\"validating-server-side\"),b.message&&(c.attr(d.validationErrorMsgAttribute,b.message),c.one(\"validation\",function(){c.removeAttr(d.validationErrorMsgAttribute)})),a(b.valid)})})},errorMessage:\"\",errorMessageKey:\"badBackend\"}),a.formUtils.addValidator({name:\"letternumeric\",validatorFunction:function(b,c,d,e){var f=\"^([a-zA-Z0-9ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎↃↄⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々〆〱-〵〻〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛥꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ\",g=\"]+)$\",h=c.valAttr(\"allowing\"),i=\"\";if(h){i=f+h+g;var j=h.replace(/\\\\/g,\"\");j.indexOf(\" \")>-1&&(j=j.replace(\" \",\"\"),j+=e.andSpaces||a.formUtils.LANG.andSpaces),this.errorMessage=e.badAlphaNumeric+e.badAlphaNumericExtra+j}else i=f+g,this.errorMessage=e.badAlphaNumeric;return new RegExp(i).test(b)},errorMessage:\"\",errorMessageKey:\"requiredFields\"}),a.formUtils.addValidator({name:\"complexity\",validatorFunction:function(b,c,d,e){var f=c.valAttr(\"require-uc-letter\")||\"0\",g=c.valAttr(\"require-lc-letter\")||\"0\",h=c.valAttr(\"require-special-char\")||\"0\",i=c.valAttr(\"require-numeral\")||\"0\",j=c.valAttr(\"require-length\")||\"0\",k={\"uc-letter\":{pattern:\"^(?=(?:.*[A-Z]){\"+f+\",}).+\",numRequired:f,dialogEnd:e.passwordComplexityUppercaseInfo},\"lc-letter\":{pattern:\"^(?=(?:.*[a-z]){\"+g+\",}).+\",numRequired:g,dialogEnd:e.passwordComplexityLowercaseInfo},\"special-char\":{pattern:\"^(?=(?:.*(_|[!\\\"#$%&'()*+\\\\\\\\,-./:;<=>?@[\\\\]^_`{|}~])){\"+h+\",}).+\",numRequired:h,dialogEnd:e.passwordComplexitySpecialCharsInfo},numeral:{pattern:\"^(?=(?:.*\\\\d){\"+i+\",}).+\",numRequired:i,dialogEnd:a.formUtils.LANG.passwordComplexityNumericCharsInfo},length:{callback:function(a){return a.length>j},numRequired:j,dialogEnd:\"Lorem te ipsum\"}},l=\"\";return a.each(k,function(a,d){var f=parseInt(d.numRequired,10);if(f){var g=new RegExp(d.pattern),h=!1;h=d.callback?d.callback(b):g.test(b),h?c.trigger(\"complexityRequirementValidation\",[!0,a]):(\"\"===l&&(l=e.passwordComplexityStart),l+=e.passwordComplexitySeparator+f+d.dialogEnd,c.trigger(\"complexityRequirementValidation\",[!1,a]))}}),!l||(this.errorMessage=l+e.passwordComplexityEnd,!1)},errorMessage:\"\",errorMessageKey:\"\"}),a.formUtils.addValidator({name:\"recaptcha\",validatorFunction:function(a,b){return\"\"!==grecaptcha.getResponse(b.valAttr(\"recaptcha-widget-id\"))},errorMessage:\"\",errorMessageKey:\"badreCaptcha\"}),a.fn.displayPasswordStrength=function(b){return new a.formUtils.validators.validate_strength.strengthDisplay(this,b),this};var g=function(b,c,d){if(c||(c=a(\"form\")),\"undefined\"!=typeof grecaptcha&&!a.formUtils.hasLoadedGrecaptcha)throw new Error(\"reCaptcha API can not be loaded by hand, delete reCaptcha API snippet.\");if(!a.formUtils.hasLoadedGrecaptcha&&a('[data-validation~=\"recaptcha\"]',c).length){a.formUtils.hasLoadedGrecaptcha=!0;var e=\"//www.google.com/recaptcha/api.js?onload=reCaptchaLoaded&render=explicit\"+(d.lang?\"&hl=\"+d.lang:\"\"),f=document.createElement(\"script\");f.type=\"text/javascript\",f.async=!0,f.defer=!0,f.src=e,document.getElementsByTagName(\"body\")[0].appendChild(f)}};b.reCaptchaLoaded=function(b){b&&\"object\"==typeof b&&b.length||(b=a(\"form\"));var c=0,d=[];b.each(function(){var b=a(this),e=b.context.validationConfig||!1;e&&a('[data-validation~=\"recaptcha\"]',b).each(function(){var f=a(this),g=document.createElement(\"DIV\"),h=e.reCaptchaSiteKey||f.valAttr(\"recaptcha-sitekey\"),i=e.reCaptchaTheme||f.valAttr(\"recaptcha-theme\")||\"light\",j=e.reCaptchaSize||f.valAttr(\"recaptcha-size\")||\"normal\",k=e.reCaptchaType||f.valAttr(\"recaptcha-type\")||\"image\";if(!h)throw new Error(\"Google reCaptcha site key is required.\");b.attr(\"id\")||b.attr(\"id\",\"recaptcha-form-\"+c++),d[b.attr(\"id\")]=function(b){var c;a(\"#\"+c).each(function(){a('[data-validation~=\"recaptcha\"]',a(this)).each(function(){a(this).trigger(\"validation\",b&&\"\"!==b)})})},d[b.attr(\"id\")].formID=b.attr(\"id\");var l=grecaptcha.render(g,{sitekey:h,theme:i,size:j,type:k,callback:d[b.attr(\"id\")],\"expired-callback\":d[b.attr(\"id\")]});f.valAttr(\"recaptcha-widget-id\",l).hide().on(\"beforeValidation\",function(a){a.stopImmediatePropagation()}).parent().append(g)})})},a(b).on(\"validatorsLoaded formValidationSetup\",g)}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/sepa.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a){\"use strict\";var b=[[\"AD\",24,\"F04F04A12\"],[\"AE\",23,\"F03F16\"],[\"AL\",28,\"F08A16\"],[\"AT\",20,\"F05F11\"],[\"AZ\",28,\"U04A20\"],[\"BA\",20,\"F03F03F08F02\"],[\"BE\",16,\"F03F07F02\"],[\"BG\",22,\"U04F04F02A08\"],[\"BH\",22,\"U04A14\"],[\"BR\",29,\"F08F05F10U01A01\"],[\"CH\",21,\"F05A12\"],[\"CR\",21,\"F03F14\"],[\"CY\",28,\"F03F05A16\"],[\"CZ\",24,\"F04F06F10\"],[\"DE\",22,\"F08F10\"],[\"DK\",18,\"F04F09F01\"],[\"DO\",28,\"U04F20\"],[\"EE\",20,\"F02F02F11F01\"],[\"ES\",24,\"F04F04F01F01F10\"],[\"FI\",18,\"F06F07F01\"],[\"FO\",18,\"F04F09F01\"],[\"FR\",27,\"F05F05A11F02\"],[\"GB\",22,\"U04F06F08\"],[\"GE\",22,\"U02F16\"],[\"GI\",23,\"U04A15\"],[\"GL\",18,\"F04F09F01\"],[\"GR\",27,\"F03F04A16\"],[\"GT\",28,\"A04A20\"],[\"HR\",21,\"F07F10\"],[\"HU\",28,\"F03F04F01F15F01\"],[\"IE\",22,\"U04F06F08\"],[\"IL\",23,\"F03F03F13\"],[\"IS\",26,\"F04F02F06F10\"],[\"IT\",27,\"U01F05F05A12\"],[\"KW\",30,\"U04A22\"],[\"KZ\",20,\"F03A13\"],[\"LB\",28,\"F04A20\"],[\"LC\",32,\"U04F24\"],[\"LI\",21,\"F05A12\"],[\"LT\",20,\"F05F11\"],[\"LU\",20,\"F03A13\"],[\"LV\",21,\"U04A13\"],[\"MC\",27,\"F05F05A11F02\"],[\"MD\",24,\"U02A18\"],[\"ME\",22,\"F03F13F02\"],[\"MK\",19,\"F03A10F02\"],[\"MR\",27,\"F05F05F11F02\"],[\"MT\",31,\"U04F05A18\"],[\"MU\",30,\"U04F02F02F12F03U03\"],[\"NL\",18,\"U04F10\"],[\"NO\",15,\"F04F06F01\"],[\"PK\",24,\"U04A16\"],[\"PL\",28,\"F08F16\"],[\"PS\",29,\"U04A21\"],[\"PT\",25,\"F04F04F11F02\"],[\"RO\",24,\"U04A16\"],[\"RS\",22,\"F03F13F02\"],[\"SA\",24,\"F02A18\"],[\"SE\",24,\"F03F16F01\"],[\"SI\",19,\"F05F08F02\"],[\"SK\",24,\"F04F06F10\"],[\"SM\",27,\"U01F05F05A12\"],[\"ST\",25,\"F08F11F02\"],[\"TL\",23,\"F03F14F02\"],[\"TN\",24,\"F02F03F13F02\"],[\"TR\",26,\"F05F01A16\"],[\"VG\",24,\"U04F16\"],[\"XK\",20,\"F04F10F02\"],[\"AO\",25,\"F21\"],[\"BF\",27,\"F23\"],[\"BI\",16,\"F12\"],[\"BJ\",28,\"F24\"],[\"CI\",28,\"U01F23\"],[\"CM\",27,\"F23\"],[\"CV\",25,\"F21\"],[\"DZ\",24,\"F20\"],[\"IR\",26,\"F22\"],[\"JO\",30,\"A04F22\"],[\"MG\",27,\"F23\"],[\"ML\",28,\"U01F23\"],[\"MZ\",25,\"F21\"],[\"QA\",29,\"U04A21\"],[\"SN\",28,\"U01F23\"],[\"UA\",29,\"F25\"]],c=function(a){a=a.replace(/\\s+/g,\"\"),a=a.substr(4)+a.substr(0,4),a=a.split(\"\").map(function(a){var b=a.charCodeAt(0);return b>=\"A\".charCodeAt(0)&&b<=\"Z\".charCodeAt(0)?b-\"A\".charCodeAt(0)+10:a}).join(\"\");for(var b,c=a;c.length>2;)b=c.slice(0,9),c=(parseInt(b,10)%97).toString()+c.slice(b.length);return parseInt(c,10)%97===1},d=function(a){a=a.toUpperCase(),a=a.replace(/\\s+/g,\"\");var c=a.slice(0,2),d=0,e=\"\";for(d=0;d<b.length;++d)if(b[d][0]===c){e=b[d][2];break}if(\"\"===e)return!1;var f=e.match(/(.{3})/g).map(function(a){var b,c=a.slice(0,1),d=parseInt(a.slice(1),10);switch(c){case\"A\":b=\"0-9A-Za-z\";break;case\"B\":b=\"0-9A-Z\";break;case\"C\":b=\"A-Za-z\";break;case\"F\":b=\"0-9\";break;case\"L\":b=\"a-z\";break;case\"U\":b=\"A-Z\";break;case\"W\":b=\"0-9a-z\"}return\"([\"+b+\"]{\"+d+\"})\"}),g=new RegExp(\"^\"+f.join(\"\")+\"$\");return a.length===b[d][1]&&g.test(a.slice(4))};a.formUtils.addValidator({name:\"sepa\",validatorFunction:c,errorMessage:\"\",errorMessageKey:\"badSepa\"}),a.formUtils.addValidator({name:\"iban\",validatorFunction:function(a){return d(a)&&c(a)},errorMessage:\"\",errorMessageKey:\"badIban\"}),a.formUtils.addValidator({name:\"bic\",validatorFunction:function(a){var b=new RegExp(\"^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$\");return b.test(a)},errorMessage:\"\",errorMessageKey:\"badBic\"})}(a)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/sweden.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){a.formUtils.addValidator({name:\"swesec\",validatorFunction:function(c,d){var e,f,g,h;if(d.valAttr(\"use-hyphen\")){if(h=c.split(\"-\"),2!==h.length)return!1;c=h.join(\"\")}if(!c.match(/^(\\d{4})(\\d{2})(\\d{2})(\\d{4})$/))return!1;e=RegExp.$1,f=a.formUtils.parseDateInt(RegExp.$2),g=a.formUtils.parseDateInt(RegExp.$3),b.ssnGender=parseInt(RegExp.$4.substring(2,3))%2===0?\"female\":\"male\";var i=[31,28,31,30,31,30,31,31,30,31,30,31];if((e%400===0||e%4===0&&e%100!==0)&&(i[1]=29),f<1||f>12||g<1||g>i[f-1])return!1;c=c.substring(2,c.length);for(var j=\"\",k=0;k<c.length;k++)j+=((k+1)%2+1)*c.substring(k,k+1);var l=0;for(k=0;k<j.length;k++)l+=parseInt(j.substring(k,k+1),10);return l%10===0},errorMessage:\"\",errorMessageKey:\"badSecurityNumber\"}),a.formUtils.addValidator({name:\"swecounty\",validatorFunction:function(b){return b=b.toLowerCase(),a.inArray(b,this.counties)!==-1||\"län\"!==b.substr(-3).toLocaleLowerCase()&&a.inArray(b+\"s län\",this.counties)>-1},errorMessage:\"\",errorMessageKey:\"badCustomVal\",counties:[\"stockholms län\",\"uppsala län\",\"södermanlands län\",\"östergötlands län\",\"jönköpings län\",\"kronobergs län\",\"kalmar län\",\"gotlands län\",\"blekinge län\",\"skåne län\",\"hallands län\",\"västra götalands län\",\"värmlands län\",\"örebro län\",\"västmanlands län\",\"dalarnas län\",\"gävleborgs län\",\"västernorrlands län\",\"jämtlands län\",\"västerbottens län\",\"norrbottens län\"]}),a.formUtils.addValidator({name:\"swemunicipality\",validatorFunction:function(b){return b=b.toLowerCase(),a.inArray(b,this.municipalities)!==-1||(\"s kommun\"===b.substr(-8)&&a.inArray(b.substr(0,b.length-8),this.municipalities)>-1||\" kommun\"===b.substr(-7)&&a.inArray(b.substr(0,b.length-7),this.municipalities)>-1)},errorMessage:\"\",errorMessageKey:\"badCustomVal\",municipalities:[\"ale\",\"alingsås\",\"alvesta\",\"aneby\",\"arboga\",\"arjeplog\",\"arvidsjaur\",\"arvika\",\"askersund\",\"avesta\",\"bengtsfors\",\"berg\",\"bjurholm\",\"bjuv\",\"boden\",\"bollebygd\",\"bollnäs\",\"borgholm\",\"borlänge\",\"borås\",\"botkyrka\",\"boxholm\",\"bromölla\",\"bräcke\",\"burlöv\",\"båstad\",\"dals-ed\",\"danderyd\",\"degerfors\",\"dorotea\",\"eda\",\"ekerö\",\"eksjö\",\"emmaboda\",\"enköpings\",\"eskilstuna\",\"eslövs\",\"essunga\",\"fagersta\",\"falkenberg\",\"falköping\",\"falu\",\"filipstad\",\"finspång\",\"flen\",\"forshaga\",\"färgelanda\",\"gagnef\",\"gislaved\",\"gnesta\",\"gnosjö\",\"gotland\",\"grum\",\"grästorp\",\"gullspång\",\"gällivare\",\"gävle\",\"göteborg\",\"götene\",\"habo\",\"hagfor\",\"hallsberg\",\"hallstahammar\",\"halmstad\",\"hammarö\",\"haninge\",\"haparanda\",\"heby\",\"hedemora\",\"helsingborg\",\"herrljunga\",\"hjo\",\"hofor\",\"huddinge\",\"hudiksvall\",\"hultsfred\",\"hylte\",\"håbo\",\"hällefor\",\"härjedalen\",\"härnösand\",\"härryda\",\"hässleholm\",\"höganäs\",\"högsby\",\"hörby\",\"höör\",\"jokkmokk\",\"järfälla\",\"jönköping\",\"kalix\",\"kalmar\",\"karlsborg\",\"karlshamn\",\"karlskoga\",\"karlskrona\",\"karlstad\",\"katrineholm\",\"kil\",\"kinda\",\"kiruna\",\"klippan\",\"knivsta\",\"kramfors\",\"kristianstad\",\"kristinehamn\",\"krokoms\",\"kumla\",\"kungsbacka\",\"kungsör\",\"kungälv\",\"kävlinge\",\"köping\",\"laholm\",\"landskrona\",\"laxå\",\"lekeberg\",\"leksand\",\"lerum\",\"lessebo\",\"lidingö\",\"lidköping\",\"lilla edets\",\"lindesbergs\",\"linköpings\",\"ljungby\",\"ljusdals\",\"ljusnarsbergs\",\"lomma\",\"ludvika\",\"luleå\",\"lunds\",\"lycksele\",\"lysekil\",\"malmö\",\"malung-sälen\",\"malå\",\"mariestad\",\"marks\",\"markaryd\",\"mellerud\",\"mjölby\",\"mora\",\"motala\",\"mullsjö\",\"munkedal\",\"munkfors\",\"mölndal\",\"mönsterås\",\"mörbylånga\",\"nacka\",\"nora\",\"norberg\",\"nordanstig\",\"nordmaling\",\"norrköping\",\"norrtälje\",\"norsjö\",\"nybro\",\"nykvarn\",\"nyköping\",\"nynäshamn\",\"nässjö\",\"ockelbo\",\"olofström\",\"orsa\",\"orust\",\"osby\",\"oskarshamn\",\"ovanåker\",\"oxelösund\",\"pajala\",\"partille\",\"perstorp\",\"piteå\",\"ragunda\",\"robertsfors\",\"ronneby\",\"rättvik\",\"sala\",\"salem\",\"sandviken\",\"sigtuna\",\"simrishamn\",\"sjöbo\",\"skara\",\"skellefteå\",\"skinnskatteberg\",\"skurup\",\"skövde\",\"smedjebacken\",\"sollefteå\",\"sollentuna\",\"solna\",\"sorsele\",\"sotenäs\",\"staffanstorp\",\"stenungsund\",\"stockholm\",\"storfors\",\"storuman\",\"strängnäs\",\"strömstad\",\"strömsund\",\"sundbyberg\",\"sundsvall\",\"sunne\",\"surahammar\",\"svalöv\",\"svedala\",\"svenljunga\",\"säffle\",\"säter\",\"sävsjö\",\"söderhamns\",\"söderköping\",\"södertälje\",\"sölvesborg\",\"tanum\",\"tibro\",\"tidaholm\",\"tierp\",\"timrå\",\"tingsryd\",\"tjörn\",\"tomelilla\",\"torsby\",\"torså\",\"tranemo\",\"tranå\",\"trelleborg\",\"trollhättan\",\"trosa\",\"tyresö\",\"täby\",\"töreboda\",\"uddevalla\",\"ulricehamns\",\"umeå\",\"upplands väsby\",\"upplands-bro\",\"uppsala\",\"uppvidinge\",\"vadstena\",\"vaggeryd\",\"valdemarsvik\",\"vallentuna\",\"vansbro\",\"vara\",\"varberg\",\"vaxholm\",\"vellinge\",\"vetlanda\",\"vilhelmina\",\"vimmerby\",\"vindeln\",\"vingåker\",\"vårgårda\",\"vänersborg\",\"vännäs\",\"värmdö\",\"värnamo\",\"västervik\",\"västerås\",\"växjö\",\"ydre\",\"ystad\",\"åmål\",\"ånge\",\"åre\",\"årjäng\",\"åsele\",\"åstorp\",\"åtvidaberg\",\"älmhult\",\"älvdalen\",\"älvkarleby\",\"älvsbyn\",\"ängelholm\",\"öckerö\",\"ödeshög\",\"örebro\",\"örkelljunga\",\"örnsköldsvik\",\"östersund\",\"österåker\",\"östhammar\",\"östra göinge\",\"överkalix\",\"övertorneå\"]}),a.formUtils.addValidator({name:\"swephone\",validatorFunction:function(a){var b=a.match(/\\+/g),c=a.match(/-/g);return!(null!==b&&b.length>1||null!==c&&c.length>1)&&((null===b||0===a.indexOf(\"+\"))&&(a=a.replace(/([-|\\+])/g,\"\"),a.length>8&&null===a.match(/[^0-9]/g)))},errorMessage:\"\",errorMessageKey:\"badTelephone\"}),a.formUtils.addValidator({name:\"swemobile\",validatorFunction:function(b){if(!a.formUtils.validators.validate_swephone.validatorFunction(b))return!1;b=b.replace(/[^0-9]/g,\"\");var c=b.substring(0,3);return(10===b.length||\"467\"===c)&&((11===b.length||\"467\"!==c)&&(/07[0-9{1}]/.test(c)||\"467\"===c))},errorMessage:\"\",errorMessageKey:\"badTelephone\"});var c=function(b){var c=[];return a.each(b,function(a,b){c.push(b.substr(0,1).toUpperCase()+b.substr(1,b.length))}),c.sort(),c};a.fn.suggestSwedishCounty=function(b){var d=c(a.formUtils.validators.validate_swecounty.counties);return a.formUtils.suggest(this,d,b)},a.fn.suggestSwedishMunicipality=function(b){var d=c(a.formUtils.validators.validate_swemunicipality.municipalities);return a.formUtils.suggest(this,d,b)}}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/toggleDisabled.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b,c){\"use strict\";var d=function(a,b){\"disabled\"===b?a.find('*[type=\"submit\"]').addClass(\"disabled\").attr(\"disabled\",\"disabled\"):a.find('*[type=\"submit\"]').removeClass(\"disabled\").removeAttr(\"disabled\")},e=!1;a.formUtils.$win.bind(\"validatorsLoaded formValidationSetup\",function(b,f,g){var h=g.disabledFormFilter?f.filter(g.disabledFormFilter):f,i=g.showErrorDialogs===c||g.showErrorDialogs,j=function(b,c,d){var e=a(this);d&&d.indexOf(\"blur\")>-1?e.unbind(\"afterValidation\",j):c.isValid?e.unbind(\"afterValidation\",j):e.valAttr(\"have-been-blurred\")||(c.shouldChangeDisplay=!1)};h.addClass(i?\"disabled-with-errors\":\"disabled-without-errors\").on(\"reset\",function(){d(a(this),\"disabled\")}).find(\"*[data-validation]\").valAttr(\"event\",\"keyup change\").on(\"validation\",function(b,c){if(!e){e=!0;var f=a(this).closest(\"form\");c&&f.isValid(g.language,g,!1)?d(f,\"enabled\"):d(f,\"disabled\"),e=!1}}).on(\"afterValidation\",j).on(\"blur\",function(){a(this).valAttr(\"have-been-blurred\",1)}),d(h,\"disabled\"),h.validateOnEvent(g.language,g)}).on(\"validationErrorDisplay\",function(a,b,c){b.closest(\"form\").hasClass(\"disabled-without-errors\")&&c.hide()})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/uk.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a){\"use strict\";a.formUtils.addValidator({name:\"ukvatnumber\",validatorFunction:function(a){if(a=a.replace(/[^0-9]/g,\"\"),a.length<9)return!1;var b=!1,c=[];c=a.split(\"\");var d=Number(c[7]+c[8]),e=c[0],f=c[1];if(0===e&&f>0)return!1;for(var g=0,h=0;h<7;h++)g+=c[h]*(8-h);for(var i=0,j=0,k=8;k>=2;k--)i+=c[j]*k,j++;for(;g>0;)g-=97;return g=Math.abs(g),d===g&&(b=!0),b||(g%=97,g>=55?g-=55:g+=42,g===d&&(b=!0)),b},errorMessage:\"\",errorMessageKey:\"badUKVatAnswer\"}),a.formUtils.addValidator({name:\"ukutr\",validatorFunction:function(a){var b=[0,6,7,8,9,10,5,4,3,2],c=[2,1,9,8,7,6,5,4,3,2,1],d=0;if(/\\d{10}/.test(a)&&10===a.length){for(var e=0;e<10;e++)d+=a[e]*b[e];if(parseInt(a.charAt(0))===c[d%11])return!0}return!1},errorMessage:\"\",errorMessageKey:\"badUkUtr\"}),a.formUtils.addValidator({name:\"uknin\",validatorFunction:function(a){return!!/^(?!BG)(?!GB)(?!NK)(?!KN)(?!TN)(?!NT)(?!ZZ)(?:[A-CEGHJ-PR-TW-Z][A-CEGHJ-NPR-TW-Z])(?:\\s*\\d\\s*){6}([A-D]|\\s)$/i.test(a)},errorMessage:\"\",errorMessageKey:\"badUkNin\"})}(a)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/ca.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={errorTitle:\"El formulari no s'ha pogut enviar!\",requiredField:\"Aquest camp és obligatori\",requiredFields:\"No ha contestat tots els camps requerits\",badTime:\"L'hora proporcionada no és vàlida\",badEmail:\"La direcció d'e-mail no és vàlida\",badTelephone:\"El número de telèfon proporcionat no és vàlid\",badSecurityAnswer:\"La resposta a la seva pregunta de seguretat és incorrecte\",badDate:\"La data proporcionada no és vàlida\",lengthBadStart:\"La seva resposta s'ha d'incloure entre \",lengthBadEnd:\" caràcters\",lengthTooLongStart:\"La seva resposta ha de ser menor a \",lengthTooShortStart:\"La seva resposta ha de ser major a \",notConfirmed:\"Els valors proporcionats no poden ser confirmats\",badDomain:\"Ha introduït un domini incorrecte\",badUrl:\"La URL proporcionada no és vàlida\",badCustomVal:\"Els valors proporcionats no són vàlids\",andSpaces:\" i espais \",badInt:\"El valor proporcionat no és un número vàlid\",badSecurityNumber:\"El número de seguretat social proporcionat és incorrecte\",badUKVatAnswer:\"El número VAT proporcionat no és vàlid pel Regne Unit\",badStrength:\"La contrasenya proporcionada no és suficientment segura\",badNumberOfSelectedOptionsStart:\"Ha de seleccionar almenys\",badNumberOfSelectedOptionsEnd:\" resposta(es)\",badAlphaNumeric:\"El valor proporcionat només ha de contenir caràcters alfanumèrics (a-z i números)\",badAlphaNumericExtra:\" i\",wrongFileSize:\"L'arxiu que està tractant de pujar és massa gran (màx. %s)\",wrongFileType:\"Només els arxius de tipus %s estan permesos\",groupCheckedRangeStart:\"Si us plau, triï entre \",groupCheckedTooFewStart:\"Si us plau, triï almenys \",groupCheckedTooManyStart:\"Si us plau, triï un màxim de \",groupCheckedEnd:\" element(s)\",badCreditCard:\"El número de targeta de crèdit proporcionat no és vàlid\",badCVV:\"CVV proporcionat no és vàlid\",wrongFileDim:\"Les dimensions de la imatge no són vàlides,\",imageTooTall:\"l'alçada de la imatge no pot ser major a\",imageTooWide:\"l'amplada de la imatge no pot ser major a\",imageTooSmall:\"la imatge és massa petita\",min:\"min.\",max:\"màx.\",imageRatioNotAccepted:\"La proporció de la imatge (alçada x amplada) no és vàlida\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/cs.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={errorTitle:\"Podání formuláře selhalo!\",requiredField:\"Toto pole je povinné\",requiredfields:\"Nebyly vyplněny všechny požadované pole\",badTime:\"Neplatný čas\",badEmail:\"Neplatná e-mailová adresa\",badTelephone:\"Neplatné telefonní číslo\",badSecurityAnswer:\"Chybná odpověď na bezpečnostní otázku\",badDate:\"Nesprávné datum\",lengthBadStart:\"Zadaná hodnota musí být v rozmezí \",lengthBadEnd:\" znaků\",lengthTooLongStart:\"Zadaná hodnota je větší než \",lengthTooShortStart:\"Zadaná hodnota je menší než \",notConfirmed:\"Zadané hodnoty nebyly potvrzené\",badDomain:\"Neplatná doména\",badUrl:\"Neplatný URL\",badCustomVal:\"Zadaná hodnota je chybná\",andSpaces:\" a mezery\",badInt:\"Neplatné číslo\",badSecurityNumber:\"Neplatné číslo zabezpečení\",badUKVatAnswer:\"Neplatné číslo DIČ \",badStrength:\"Vaše heslo není dostatečně silné\",badNumberOfSelectedOptionsStart:\"Musíte vybrat nejméně \",badNumberOfSelectedOptionsEnd:\" odpověď\",badAlphaNumeric:\"Zadaná hodnota může obsahovat pouze alfanumerické znaky \",badAlphaNumericExtra:\" a \",wrongFileSize:\"Soubor je příliš velký (max %s)\",wrongFileType:\"Pouze soubory typu %s\",groupCheckedRangeStart:\"Prosím, vyberte \",groupCheckedTooFewStart:\"Vyberte prosím nejméně \",groupCheckedTooManyStart:\"Vyberte prosím maximálně \",groupCheckedEnd:\" složka(y)\",badCreditCard:\"Číslo kreditní karty je neplatné\",badCVV:\"Číslo CVV je neplatné\",wrongFileDim:\"Nesprávné rozměry obrázku,\",imageTooTall:\"obraz nemůže být vyšší než\",imageTooWide:\"obraz nemůže být širší než\",imageTooSmall:\"obraz je příliš malý\",min:\"min\",max:\"max\",imageRatioNotAccepted:\"Poměr obrázku je nesprávný\",badBrazilTelephoneAnswer:\"Neplatné telefonní číslo\",badBrazilCEPAnswer:\"Neplatné CEP\",badBrazilCPFAnswer:\"Neplatné CPF\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/da.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={andSpaces:\" og mellemrum \",badAlphaNumeric:\"Det indtastede kan kun indeholde alfanumeriske karakter \",badAlphaNumericExtra:\" og \",badCVV:\"Det angivne CVV nummer er ugyldigt\",badCreditCard:\"Det angivne kortnummer er ugyldigt\",badCustomVal:\"Den indtastede værdi er ugyldig\",badDate:\"Den angivne dato er ugyldig\",badDomain:\"Det angivne domæne er ugyldigt\",badEmail:\"Den angivne email adresse er ugyldig\",badInt:\"Det angivne tal er ugyldigt\",badNumberOfSelectedOptionsEnd:\" svar\",badNumberOfSelectedOptionsStart:\"Du skal vælge mindst \",badSecurityAnswer:\"Du har ikke angivet et korrekt svar til sikkerhedsspørgsmålet\",badSecurityNumber:\"Dit CPR nummer er ikke korrekt\",badStrength:\"Det angivne password er ikke stærkt nok\",badTelephone:\"Det angivne telefonnummer er ugyldigt\",badTime:\"Det angivne tidspunkt er ugyldigt\",badUrl:\"Den angivne URL er ugyldig\",badreCaptcha:\"Verificer venligst at du ikke er en bot\",errorTitle:\"Formular forespørgslen fejlede!\",groupCheckedEnd:\" ting\",groupCheckedRangeStart:\"Vælg venligst mellem \",groupCheckedTooFewStart:\"Vælg mindst \",groupCheckedTooManyStart:\"Vælg højst \",imageRatioNotAccepted:\"Billedets dimensioner er ikke acceptable\",imageTooSmall:\"Billedet er for lille\",imageTooTall:\"Billedet må ikke være højere end\",imageTooWide:\"Billedet må ikke være bredere end\",lengthBadEnd:\" tegn\",lengthBadStart:\"Feltets værdi skal være mellem \",lengthTooLongStart:\"Feltets værdi må ikke være længere end \",lengthTooShortStart:\"Feltets værdi må ikke være kortere end \",max:\"max\",min:\"min\",notConfirmed:\"Feltværdierne kunne ikke bekræftes\",requiredField:\"Dette felt er påkrævet\",requiredFields:\"Du har ikke udfyldt alle påkrævede felter\",wrongFileDim:\"Forkerte billede dimensioner,\",wrongFileSize:\"Filen du forsøger at uploade er for stor (max %s)\",wrongFileType:\"Udelukkende filer at følgedne type er tilladt %s\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/de.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={errorTitle:\"Ihre Anfrage konnte nicht gesendet werden!\",requiredField:\"Dies ist ein Pflichtfeld\",requiredFields:\"Sie haben nicht alle Fragen beantwortet\",badTime:\"Sie haben nicht die korrekte Zeit eingegeben\",badEmail:\"Sie haben keine gültige E-Mail-Adresse eingegeben\",badTelephone:\"Sie haben keine richtige Telefonnummer eingetragen\",badSecurityAnswer:\"Sie haben die falsche Antwort auf die Sicherheitsfrage eingegeben\",badDate:\"Eingabe eines falschen Datums\",lengthBadStart:\"Der eingegebene Wert muss dazwischen sein \",lengthBadEnd:\"  Zeichen\",lengthTooLongStart:\"Eingegebener Wert ist größer als \",lengthTooShortStart:\"Eingegebener Wert ist größer als \",notConfirmed:\"Die Antworten könnten nicht gegenseitig bestätigen,\",badDomain:\"Sie haben die falsche Domäne eingetragen\",badUrl:\"Sie haben nicht die richtige URL eingegeben\",badCustomVal:\"Eingabe einer falschen Antwort\",andSpaces:\" und Leerzeichen\",badInt:\"Sie haben keine Nummer eingegeben\",badSecurityNumber:\"Sie haben eine falsche Sozialversicherungsnummer eingegeben\",badUKVatAnswer:\"Sie haben keine UK-Umsatzsteuer-Identifikationsnummer eingegeben\",badStrength:\"Sie haben ein Kennwort, das nicht sicher genug ist eingegeben\",badNumberOfSelectedOptionsStart:\"Wählen Sie zu mindestens \",badNumberOfSelectedOptionsEnd:\" Antwort\",badAlphaNumeric:\"Sie können nur alphanumerische Zeichen (Buchstaben und Zahlen) eingeben\",badAlphaNumericExtra:\" und\",wrongFileSize:\"Die Datei, die Sie hochzuladen versuchen, ist zu groß (max %s)\",wrongFileType:\"Nur Dateien vom Typ %s sind zulässig\",groupCheckedRangeStart:\"Wählen Sie zwischen\",groupCheckedTooFewStart:\"Dann müssen Sie zumindest sicher,\",groupCheckedTooManyStart:\"Sie können nicht mehr als zu machen\",groupCheckedEnd:\" Auswahl\",badCreditCard:\"Sie haben eine ungültige Kreditkartennummer eingegeben\",badCVV:\"Sie haben eine falsche CVV eingegeben\",wrongFileDim:\"Illegale Bildgröße,\",imageTooTall:\"Bild kann nicht größer sein als\",imageTooWide:\"Bild kann nicht breiter sein als\",imageTooSmall:\"Bild ist zu klein\",min:\"min\",max:\"max\",imageRatioNotAccepted:\"Bildverhältnis wird nicht akzeptiert\",badBrazilTelephoneAnswer:\"Die eingegebene Telefonnummer ist nicht korrekt\",badBrazilCEPAnswer:\"Der CEP ist ungültig\",badBrazilCPFAnswer:\"Der CEP ist ungültig\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/es.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={errorTitle:\"El formulario no se ha podido enviar!\",requiredField:\"Este campo es obligatorio\",requiredFields:\"No ha contestado todos los campos requeridos\",badTime:\"La hora proporcionada no es válida\",badEmail:\"La dirección de e-mail no es válida\",badTelephone:\"El número de teléfono proporcionado no es válido\",badSecurityAnswer:\"La respuesta a su pregunta de seguridad es incorrecta\",badDate:\"La fecha proporcionada no es válida\",lengthBadStart:\"Su respuesta debe incluir entre \",lengthBadEnd:\" caracteres\",lengthTooLongStart:\"Su respuesta debe de ser menor a \",lengthTooShortStart:\"Su respuesta debe de ser mayor a \",notConfirmed:\"Los valores proporcionados no pudieron ser confirmados\",badDomain:\"Ha introducido un dominio incorrecto\",badUrl:\"La URL proporcionada no es válida\",badCustomVal:\"Los valores proporcionados no son válidos\",andSpaces:\" y espacios \",badInt:\"El valor proporcionado no es un número válido\",badSecurityNumber:\"El número de seguridad social proporcionado es incorrecto\",badUKVatAnswer:\"El número VAT proporcionado no es válido para el Reino Unido\",badStrength:\"La contraseña proporcionada no es lo suficientemente segura\",badNumberOfSelectedOptionsStart:\"Debe seleccionar al menos\",badNumberOfSelectedOptionsEnd:\" respuesta(s)\",badAlphaNumeric:\"El valor proporcionado solo debe contener caracteres alfanuméricos (a-z y números)\",badAlphaNumericExtra:\" y\",wrongFileSize:\"El archivo que está tratando de subir es demasiado grande (máx. %s)\",wrongFileType:\"Sólo los archivos del tipo %s están permitido\",groupCheckedRangeStart:\"Por favor, elija entre \",groupCheckedTooFewStart:\"Por favor, elija al menos \",groupCheckedTooManyStart:\"Por favor, elija un máximo de \",groupCheckedEnd:\" ítem(s)\",badCreditCard:\"El número de tarjeta de crédito proporcionado no es válido\",badCVV:\"CVV proporcionado no es válido\",wrongFileDim:\"Las dimensiones de la imagen no son validas,\",imageTooTall:\"el alto de la imagen no puede ser mayor a\",imageTooWide:\"el ancho de la imagen no puede ser mayor a\",imageTooSmall:\"la imagen es demasiado pequeña\",min:\"min.\",max:\"máx.\",imageRatioNotAccepted:\"La proporción de imagen (alto x ancho) no es válida\",passwordComplexityStart:\"La contraseña debe contener al menos \",passwordComplexitySeparator:\", \",passwordComplexityUppercaseInfo:\" mayúscula(s)\",passwordComplexityLowercaseInfo:\" minúscula(s)\",passwordComplexitySpecialCharsInfo:\" caracter(es) especial(es)\",passwordComplexityNumericCharsInfo:\" número(s)\",passwordComplexityEnd:\".\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/fa.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={errorTitle:\"ثبت فرم با مشکل مواجه شد!\",requiredField:\"شما همه فیلدهای ضروری را تکمیل نکرده اید\",requiredFields:\"شما فیلد ضروری را تکمیل نکرده اید\",badTime:\"زمان درستی را وارد نکرده اید\",badEmail:\"آدرس ایمیل را به درستی وارد نکرده اید\",badTelephone:\"شماره تلفن وارد شده معتبر نیست\",badSecurityAnswer:\"شما به سوال امنیتی درست پاسخ نداده اید\",badDate:\"تاریخ درستی را وارد نکرده اید\",lengthBadStart:\"مقدار وارد شده باید \",lengthBadEnd:\" حرف باشد.\",lengthTooLongStart:\"مقدار ورودی بیشتر از \",lengthTooShortStart:\"مقدار ورودی کمتر از \",notConfirmed:\"ورودی ها یکسان نیستند\",badDomain:\"آدرس دامنه به درستی وارد نشده است\",badUrl:\"آدرس اینترنتی به درستی وارد نشده است\",badCustomVal:\"مقدار ورودی نادرست است\",andSpaces:\" و فاصله خالی \",badInt:\"مقدار ورودی باید عدد باشد\",badSecurityNumber:\"شماره امنیت اجتماعی شما معتبر نیست\",badUKVatAnswer:\"شماره مالیاتی شما درست نیست\",badStrength:\"کلمه عبور به قدر کافی مستحکم نیست\",badNumberOfSelectedOptionsStart:\"شما باید حداقل  \",badNumberOfSelectedOptionsEnd:\" پاسخ را انتخاب کنید\",badAlphaNumeric:\"مقدار ورودی می تواند حروف و شماره باشد \",badAlphaNumericExtra:\" و \",wrongFileSize:\"حجم فایل انتخابی زیاد است. (حداکثر %s)\",wrongFileType:\"فقط فایل های با فرمت %s مجاز هستند\",groupCheckedRangeStart:\"لطفا بین \",groupCheckedTooFewStart:\"لطفا حداقل \",groupCheckedTooManyStart:\"لطفا حداکثر \",groupCheckedEnd:\" گزینه انتخاب کنید\",badCreditCard:\"شماره کارت اعتباری معتبر نیست\",badCVV:\"کد شناسایی سی وی وی معتبر نیست\",wrongFileDim:\"ابعاد تصویر صحیح نیست,\",imageTooTall:\"حداکثر طول تصویر\",imageTooWide:\"حداکثر عرض تصویر\",imageTooSmall:\"تصویر خیلی کوچک است\",min:\"حداقل\",max:\"حداکثر\",imageRatioNotAccepted:\"نسبت ابعاد تصویر مناسب نیست\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/fr.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={errorTitle:\"Le formulaire n'a pas pu être envoyé!\",requiredField:\"Ce champ est obligatoire\",requiredFields:\"Vous n'avez pas rempli tous les champs\",badTime:\"Vous n'avez pas saisi l'heure correctement\",badEmail:\"Vous n'avez pas saisi une adresse e-mail valide\",badTelephone:\"Vous n'avez pas saisi un numéro de téléphone valide\",badSecurityAnswer:\"Vous avez saisi une mauvaise réponse à la question de sécurité\",badDate:\"Vous n'avez pas saisi une date correcte\",lengthBadStart:\"Votre saisie doit comporter entre \",lengthBadEnd:\" caractères\",lengthTooLongStart:\"Vous avez saisi une réponse qui est plus longue que \",lengthTooShortStart:\"Votre saisie est plus courte que \",notConfirmed:\"Les saisies ne sont pas identiques\",badDomain:\"Vous avez saisi un domaine incorrect\",badUrl:\"Vous avez saisi une URL incorrecte\",badCustomVal:\"Re-saisissez une réponse correcte\",andSpaces:\" et des espaces \",badInt:\"Vous n'avez pas saisi un numéro\",badSecurityNumber:\"Vous avez saisi un mauvais numéro de sécurité sociale\",badUKVatAnswer:\"Vous n'avez pas saisi un numéro de TVA au Royaume-Uni\",badStrength:\"Vous avez saisi un mot de passe pas assez sécurisé\",badNumberOfSelectedOptionsStart:\"Vous devez sélectionner au moins \",badNumberOfSelectedOptionsEnd:\" réponse(s)\",badAlphaNumeric:\"Vous ne pouvez répondre qu'avec des caractères alphanumériques et des chiffres \",badAlphaNumericExtra:\" et \",wrongFileSize:\"Le fichier que vous essayez de télécharger est trop grand (max %s)\",wrongFileType:\"Seuls les fichiers du type %s sont autorisés\",groupCheckedRangeStart:\"Choisissez entre \",groupCheckedTooFewStart:\"Vous devez faire au moins \",groupCheckedTooManyStart:\"Vous ne pouvez pas faire plus de \",groupCheckedEnd:\" sélection(s)\",badCreditCard:\"Vous avez saisi un numéro de carte de crédit invalide\",badCVV:\"Vous avez saisi un CVV incorrect\",wrongFileDim:\"Mauvaise taille de l'image, \",imageTooTall:\"l'image ne peut pas être plus élevée que\",imageTooWide:\"l'image ne peut pas être plus large que\",imageTooSmall:\"l'image est trop petite\",min:\"moins\",max:\"max\",imageRatioNotAccepted:\"Ratio de l'image non accepté\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/it.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={errorTitle:\"Impossibile inviare il modulo!\",requiredField:\"Campo obbligatorio\",requiredFields:\"Non sono stati compilati tutti i campi richiesti\",badTime:\"L'ora scelta non &egrave; valida\",badEmail:\"Questo indirizzo email non &egrave; valido\",badTelephone:\"Il numero di telefono imputato non &egrave; valido\",badSecurityAnswer:\"La risposta alla domanda di sicurezza &egrave; errata\",badDate:\"La data scelta non &egrave; valida\",lengthBadStart:\"La sua risposta non può essere più lunga di \",lengthBadEnd:\" caratteri\",lengthTooLongStart:\"La lunghezza della risposta deve essere minore di \",lengthTooShortStart:\"La lunghezza della risposta deve essere maggiore di \",notConfirmed:\"Los valores proporcionados no pudieron ser confirmados\",badDomain:\"Il dominio inserito non &egrave; corretto.\",badUrl:\"L' URL inserito non &egrave; valido\",badCustomVal:\"I valori inseriti non sono validi\",andSpaces:\" e spazi \",badInt:\"Il numero inserito non &egrave; valido\",badSecurityNumber:\"Il numero di sicurezza inserito non &egrave; valido\",badUKVatAnswer:\"La Partita IVA (VAT) inserita non &egrave; valida nel Regno Unito\",badStrength:\"La password proposta non &egrave; sufficientemente sicura\",badNumberOfSelectedOptionsStart:\"Deve selezionare almeno\",badNumberOfSelectedOptionsEnd:\" risposta/e\",badAlphaNumeric:\"Il valore proposto deve contenere caratteri alfanumerici (a-z e 1234...)\",badAlphaNumericExtra:\"\",wrongFileSize:\"Il file che si sta cercando di caricare è troppo grande (massimo %s)\",wrongFileType:\"Solo i file di tipo %s possono essere inviati\",groupCheckedRangeStart:\"Si prega di scegliere tra \",groupCheckedTooFewStart:\"Si prega di selezionare un minimo di \",groupCheckedTooManyStart:\"Si prega di selezionare un massimo di \",groupCheckedEnd:\" opzione/i\",badCreditCard:\"Il numero di carta di credito non risulta valido\",badCVV:\"CVV non valido\",wrongFileDim:\"La dimensione dell'immagine non &egrave; valida,\",imageTooTall:\"il lato alto dell'immagine non può essere maggiore di\",imageTooWide:\"il lato lungo dell'immagine non può essere maggiore di\",imageTooSmall:\"L'immagine è troppo piccola\",min:\"min.\",max:\"máx.\",imageRatioNotAccepted:\"La proporzione dell' immagine (altezza x larghezza) non &egrave; valida\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/nl.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={andSpaces:\" en spaties \",badAlphaNumeric:\"De ingevoerde waarde mag alleen alfabetische karakters bevatten\",badAlphaNumericExtra:\" en \",badCVV:\"Het CVV nummer was onjuist\",badCreditCard:\"Het creditcardnummer is onjuist\",badCustomVal:\"De ingevoerde waarde is onjuist\",badDate:\"U heeft niet de juiste datum aangegeven\",badDomain:\"Incorrect domein\",badEmail:\"U heeft een onjuist e-mailadres ingevoerd \",badInt:\"De ingevoerde waarde was een onjuist getal\",badNumberOfSelectedOptionsEnd:\" antwoorden\",badNumberOfSelectedOptionsStart:\"U moet tenminste \",badSecurityAnswer:\"U heeft de beveilingsvraag onjuist beantwoord\",badSecurityNumber:\"Uw burgerservicenummer was incorrect\",badStrength:\"Het wachtwoord is niet veilig genoeg\",badTelephone:\"U heeft een onjuist telefoonnummer ingevoerd\",badTime:\"U heeft een incorrecte tijd aangegeven\",badUrl:\"De ingevoerde waarde is geen correcte URL\",badreCaptcha:\"Bevestig a.u.b. dat u geen robot bent\",errorTitle:\"Indienen van formulier mislukt!\",groupCheckedEnd:\" item(s)\",groupCheckedRangeStart:\"Kies a.u.b. tussen \",groupCheckedTooFewStart:\"Kies a.u.b. ten minste \",groupCheckedTooManyStart:\"Kies a.u.b. maximaal \",imageRatioNotAccepted:\"De afbeeldingsverhouding wordt niet geaccepteerd\",imageTooSmall:\"de afbeelding was te klein\",imageTooTall:\"de afbeelding kan niet langer zijn dan\",imageTooWide:\"de afbeelding kan niet wijder zijn dan\",lengthBadEnd:\" karakters\",lengthBadStart:\"De ingevoerde waarde moet liggen tussen \",lengthTooLongStart:\"De ingevoerde waarde is langer dan \",lengthTooShortStart:\"De ingevoerde waarde is korter dan \",max:\"max\",min:\"min\",notConfirmed:\"Invoerwaarden konden niet worden bevestigd\",requiredField:\"Dit is een verplicht veld\",requiredFields:\"U heeft niet alle verplichte velden ingevuld\",wrongFileDim:\"Incorrecte afbeeldingsafmetingen,\",wrongFileSize:\"Het bestand dat u probeert te uploaden is te groot (max %s)\",wrongFileType:\"Alleen type %s bestanden zijn toegestaan\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/no.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={andSpaces:\" og mellomrom \",badAlphaNumeric:\"Inntastningsverdien kan kun inneholde alfanumeriske tegn \",badAlphaNumericExtra:\" og \",badCVV:\"CVV-nummeret var ikke korrekt\",badCreditCard:\"Kredittkortnummeret er ikke korrekt\",badCustomVal:\"Inntastingsverdien er ikke korrekt\",badDate:\"Du har ikke oppgitt en korrekt dato\",badDomain:\"Ukorrekt domeneverdi\",badEmail:\"Du har ikke oppgitt en korrekt e-postadresse\",badInt:\"Inntastingsverdien er ikke et korrekt tall\",badNumberOfSelectedOptionsEnd:\" svar\",badNumberOfSelectedOptionsStart:\"Du må velge minst \",badSecurityAnswer:\"Du har ikke oppgitt et korrekt svar på sikkerhetsspørsmålet\",badSecurityNumber:\"Ditt personnummer var ukorrekt\",badStrength:\"Passordet er ikke sterkt nok\",badTelephone:\"Du har ikke oppgitt et korrekt telefonnummer\",badTime:\"Du har ikke oppgitt en korrekt tid\",badUrl:\"Inntastingsverdien er ikke en korrekt URL\",badreCaptcha:\"Vennligst bekreft at du ikke er en robot\",errorTitle:\"Innsending av skjemaet feilet!\",groupCheckedEnd:\" ting\",groupCheckedRangeStart:\"Vennligst velg mellom \",groupCheckedTooFewStart:\"Vennligst velg minst \",groupCheckedTooManyStart:\"Vennligst velg maksimum \",imageRatioNotAccepted:\"Bildestørrelse ikke akseptert\",imageTooSmall:\"bildet er for lite\",imageTooTall:\"bildet kan ikke være høyere enn\",imageTooWide:\"bildet kan ikke være bredere enn\",lengthBadEnd:\"tegn\",lengthBadStart:\"Inntastingsverdien må være mellom \",lengthTooLongStart:\"Inntastingsverdien er lenger enn \",lengthTooShortStart:\"Inntastingsverdien er kortere enn \",max:\"maks\",min:\"min\",notConfirmed:\"Inntastingsverdier kunne ikke bekreftes\",requiredField:\"Dette er et obligatorisk felt\",requiredFields:\"Du har ikke besvart alle obligatoriske felt\",wrongFileDim:\"Ukorrekte bildedimensjoner,\",wrongFileSize:\"Bildet du prøver å laste opp er for stort (max %s)\",wrongFileType:\"Kun filer av type %s er tillatt\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/pl.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={errorTitle:\"Złożenie formularza nie powiodło się!\",requiredField:\"To pole jest wymagane\",requiredfields:\"Nie wszystkie wymagane pola zostały wypełnione\",badTime:\"Wprowadzono niepoprawny czas\",badEmail:\"Wprowadzono niepoprawny adres e-mail\",badTelephone:\"Wprowadzono niepoprawny numeru telefonu\",badSecurityAnswer:\"Nieprawidłowa odpowiedź na pytanie bezpieczeństwa\",badDate:\"Niepoprawna data\",lengthBadStart:\"Wprowadzona wartość musi być pomiędzy \",lengthBadEnd:\" znaków\",lengthTooLongStart:\"Wprowadzona wartość jest większa niż \",lengthTooShortStart:\"Wprowadzona wartość jest mniejsza niż \",notConfirmed:\"Wprowadzone wartości nie zostały potwierdzone\",badDomain:\"Nieprawidłowa wartość domeny\",badUrl:\"Wprowadzono nieprawidłowy adres URL\",badCustomVal:\"Wprowadzona wartość jest niepoprawna\",andSpaces:\" i odstępy\",badInt:\"Wprowadzono nieprawidłowy numer\",badSecurityNumber:\"Wprowadzono niepoprawny numer ubezpieczenia społecznego\",badUKVatAnswer:\"Wprowadzono niepoprawny brytyjski numer VAT\",badUKNin:\"Wprowadzono niepoprawny brytyjski numer NIP\",badUKUtr:\"Wprowadzono niepoprawny brytyjski numer podatnika\",badStrength:\"Twoje hasło nie jest wystarczająco mocne\",badNumberOfSelectedOptionsStart:\"Musisz wybrać przynajmniej \",badNumberOfSelectedOptionsEnd:\" odpowiedzi\",badAlphaNumeric:\"Wprowadzona wartość może zawierać tylko znaki alfanumeryczne \",badAlphaNumericExtra:\" i \",wrongFileSize:\"Wysyłany plik jest zbyt duży (max %s)\",wrongFileType:\"Dozwolone są tylko pliki typu %s\",groupCheckedRangeStart:\"Proszę wybrać pomiędzy \",groupCheckedTooFewStart:\"Proszę wybrać przynajmniej \",groupCheckedTooManyStart:\"Proszę wybrać maksymalnie \",groupCheckedEnd:\" element(ów)\",badCreditCard:\"Podany numer karty kredytowej jest nieprawidłowy\",badCVV:\"Podany numer CVV jest nieprawidłowy\",wrongFileDim:\"Nieprawidłowe wymiary obrazu,\",imageTooTall:\"obraz nie może być wyższa niż\",imageTooWide:\"obraz nie może być szerszy niż\",imageTooSmall:\"obraz jest zbyt mały\",min:\"min\",max:\"max\",imageRatioNotAccepted:\"Proporcje obrazu są niepoprawne\",badBrazilTelephoneAnswer:\"Wprowadzono niepoprawny numer telefonu\",badBrazilCEPAnswer:\"Wprowadzono niepoprawny CEP\",badBrazilCPFAnswer:\"Wprowadzono niepoprawny CPF\",badPlPesel:\"Wprowadzono niepoprawny numer PESEL\",badPlNip:\"Wprowadzono niepoprawny numer NIP\",badPlRegon:\"Wprowadzono niepoprawny numer REGON\",badreCaptcha:\"Potwierdź że nie jesteś botem!\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/pt.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={errorTitle:\"O formulário não pode ser enviado!\",requiredField:\"Campo de preenchimento obrigatório\",requiredFields:\"Você ainda não preencheu todos os campos obrigatórios\",badTime:\"A hora digitada não é válida\",badEmail:\"O e-mail digitado não é válido\",badTelephone:\"O telefone digitado não é válido\",badSecurityAnswer:\"A pergunta de segurança não foi respondida corretamente\",badDate:\"A data digitada não é válida\",lengthBadStart:\"Sua resposta deve incluir entre \",lengthBadEnd:\" caracteres\",lengthTooLongStart:\"Sua resposta tem mais que \",lengthTooShortStart:\"Sua resposta tem menos que\",notConfirmed:\"As informações digitadas não puderam ser confirmadas\",badDomain:\"O domínio digitado não é válido\",badUrl:\"A URL digitada não é válida\",badCustomVal:\"Os dados digitados não são válidos\",andSpaces:\" e espaços\",badInt:\"O número digitado não é válido\",badSecurityNumber:\"O número de seguro social digitado não é válido\",badUKVatAnswer:\"O número do VAT digitado não é válido para o Reino Unido\",badStrength:\"Senha muito fraca\",badNumberOfSelectedOptionsStart:\"Selecione pelo menos\",badNumberOfSelectedOptionsEnd:\" alternativa(s)\",badAlphaNumeric:\"Use somente caracteres alfanuméricos (letras a-z e números)\",badAlphaNumericExtra:\" e\",wrongFileSize:\"O arquivo selecionado é maior que o tamanho máximo permitido (%s)\",wrongFileType:\"Somente arquivos %s são permitidos\",groupCheckedRangeStart:\"Por favor, escolha entre \",groupCheckedTooFewStart:\"Por favor, escolha pelo menos \",groupCheckedTooManyStart:\"Por favor, escolhe no máximo \",groupCheckedEnd:\" alternativa(s)\",badCreditCard:\"O número de cartão de crédito digitado não é válido\",badCVV:\"O código de segurança do cartão de crédito não é válido\",wrongFileDim:\"As dimensões da imagem não são válidas\",imageTooTall:\"a imagem não pode ser mais alta que \",imageTooWide:\"a imagem não pode ser mais larga que \",imageTooSmall:\"a imagem é muito pequena\",min:\"min\",max:\"max\",imageRatioNotAccepted:\"A proporção da imagem (largura x altura) não é válida\",badBrazilTelephoneAnswer:\"O número de telefone digitado é inválido\",badBrazilCEPAnswer:\"O CEP digitado é inválido\",badBrazilCPFAnswer:\"O CPF digitado é inválido\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/ro.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={errorTitle:\"Nu sa reusit lansarea formularului!\",requiredField:\"Acest câmp este obligatoriu\",requiredfields:\"Nu toate câmpurile obligatorii au fost completate\",badTime:\"Timpul introdus este incorect\",badEmail:\"Adresa de e-mail este incorectă\",badTelephone:\"Numărul de telefon este incorect\",badSecurityAnswer:\"Răspuns incorect la întrebarea de siguran?ă\",badDate:\"Dară incorectă\",lengthBadStart:\"Valoarea introdusă trebuie să fie interval \",lengthBadEnd:\" caractere\",lengthTooLongStart:\"Valoarea introdusă este mai mare decât \",lengthTooShortStart:\"Valoarea introdusă este mai mică decât \",notConfirmed:\"Valorile introduse nu au fost confirmate\",badDomain:\"Domeniul este incorect\",badUrl:\"Adresa URL este incorectă\",badCustomVal:\"Valoarea introdusă este incorectă\",andSpaces:\" şi spaţierea\",badInt:\"Numărul introdus este incorect\",badSecurityNumber:\"Numărul de asigurare introdus este incorect\",badUKVatAnswer:\"Numărul CIF introdus este incorect\",badStrength:\"Parola Dvs nu este suficient de sigură\",badNumberOfSelectedOptionsStart:\"Trebuie să alegi măcar \",badNumberOfSelectedOptionsEnd:\" răspunsuri\",badAlphaNumeric:\"Valoarea introdusă trebuie să con însă doar caractere alfanumerice \",badAlphaNumericExtra:\" și \",wrongFileSize:\"Fisierul trimis este prea mare (max %s)\",wrongFileType:\"Se acceptă doar fisiere tip %s\",groupCheckedRangeStart:\"Te rog alege între \",groupCheckedTooFewStart:\"Te rog alege măcar \",groupCheckedTooManyStart:\"Te rog alege maxim \",groupCheckedEnd:\" elemnt(e)\",badCreditCard:\"Numărul de card introdus este incorect\",badCVV:\"Numărul CVV introdus este incorect\",wrongFileDim:\"Dimensiunea imaginii este incorectă,\",imageTooTall:\"imaginea nu poate fi mai înaltă decât\",imageTooWide:\"imaginea nu poate fi mai lată decât\",imageTooSmall:\"imaginea este prea mică\",min:\"min\",max:\"max\",imageRatioNotAccepted:\"Proportiile imaginii sunt incorecte\",badBrazilTelephoneAnswer:\"Numărul de telefon introdus este incorect.\",badBrazilCEPAnswer:\"CEP incorect\",badBrazilCPFAnswer:\"CPF incorect\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/ru.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={errorTitle:\"Ошибка отправки формы!\",requiredField:\"Это обязательное поле\",requiredFields:\"Вы задали не все обязательные поля\",badTime:\"Вы задали некорректное время\",badEmail:\"Вы задали некорректный e-mail\",badTelephone:\"Вы задали некорректный номер телефона\",badSecurityAnswer:\"Вы задали некорректный ответ на секретный вопрос\",badDate:\"Вы задали некорректную дату\",lengthBadStart:\"Значение должно быть в диапазоне\",lengthBadEnd:\" символов\",lengthTooLongStart:\"Значение длинее, чем \",lengthTooShortStart:\"Значение меньше, чем \",notConfirmed:\"Введённые значения не могут быть подтверждены\",badDomain:\"Некорректное значение домена\",badUrl:\"Некорретный URL\",badCustomVal:\"Введённое значение неверно\",andSpaces:\" и пробелы \",badInt:\"Значение - не число\",badSecurityNumber:\"Введённый защитный номер - неправильный\",badUKVatAnswer:\"Некорректный UK VAT номер\",badStrength:\"Пароль не достаточно надёжен\",badNumberOfSelectedOptionsStart:\"Вы должны выбрать как минимум \",badNumberOfSelectedOptionsEnd:\" ответов\",badAlphaNumeric:\"Значение должно содержать только числа и буквы \",badAlphaNumericExtra:\" и \",wrongFileSize:\"Загружаемый файл слишком велик (максимальный размер %s)\",wrongFileType:\"Принимаются файлы следующих типов %s\",groupCheckedRangeStart:\"Выберите между \",groupCheckedTooFewStart:\"Выберите как минимум \",groupCheckedTooManyStart:\"Выберите максимум из \",groupCheckedEnd:\" элемент(ов)\",badCreditCard:\"Номер кредитной карты некорректен\",badCVV:\"CVV номер некорректно\",wrongFileDim:\"Неверные размеры графического файла,\",imageTooTall:\"изображение не может быть уже чем\",imageTooWide:\"изображение не может быть шире чем\",imageTooSmall:\"изображение слишком мало\",min:\"минимум\",max:\"максимум\",imageRatioNotAccepted:\"Изображение с таким соотношением сторон не принимается\",badBrazilTelephoneAnswer:\"Введённый номер телефона неправильный\",badBrazilCEPAnswer:\"CEP неправильный\",badBrazilCPFAnswer:\"CPF неправильный\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/sv.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={errorTitle:\"Formuläret kunde inte skickas!\",requiredField:\"Detta är ett obligtoriskt fält\",requiredFields:\"Du har inte besvarat alla frågor\",badTime:\"Du har inte angett en korrekt tidpunkt\",badEmail:\"Du har inte angett en korrekt e-postadress\",badTelephone:\"Du har inte angett ett korrekt telefonnummer\",badSecurityAnswer:\"Du har angett fel svar på säkerhetsfrågan\",badDate:\"Du har anget ett felaktigt datum\",lengthBadStart:\"Ditt svar måste innehålla mellan \",lengthBadEnd:\" tecken\",lengthTooLongStart:\"Du har angett ett svar som är längre än \",lengthTooShortStart:\"Du har angett ett svar som är kortare än \",notConfirmed:\"Svaren kunde inte bekräfta varandra\",badDomain:\"Du har angett en inkorrekt domän\",badUrl:\"Du har inte angett en korrekt webbadress\",badCustomVal:\"Du har anget ett inkorrekt svar\",andSpaces:\" och mellanslag \",badInt:\"Du har inte angett en siffra\",badSecurityNumber:\"Du har angett ett felaktigt personnummer\",badUKVatAnswer:\"Du har inte angett ett brittiskt moms-nummer\",badStrength:\"Du har angett ett lösenord som inte är nog säkert\",badNumberOfSelectedOptionsStart:\"Du måste åtminstone välja \",badNumberOfSelectedOptionsEnd:\" svarsalternativ\",badAlphaNumeric:\"Du kan endast svara med alfanumersika tecken (a-z och siffror)\",badAlphaNumericExtra:\" och \",wrongFileSize:\"Filen du försöker ladda upp är för stor (max %s)\",wrongFileType:\"Endast filer av typen %s är tillåtna\",groupCheckedRangeStart:\"Välj mellan \",groupCheckedTooFewStart:\"Då måste göra minst \",groupCheckedTooManyStart:\"Du får inte göra fler än \",groupCheckedEnd:\" val\",badCreditCard:\"Du har angett ett felaktigt kreditkortsnummer\",badCVV:\"Du har angett ett felaktigt CVV-nummer\",wrongFileDim:\"Otillåten bildstorlek,\",imageTooTall:\"bilden får inte vara högre än\",imageTooWide:\"bilden får inte vara bredare än\",imageTooSmall:\"bilden är för liten\",genericBadInputValue:\"The input value can be accepted\",min:\"minst\",max:\"max\",imageRatioNotAccepted:\"Bildens dimensioner (förhållandet mellan höjd och längd) kan inte accepteras\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/form-validator/lang/vi.js":"/** File generated by Grunt -- do not modify\n *  JQUERY-FORM-VALIDATOR\n *\n *  @version 2.3.60\n *  @website http://formvalidator.net/\n *  @author Victor Jonsson, http://victorjonsson.se\n *  @license MIT\n */\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(a){return b(a)}):\"object\"==typeof module&&module.exports?module.exports=b(require(\"jquery\")):b(a.jQuery)}(this,function(a){!function(a,b){\"use strict\";a(b).bind(\"validatorsLoaded\",function(){a.formUtils.LANG={errorTitle:\"Có lỗi trong qua trình gửi dữ liệu!\",requiredFields:\"Bạn chưa nhập đủ các thông tin bắt buộc\",badTime:\"Thời gian chưa chính xác\",badEmail:\"Địa chỉ email chưa chính xác\",badTelephone:\"Số điện thoại chưa chính xác\",badSecurityAnswer:\"Câu hỏi bảo mật chưa chính xác\",badDate:\"Ngày tháng chưa chính xác\",lengthBadStart:\"Yêu cầu nhập từ \",lengthBadEnd:\" ký tự\",lengthTooLongStart:\"Dữ liệu quá dài, yêu cầu ít hơn \",lengthTooShortStart:\"Dữ liệu quá ngắn, yêu cầu nhiều hơn \",notConfirmed:\"Dữ liệu không được xác nhận\",badDomain:\"Tên miền chưa chính xác\",badUrl:\"Địa chỉ website chưa chính xác\",badCustomVal:\"Dữ liệu chưa chính xác\",andSpaces:\" và các khoảng cách \",badInt:\"Yêu cầu chỉ nhập số\",badSecurityNumber:\"Mã bảo mật chưa chính xác\",badUKVatAnswer:\"UK VAT chưa chính xác\",badStrength:\"Mật khẩu chưa đủ độ phức tạp\",badNumberOfSelectedOptionsStart:\"Bạn cần tích chọn ít nhất \",badNumberOfSelectedOptionsEnd:\" lựa chọn\",badAlphaNumeric:\"Yêu cầu chỉ nhập chữ hoặc số \",badAlphaNumericExtra:\" và \",wrongFileSize:\"File của bạn quá lớn (chỉ chấp nhận file không quá %s)\",wrongFileType:\"Chỉ cho phép các định dạng file sau: %s\",groupCheckedRangeStart:\"Vui lòng tích chọn từ \",groupCheckedTooFewStart:\"Vui lòng tích chọn ít nhất \",groupCheckedTooManyStart:\"Vui lòng tích chọn nhiều nhất \",groupCheckedEnd:\" lựa chọn\",badCreditCard:\"Mã thẻ chưa chính xác\",badCVV:\"Mã bảo mật (CVV) chưa chính xác\",wrongFileDim:\"Kích thước ảnh chưa chính xác,\",imageTooTall:\"Chiều cao ảnh không được vượt quá\",imageTooWide:\"Chiều rộng ảnh không được vượt quá\",imageTooSmall:\"Kích thước ảnh quá nhỏ\",min:\"nhỏ nhất\",max:\"lớn nhất\",imageRatioNotAccepted:\"Tỷ lệ ảnh chưa chính xác\"}})}(a,window)});","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/ca.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * Catalan language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n\n  'use strict';\n\n  $(window).bind('validatorsLoaded', function() {\n\n    $.formUtils.LANG = {\n      errorTitle: 'El formulari no s\\'ha pogut enviar!',\n      requiredField: 'Aquest camp és obligatori',\n      requiredFields: 'No ha contestat tots els camps requerits',\n      badTime: 'L\\'hora proporcionada no és vàlida',\n      badEmail: 'La direcció d\\'e-mail no és vàlida',\n      badTelephone: 'El número de telèfon proporcionat no és vàlid',\n      badSecurityAnswer: 'La resposta a la seva pregunta de seguretat és incorrecte',\n      badDate: 'La data proporcionada no és vàlida',\n      lengthBadStart: 'La seva resposta s\\'ha d\\'incloure entre ',\n      lengthBadEnd: ' caràcters',\n      lengthTooLongStart: 'La seva resposta ha de ser menor a ',\n      lengthTooShortStart: 'La seva resposta ha de ser major a ',\n      notConfirmed: 'Els valors proporcionats no poden ser confirmats',\n      badDomain: 'Ha introduït un domini incorrecte',\n      badUrl: 'La URL proporcionada no és vàlida',\n      badCustomVal: 'Els valors proporcionats no són vàlids',\n      andSpaces: ' i espais ',\n      badInt: 'El valor proporcionat no és un número vàlid',\n      badSecurityNumber: 'El número de seguretat social proporcionat és incorrecte',\n      badUKVatAnswer: 'El número VAT proporcionat no és vàlid pel Regne Unit',\n      badStrength: 'La contrasenya proporcionada no és suficientment segura',\n      badNumberOfSelectedOptionsStart: 'Ha de seleccionar almenys',\n      badNumberOfSelectedOptionsEnd: ' resposta(es)',\n      badAlphaNumeric: 'El valor proporcionat només ha de contenir caràcters alfanumèrics (a-z i números)',\n      badAlphaNumericExtra: ' i',\n      wrongFileSize: 'L\\'arxiu que està tractant de pujar és massa gran (màx. %s)',\n      wrongFileType: 'Només els arxius de tipus %s estan permesos',\n      groupCheckedRangeStart: 'Si us plau, triï entre ',\n      groupCheckedTooFewStart: 'Si us plau, triï almenys ',\n      groupCheckedTooManyStart: 'Si us plau, triï un màxim de ',\n      groupCheckedEnd: ' element(s)',\n      badCreditCard: 'El número de targeta de crèdit proporcionat no és vàlid',\n      badCVV: 'CVV proporcionat no és vàlid',\n      wrongFileDim: 'Les dimensions de la imatge no són vàlides,',\n      imageTooTall: 'l\\'alçada de la imatge no pot ser major a',\n      imageTooWide: 'l\\'amplada de la imatge no pot ser major a',\n      imageTooSmall: 'la imatge és massa petita',\n      min: 'min.',\n      max: 'màx.',\n      imageRatioNotAccepted : 'La proporció de la imatge (alçada x amplada) no és vàlida'\n    };\n\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/cs.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * Czech language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n\n  'use strict';\n\n  $(window).bind('validatorsLoaded', function() {\n\n    $.formUtils.LANG = {\n      errorTitle: 'Podání formuláře selhalo!',\n      requiredField: 'Toto pole je povinné',\n      requiredfields: 'Nebyly vyplněny všechny požadované pole',\n      badTime: 'Neplatný čas',\n      badEmail: 'Neplatná e-mailová adresa',\n      badTelephone: 'Neplatné telefonní číslo',\n      badSecurityAnswer: 'Chybná odpověď na bezpečnostní otázku',\n      badDate: 'Nesprávné datum',\n      lengthBadStart: 'Zadaná hodnota musí být v rozmezí ',\n      lengthBadEnd: ' znaků',\n      lengthTooLongStart: 'Zadaná hodnota je větší než ',\n      lengthTooShortStart: 'Zadaná hodnota je menší než ',\n      notConfirmed: 'Zadané hodnoty nebyly potvrzené',\n      badDomain: 'Neplatná doména',\n      badUrl: 'Neplatný URL',\n      badCustomVal: 'Zadaná hodnota je chybná',\n      andSpaces: ' a mezery',\n      badInt: 'Neplatné číslo',\n      badSecurityNumber: 'Neplatné číslo zabezpečení',\n      badUKVatAnswer: 'Neplatné číslo DIČ ',\n      badStrength: 'Vaše heslo není dostatečně silné',\n      badNumberOfSelectedOptionsStart: 'Musíte vybrat nejméně ',\n      badNumberOfSelectedOptionsEnd: ' odpověď',\n      badAlphaNumeric: 'Zadaná hodnota může obsahovat pouze alfanumerické znaky ',\n      badAlphaNumericExtra: ' a ',\n      wrongFileSize: 'Soubor je příliš velký (max %s)',\n      wrongFileType: 'Pouze soubory typu %s',\n      groupCheckedRangeStart: 'Prosím, vyberte ',\n      groupCheckedTooFewStart: 'Vyberte prosím nejméně ',\n      groupCheckedTooManyStart: 'Vyberte prosím maximálně ',\n      groupCheckedEnd: ' složka(y)',\n      badCreditCard: 'Číslo kreditní karty je neplatné',\n      badCVV: 'Číslo CVV je neplatné',\n      wrongFileDim: 'Nesprávné rozměry obrázku,',\n      imageTooTall: 'obraz nemůže být vyšší než',\n      imageTooWide: 'obraz nemůže být širší než',\n      imageTooSmall: 'obraz je příliš malý',\n      min: 'min',\n      max: 'max',\n      imageRatioNotAccepted: 'Poměr obrázku je nesprávný',\n      badBrazilTelephoneAnswer: 'Neplatné telefonní číslo',\n      badBrazilCEPAnswer: 'Neplatné CEP',\n      badBrazilCPFAnswer: 'Neplatné CPF'\n    };\n\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/da.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * Danish language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n\n    'use strict';\n\n    $(window).bind('validatorsLoaded', function() {\n\n        $.formUtils.LANG = {\n            andSpaces: ' og mellemrum ',\n            badAlphaNumeric: 'Det indtastede kan kun indeholde alfanumeriske karakter ',\n            badAlphaNumericExtra: ' og ',\n            badCVV: 'Det angivne CVV nummer er ugyldigt',\n            badCreditCard:'Det angivne kortnummer er ugyldigt',\n            badCustomVal: 'Den indtastede værdi er ugyldig',\n            badDate: 'Den angivne dato er ugyldig',\n            badDomain: 'Det angivne domæne er ugyldigt',\n            badEmail: 'Den angivne email adresse er ugyldig',\n            badInt: 'Det angivne tal er ugyldigt',\n            badNumberOfSelectedOptionsEnd: ' svar',\n            badNumberOfSelectedOptionsStart: 'Du skal vælge mindst ',\n            badSecurityAnswer: 'Du har ikke angivet et korrekt svar til sikkerhedsspørgsmålet',\n            badSecurityNumber: 'Dit CPR nummer er ikke korrekt',\n            badStrength: 'Det angivne password er ikke stærkt nok',\n            badTelephone: 'Det angivne telefonnummer er ugyldigt',\n            badTime: 'Det angivne tidspunkt er ugyldigt',\n            badUrl: 'Den angivne URL er ugyldig',\n            badreCaptcha: 'Verificer venligst at du ikke er en bot',\n            errorTitle: 'Formular forespørgslen fejlede!',\n            groupCheckedEnd: ' ting',\n            groupCheckedRangeStart: 'Vælg venligst mellem ',\n            groupCheckedTooFewStart: 'Vælg mindst ',\n            groupCheckedTooManyStart: 'Vælg højst ',\n            imageRatioNotAccepted: 'Billedets dimensioner er ikke acceptable',\n            imageTooSmall: 'Billedet er for lille',\n            imageTooTall: 'Billedet må ikke være højere end',\n            imageTooWide: 'Billedet må ikke være bredere end',\n            lengthBadEnd: ' tegn',\n            lengthBadStart: 'Feltets værdi skal være mellem ',\n            lengthTooLongStart: 'Feltets værdi må ikke være længere end ',\n            lengthTooShortStart: 'Feltets værdi må ikke være kortere end ',\n            max: 'max',\n            min: 'min',\n            notConfirmed: 'Feltværdierne kunne ikke bekræftes',\n            requiredField: 'Dette felt er påkrævet',\n            requiredFields: 'Du har ikke udfyldt alle påkrævede felter',\n            wrongFileDim: 'Forkerte billede dimensioner,',\n            wrongFileSize: 'Filen du forsøger at uploade er for stor (max %s)',\n            wrongFileType: 'Udelukkende filer at følgedne type er tilladt %s'\n        };\n\n    });\n\n})(jQuery, window);\n\n\n\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/de.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * German language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n\n  'use strict';\n\n  $(window).bind('validatorsLoaded', function() {\n\n    $.formUtils.LANG = {\n      errorTitle: 'Ihre Anfrage konnte nicht gesendet werden!',\n      requiredField: 'Dies ist ein Pflichtfeld',\n      requiredFields: 'Sie haben nicht alle Fragen beantwortet',\n      badTime: 'Sie haben nicht die korrekte Zeit eingegeben',\n      badEmail: 'Sie haben keine gültige E-Mail-Adresse eingegeben',\n      badTelephone: 'Sie haben keine richtige Telefonnummer eingetragen',\n      badSecurityAnswer: 'Sie haben die falsche Antwort auf die Sicherheitsfrage eingegeben',\n      badDate: 'Eingabe eines falschen Datums',\n      lengthBadStart: 'Der eingegebene Wert muss dazwischen sein ',\n      lengthBadEnd: '  Zeichen',\n      lengthTooLongStart: 'Eingegebener Wert ist größer als ',\n      lengthTooShortStart: 'Eingegebener Wert ist größer als ',\n      notConfirmed: 'Die Antworten könnten nicht gegenseitig bestätigen,',\n      badDomain: 'Sie haben die falsche Domäne eingetragen',\n      badUrl: 'Sie haben nicht die richtige URL eingegeben',\n      badCustomVal: 'Eingabe einer falschen Antwort',\n      andSpaces: ' und Leerzeichen',\n      badInt: 'Sie haben keine Nummer eingegeben',\n      badSecurityNumber: 'Sie haben eine falsche Sozialversicherungsnummer eingegeben',\n      badUKVatAnswer: 'Sie haben keine UK-Umsatzsteuer-Identifikationsnummer eingegeben',\n      badStrength: 'Sie haben ein Kennwort, das nicht sicher genug ist eingegeben',\n      badNumberOfSelectedOptionsStart: 'Wählen Sie zu mindestens ',\n      badNumberOfSelectedOptionsEnd: ' Antwort',\n      badAlphaNumeric: 'Sie können nur alphanumerische Zeichen (Buchstaben und Zahlen) eingeben',\n      badAlphaNumericExtra: ' und',\n      wrongFileSize: 'Die Datei, die Sie hochzuladen versuchen, ist zu groß (max %s)',\n      wrongFileType: 'Nur Dateien vom Typ %s sind zulässig',\n      groupCheckedRangeStart: 'Wählen Sie zwischen',\n      groupCheckedTooFewStart: 'Dann müssen Sie zumindest sicher,',\n      groupCheckedTooManyStart: 'Sie können nicht mehr als zu machen',\n      groupCheckedEnd: ' Auswahl',\n      badCreditCard: 'Sie haben eine ungültige Kreditkartennummer eingegeben',\n      badCVV: 'Sie haben eine falsche CVV eingegeben',\n      wrongFileDim: 'Illegale Bildgröße,',\n      imageTooTall: 'Bild kann nicht größer sein als',\n      imageTooWide: 'Bild kann nicht breiter sein als',\n      imageTooSmall: 'Bild ist zu klein',\n      min: 'min',\n      max: 'max',\n      imageRatioNotAccepted : 'Bildverhältnis wird nicht akzeptiert',\n      badBrazilTelephoneAnswer: 'Die eingegebene Telefonnummer ist nicht korrekt',\n      badBrazilCEPAnswer: 'Der CEP ist ungültig',\n      badBrazilCPFAnswer: 'Der CEP ist ungültig'\n    };\n\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/es.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * Spanish language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n\n  'use strict';\n\n  $(window).bind('validatorsLoaded', function() {\n\n    $.formUtils.LANG = {\n      errorTitle: 'El formulario no se ha podido enviar!',\n      requiredField: 'Este campo es obligatorio',\n      requiredFields: 'No ha contestado todos los campos requeridos',\n      badTime: 'La hora proporcionada no es válida',\n      badEmail: 'La dirección de e-mail no es válida',\n      badTelephone: 'El número de teléfono proporcionado no es válido',\n      badSecurityAnswer: 'La respuesta a su pregunta de seguridad es incorrecta',\n      badDate: 'La fecha proporcionada no es válida',\n      lengthBadStart: 'Su respuesta debe incluir entre ',\n      lengthBadEnd: ' caracteres',\n      lengthTooLongStart: 'Su respuesta debe de ser menor a ',\n      lengthTooShortStart: 'Su respuesta debe de ser mayor a ',\n      notConfirmed: 'Los valores proporcionados no pudieron ser confirmados',\n      badDomain: 'Ha introducido un dominio incorrecto',\n      badUrl: 'La URL proporcionada no es válida',\n      badCustomVal: 'Los valores proporcionados no son válidos',\n      andSpaces: ' y espacios ',\n      badInt: 'El valor proporcionado no es un número válido',\n      badSecurityNumber: 'El número de seguridad social proporcionado es incorrecto',\n      badUKVatAnswer: 'El número VAT proporcionado no es válido para el Reino Unido',\n      badStrength: 'La contraseña proporcionada no es lo suficientemente segura',\n      badNumberOfSelectedOptionsStart: 'Debe seleccionar al menos',\n      badNumberOfSelectedOptionsEnd: ' respuesta(s)',\n      badAlphaNumeric: 'El valor proporcionado solo debe contener caracteres alfanuméricos (a-z y números)',\n      badAlphaNumericExtra: ' y',\n      wrongFileSize: 'El archivo que está tratando de subir es demasiado grande (máx. %s)',\n      wrongFileType: 'Sólo los archivos del tipo %s están permitido',\n      groupCheckedRangeStart: 'Por favor, elija entre ',\n      groupCheckedTooFewStart: 'Por favor, elija al menos ',\n      groupCheckedTooManyStart: 'Por favor, elija un máximo de ',\n      groupCheckedEnd: ' ítem(s)',\n      badCreditCard: 'El número de tarjeta de crédito proporcionado no es válido',\n      badCVV: 'CVV proporcionado no es válido',\n      wrongFileDim: 'Las dimensiones de la imagen no son validas,',\n      imageTooTall: 'el alto de la imagen no puede ser mayor a',\n      imageTooWide: 'el ancho de la imagen no puede ser mayor a',\n      imageTooSmall: 'la imagen es demasiado pequeña',\n      min: 'min.',\n      max: 'máx.',\n      imageRatioNotAccepted : 'La proporción de imagen (alto x ancho) no es válida',\n      passwordComplexityStart: 'La contraseña debe contener al menos ',\n      passwordComplexitySeparator: ', ',\n      passwordComplexityUppercaseInfo: ' mayúscula(s)',\n      passwordComplexityLowercaseInfo: ' minúscula(s)',\n      passwordComplexitySpecialCharsInfo: ' caracter(es) especial(es)',\n      passwordComplexityNumericCharsInfo: ' número(s)',\n      passwordComplexityEnd: '.'\n    };\n\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/fa.js":"/* jshint -W100 */\n/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * Farsi language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n * @version 0.0.1\n */\n(function($, window) {\n  'use strict';\n\n  $(window).bind('validatorsLoaded', function() {\n\n    $.formUtils.LANG = {\n        errorTitle: 'ثبت فرم با مشکل مواجه شد!',\n        requiredField: 'شما همه فیلدهای ضروری را تکمیل نکرده اید',\n        requiredFields: 'شما فیلد ضروری را تکمیل نکرده اید',\n        badTime: 'زمان درستی را وارد نکرده اید',\n        badEmail: 'آدرس ایمیل را به درستی وارد نکرده اید',\n        badTelephone: 'شماره تلفن وارد شده معتبر نیست',\n        badSecurityAnswer: 'شما به سوال امنیتی درست پاسخ نداده اید',\n        badDate: 'تاریخ درستی را وارد نکرده اید',\n        lengthBadStart: 'مقدار وارد شده باید ',\n        lengthBadEnd: ' حرف باشد.',\n        lengthTooLongStart: 'مقدار ورودی بیشتر از ',\n        lengthTooShortStart: 'مقدار ورودی کمتر از ',\n        notConfirmed: 'ورودی ها یکسان نیستند',\n        badDomain: 'آدرس دامنه به درستی وارد نشده است',\n        badUrl: 'آدرس اینترنتی به درستی وارد نشده است',\n        badCustomVal: 'مقدار ورودی نادرست است',\n        andSpaces: ' و فاصله خالی ',\n        badInt: 'مقدار ورودی باید عدد باشد',\n        badSecurityNumber: 'شماره امنیت اجتماعی شما معتبر نیست',\n        badUKVatAnswer: 'شماره مالیاتی شما درست نیست',\n        badStrength: 'کلمه عبور به قدر کافی مستحکم نیست',\n        badNumberOfSelectedOptionsStart: 'شما باید حداقل  ',\n        badNumberOfSelectedOptionsEnd: ' پاسخ را انتخاب کنید',\n        badAlphaNumeric: 'مقدار ورودی می تواند حروف و شماره باشد ',\n        badAlphaNumericExtra: ' و ',\n        wrongFileSize: 'حجم فایل انتخابی زیاد است. (حداکثر %s)',\n        wrongFileType: 'فقط فایل های با فرمت %s مجاز هستند',\n        groupCheckedRangeStart: 'لطفا بین ',\n        groupCheckedTooFewStart: 'لطفا حداقل ',\n        groupCheckedTooManyStart: 'لطفا حداکثر ',\n        groupCheckedEnd: ' گزینه انتخاب کنید',\n        badCreditCard: 'شماره کارت اعتباری معتبر نیست',\n        badCVV: 'کد شناسایی سی وی وی معتبر نیست',\n        wrongFileDim : 'ابعاد تصویر صحیح نیست,',\n        imageTooTall : 'حداکثر طول تصویر',\n        imageTooWide : 'حداکثر عرض تصویر',\n        imageTooSmall : 'تصویر خیلی کوچک است',\n        min : 'حداقل',\n        max : 'حداکثر',\n        imageRatioNotAccepted : 'نسبت ابعاد تصویر مناسب نیست'\n    };\n\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/fr.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * French language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n\n  'use strict';\n\n  $(window).bind('validatorsLoaded', function() {\n\n    $.formUtils.LANG = {\n      errorTitle: 'Le formulaire n\\'a pas pu être envoyé!',\n      requiredField: 'Ce champ est obligatoire',\n      requiredFields: 'Vous n\\'avez pas rempli tous les champs',\n      badTime: 'Vous n\\'avez pas saisi l\\'heure correctement',\n      badEmail: 'Vous n\\'avez pas saisi une adresse e-mail valide',\n      badTelephone: 'Vous n\\'avez pas saisi un numéro de téléphone valide',\n      badSecurityAnswer: 'Vous avez saisi une mauvaise réponse à la question de sécurité',\n      badDate: 'Vous n\\'avez pas saisi une date correcte',\n      lengthBadStart: 'Votre saisie doit comporter entre ',\n      lengthBadEnd: ' caractères',\n      lengthTooLongStart: 'Vous avez saisi une réponse qui est plus longue que ',\n      lengthTooShortStart: 'Votre saisie est plus courte que ',\n      notConfirmed: 'Les saisies ne sont pas identiques',\n      badDomain: 'Vous avez saisi un domaine incorrect',\n      badUrl: 'Vous avez saisi une URL incorrecte',\n      badCustomVal: 'Re-saisissez une réponse correcte',\n      andSpaces: ' et des espaces ',\n      badInt: 'Vous n\\'avez pas saisi un numéro',\n      badSecurityNumber: 'Vous avez saisi un mauvais numéro de sécurité sociale',\n      badUKVatAnswer: 'Vous n\\'avez pas saisi un numéro de TVA au Royaume-Uni',\n      badStrength: 'Vous avez saisi un mot de passe pas assez sécurisé',\n      badNumberOfSelectedOptionsStart: 'Vous devez sélectionner au moins ',\n      badNumberOfSelectedOptionsEnd: ' réponse(s)',\n      badAlphaNumeric: 'Vous ne pouvez répondre qu\\'avec des caractères alphanumériques et des chiffres ',\n      badAlphaNumericExtra: ' et ',\n      wrongFileSize: 'Le fichier que vous essayez de télécharger est trop grand (max %s)',\n      wrongFileType: 'Seuls les fichiers du type %s sont autorisés',\n      groupCheckedRangeStart: 'Choisissez entre ',\n      groupCheckedTooFewStart: 'Vous devez faire au moins ',\n      groupCheckedTooManyStart: 'Vous ne pouvez pas faire plus de ',\n      groupCheckedEnd: ' sélection(s)',\n      badCreditCard: 'Vous avez saisi un numéro de carte de crédit invalide',\n      badCVV: 'Vous avez saisi un CVV incorrect',\n      wrongFileDim: 'Mauvaise taille de l\\'image, ',\n      imageTooTall: 'l\\'image ne peut pas être plus élevée que',\n      imageTooWide: 'l\\'image ne peut pas être plus large que',\n      imageTooSmall: 'l\\'image est trop petite',\n      min: 'moins',\n      max: 'max',\n      imageRatioNotAccepted: 'Ratio de l\\'image non accepté'\n    };\n\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/it.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * Italian language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n * @version 2.2.163\n */\n(function($, window) {\n  'use strict';\n\n  $(window).bind('validatorsLoaded', function() {\n\n    $.formUtils.LANG = {\n      errorTitle: 'Impossibile inviare il modulo!',\n      requiredField: 'Campo obbligatorio',\n      requiredFields: 'Non sono stati compilati tutti i campi richiesti',\n      badTime: 'L\\'ora scelta non &egrave; valida',\n      badEmail: 'Questo indirizzo email non &egrave; valido',\n      badTelephone: 'Il numero di telefono imputato non &egrave; valido',\n      badSecurityAnswer: 'La risposta alla domanda di sicurezza &egrave; errata',\n      badDate: 'La data scelta non &egrave; valida',\n      lengthBadStart: 'La sua risposta non può essere più lunga di ',\n      lengthBadEnd: ' caratteri',\n      lengthTooLongStart: 'La lunghezza della risposta deve essere minore di ',\n      lengthTooShortStart: 'La lunghezza della risposta deve essere maggiore di ',\n      notConfirmed: 'Los valores proporcionados no pudieron ser confirmados',\n      badDomain: 'Il dominio inserito non &egrave; corretto.',\n      badUrl: 'L\\' URL inserito non &egrave; valido',\n      badCustomVal: 'I valori inseriti non sono validi',\n      andSpaces: ' e spazi ',\n      badInt: 'Il numero inserito non &egrave; valido',\n      badSecurityNumber: 'Il numero di sicurezza inserito non &egrave; valido',\n      badUKVatAnswer: 'La Partita IVA (VAT) inserita non &egrave; valida nel Regno Unito',\n      badStrength: 'La password proposta non &egrave; sufficientemente sicura',\n      badNumberOfSelectedOptionsStart: 'Deve selezionare almeno',\n      badNumberOfSelectedOptionsEnd: ' risposta/e',\n      badAlphaNumeric: 'Il valore proposto deve contenere caratteri alfanumerici (a-z e 1234...)',\n      badAlphaNumericExtra: '',\n      wrongFileSize: 'Il file che si sta cercando di caricare è troppo grande (massimo %s)',\n      wrongFileType: 'Solo i file di tipo %s possono essere inviati',\n      groupCheckedRangeStart: 'Si prega di scegliere tra ',\n      groupCheckedTooFewStart: 'Si prega di selezionare un minimo di ',\n      groupCheckedTooManyStart: 'Si prega di selezionare un massimo di ',\n      groupCheckedEnd: ' opzione/i',\n      badCreditCard: 'Il numero di carta di credito non risulta valido',\n      badCVV: 'CVV non valido',\n      wrongFileDim: 'La dimensione dell\\'immagine non &egrave; valida,',\n      imageTooTall: 'il lato alto dell\\'immagine non può essere maggiore di',\n      imageTooWide: 'il lato lungo dell\\'immagine non può essere maggiore di',\n      imageTooSmall: 'L\\'immagine è troppo piccola',\n      min: 'min.',\n      max: 'máx.',\n      imageRatioNotAccepted : 'La proporzione dell\\' immagine (altezza x larghezza) non &egrave; valida'\n    };\n\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/nl.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * Dutch language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n\n    'use strict';\n\n    $(window).bind('validatorsLoaded', function() {\n\n        $.formUtils.LANG = {\n            andSpaces: ' en spaties ',\n            badAlphaNumeric: 'De ingevoerde waarde mag alleen alfabetische karakters bevatten',\n            badAlphaNumericExtra: ' en ',\n            badCVV: 'Het CVV nummer was onjuist',\n            badCreditCard:'Het creditcardnummer is onjuist',\n            badCustomVal: 'De ingevoerde waarde is onjuist',\n            badDate: 'U heeft niet de juiste datum aangegeven',\n            badDomain: 'Incorrect domein',\n            badEmail: 'U heeft een onjuist e-mailadres ingevoerd ',\n            badInt: 'De ingevoerde waarde was een onjuist getal',\n            badNumberOfSelectedOptionsEnd: ' antwoorden',\n            badNumberOfSelectedOptionsStart: 'U moet tenminste ',\n            badSecurityAnswer: 'U heeft de beveilingsvraag onjuist beantwoord',\n            badSecurityNumber: 'Uw burgerservicenummer was incorrect',\n            badStrength: 'Het wachtwoord is niet veilig genoeg',\n            badTelephone: 'U heeft een onjuist telefoonnummer ingevoerd',\n            badTime: 'U heeft een incorrecte tijd aangegeven',\n            badUrl: 'De ingevoerde waarde is geen correcte URL',\n            badreCaptcha: 'Bevestig a.u.b. dat u geen robot bent',\n            errorTitle: 'Indienen van formulier mislukt!',\n            groupCheckedEnd: ' item(s)',\n            groupCheckedRangeStart: 'Kies a.u.b. tussen ',\n            groupCheckedTooFewStart: 'Kies a.u.b. ten minste ',\n            groupCheckedTooManyStart: 'Kies a.u.b. maximaal ',\n            imageRatioNotAccepted: 'De afbeeldingsverhouding wordt niet geaccepteerd',\n            imageTooSmall: 'de afbeelding was te klein',\n            imageTooTall: 'de afbeelding kan niet langer zijn dan',\n            imageTooWide: 'de afbeelding kan niet wijder zijn dan',\n            lengthBadEnd: ' karakters',\n            lengthBadStart: 'De ingevoerde waarde moet liggen tussen ',\n            lengthTooLongStart: 'De ingevoerde waarde is langer dan ',\n            lengthTooShortStart: 'De ingevoerde waarde is korter dan ',\n            max: 'max',\n            min: 'min',\n            notConfirmed: 'Invoerwaarden konden niet worden bevestigd',\n            requiredField: 'Dit is een verplicht veld',\n            requiredFields: 'U heeft niet alle verplichte velden ingevuld',\n            wrongFileDim: 'Incorrecte afbeeldingsafmetingen,',\n            wrongFileSize: 'Het bestand dat u probeert te uploaden is te groot (max %s)',\n            wrongFileType: 'Alleen type %s bestanden zijn toegestaan'\n        };\n\n    });\n\n})(jQuery, window);","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/no.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * Norwegian language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n\n    'use strict';\n\n    $(window).bind('validatorsLoaded', function() {\n\n        $.formUtils.LANG = {\n            andSpaces: ' og mellomrom ',\n            badAlphaNumeric: 'Inntastningsverdien kan kun inneholde alfanumeriske tegn ',\n            badAlphaNumericExtra: ' og ',\n            badCVV: 'CVV-nummeret var ikke korrekt',\n            badCreditCard:'Kredittkortnummeret er ikke korrekt',\n            badCustomVal: 'Inntastingsverdien er ikke korrekt',\n            badDate: 'Du har ikke oppgitt en korrekt dato',\n            badDomain: 'Ukorrekt domeneverdi',\n            badEmail: 'Du har ikke oppgitt en korrekt e-postadresse',\n            badInt: 'Inntastingsverdien er ikke et korrekt tall',\n            badNumberOfSelectedOptionsEnd: ' svar',\n            badNumberOfSelectedOptionsStart: 'Du må velge minst ',\n            badSecurityAnswer: 'Du har ikke oppgitt et korrekt svar på sikkerhetsspørsmålet',\n            badSecurityNumber: 'Ditt personnummer var ukorrekt',\n            badStrength: 'Passordet er ikke sterkt nok',\n            badTelephone: 'Du har ikke oppgitt et korrekt telefonnummer',\n            badTime: 'Du har ikke oppgitt en korrekt tid',\n            badUrl: 'Inntastingsverdien er ikke en korrekt URL',\n            badreCaptcha: 'Vennligst bekreft at du ikke er en robot',\n            errorTitle: 'Innsending av skjemaet feilet!',\n            groupCheckedEnd: ' ting',\n            groupCheckedRangeStart: 'Vennligst velg mellom ',\n            groupCheckedTooFewStart: 'Vennligst velg minst ',\n            groupCheckedTooManyStart: 'Vennligst velg maksimum ',\n            imageRatioNotAccepted: 'Bildestørrelse ikke akseptert',\n            imageTooSmall: 'bildet er for lite',\n            imageTooTall: 'bildet kan ikke være høyere enn',\n            imageTooWide: 'bildet kan ikke være bredere enn',\n            lengthBadEnd: 'tegn',\n            lengthBadStart: 'Inntastingsverdien må være mellom ',\n            lengthTooLongStart: 'Inntastingsverdien er lenger enn ',\n            lengthTooShortStart: 'Inntastingsverdien er kortere enn ',\n            max: 'maks',\n            min: 'min',\n            notConfirmed: 'Inntastingsverdier kunne ikke bekreftes',\n            requiredField: 'Dette er et obligatorisk felt',\n            requiredFields: 'Du har ikke besvart alle obligatoriske felt',\n            wrongFileDim: 'Ukorrekte bildedimensjoner,',\n            wrongFileSize: 'Bildet du prøver å laste opp er for stort (max %s)',\n            wrongFileType: 'Kun filer av type %s er tillatt'\n        };\n\n    });\n\n})(jQuery, window);","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/pl.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * Polish language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n\n  'use strict';\n\n  $(window).bind('validatorsLoaded', function() {\n\n    $.formUtils.LANG = {\n      errorTitle: 'Złożenie formularza nie powiodło się!',\n      requiredField: 'To pole jest wymagane',\n      requiredfields: 'Nie wszystkie wymagane pola zostały wypełnione',\n      badTime: 'Wprowadzono niepoprawny czas',\n      badEmail: 'Wprowadzono niepoprawny adres e-mail',\n      badTelephone: 'Wprowadzono niepoprawny numeru telefonu',\n      badSecurityAnswer: 'Nieprawidłowa odpowiedź na pytanie bezpieczeństwa',\n      badDate: 'Niepoprawna data',\n      lengthBadStart: 'Wprowadzona wartość musi być pomiędzy ',\n      lengthBadEnd: ' znaków',\n      lengthTooLongStart: 'Wprowadzona wartość jest większa niż ',\n      lengthTooShortStart: 'Wprowadzona wartość jest mniejsza niż ',\n      notConfirmed: 'Wprowadzone wartości nie zostały potwierdzone',\n      badDomain: 'Nieprawidłowa wartość domeny',\n      badUrl: 'Wprowadzono nieprawidłowy adres URL',\n      badCustomVal: 'Wprowadzona wartość jest niepoprawna',\n      andSpaces: ' i odstępy',\n      badInt: 'Wprowadzono nieprawidłowy numer',\n      badSecurityNumber: 'Wprowadzono niepoprawny numer ubezpieczenia społecznego',\n      badUKVatAnswer: 'Wprowadzono niepoprawny brytyjski numer VAT',\n      badUKNin: 'Wprowadzono niepoprawny brytyjski numer NIP',\n      badUKUtr: 'Wprowadzono niepoprawny brytyjski numer podatnika',\n      badStrength: 'Twoje hasło nie jest wystarczająco mocne',\n      badNumberOfSelectedOptionsStart: 'Musisz wybrać przynajmniej ',\n      badNumberOfSelectedOptionsEnd: ' odpowiedzi',\n      badAlphaNumeric: 'Wprowadzona wartość może zawierać tylko znaki alfanumeryczne ',\n      badAlphaNumericExtra: ' i ',\n      wrongFileSize: 'Wysyłany plik jest zbyt duży (max %s)',\n      wrongFileType: 'Dozwolone są tylko pliki typu %s',\n      groupCheckedRangeStart: 'Proszę wybrać pomiędzy ',\n      groupCheckedTooFewStart: 'Proszę wybrać przynajmniej ',\n      groupCheckedTooManyStart: 'Proszę wybrać maksymalnie ',\n      groupCheckedEnd: ' element(ów)',\n      badCreditCard: 'Podany numer karty kredytowej jest nieprawidłowy',\n      badCVV: 'Podany numer CVV jest nieprawidłowy',\n      wrongFileDim: 'Nieprawidłowe wymiary obrazu,',\n      imageTooTall: 'obraz nie może być wyższa niż',\n      imageTooWide: 'obraz nie może być szerszy niż',\n      imageTooSmall: 'obraz jest zbyt mały',\n      min: 'min',\n      max: 'max',\n      imageRatioNotAccepted: 'Proporcje obrazu są niepoprawne',\n      badBrazilTelephoneAnswer: 'Wprowadzono niepoprawny numer telefonu',\n      badBrazilCEPAnswer: 'Wprowadzono niepoprawny CEP',\n      badBrazilCPFAnswer: 'Wprowadzono niepoprawny CPF',\n      badPlPesel: 'Wprowadzono niepoprawny numer PESEL',\n      badPlNip: 'Wprowadzono niepoprawny numer NIP',\n      badPlRegon: 'Wprowadzono niepoprawny numer REGON',\n      badreCaptcha: 'Potwierdź że nie jesteś botem!'\n    };\n\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/pt.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * Portuguese language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n\n  'use strict';\n\n  $(window).bind('validatorsLoaded', function() {\n\n    $.formUtils.LANG = {\n      errorTitle: 'O formulário não pode ser enviado!',\n      requiredField: 'Campo de preenchimento obrigatório',\n      requiredFields: 'Você ainda não preencheu todos os campos obrigatórios',\n      badTime: 'A hora digitada não é válida',\n      badEmail: 'O e-mail digitado não é válido',\n      badTelephone: 'O telefone digitado não é válido',\n      badSecurityAnswer: 'A pergunta de segurança não foi respondida corretamente',\n      badDate: 'A data digitada não é válida',\n      lengthBadStart: 'Sua resposta deve incluir entre ',\n      lengthBadEnd: ' caracteres',\n      lengthTooLongStart: 'Sua resposta tem mais que ',\n      lengthTooShortStart: 'Sua resposta tem menos que',\n      notConfirmed: 'As informações digitadas não puderam ser confirmadas',\n      badDomain: 'O domínio digitado não é válido',\n      badUrl: 'A URL digitada não é válida',\n      badCustomVal: 'Os dados digitados não são válidos',\n      andSpaces: ' e espaços',\n      badInt: 'O número digitado não é válido',\n      badSecurityNumber: 'O número de seguro social digitado não é válido',\n      badUKVatAnswer: 'O número do VAT digitado não é válido para o Reino Unido',\n      badStrength: 'Senha muito fraca',\n      badNumberOfSelectedOptionsStart: 'Selecione pelo menos',\n      badNumberOfSelectedOptionsEnd: ' alternativa(s)',\n      badAlphaNumeric: 'Use somente caracteres alfanuméricos (letras a-z e números)',\n      badAlphaNumericExtra: ' e',\n      wrongFileSize: 'O arquivo selecionado é maior que o tamanho máximo permitido (%s)',\n      wrongFileType: 'Somente arquivos %s são permitidos',\n      groupCheckedRangeStart: 'Por favor, escolha entre ',\n      groupCheckedTooFewStart: 'Por favor, escolha pelo menos ',\n      groupCheckedTooManyStart: 'Por favor, escolhe no máximo ',\n      groupCheckedEnd: ' alternativa(s)',\n      badCreditCard: 'O número de cartão de crédito digitado não é válido',\n      badCVV: 'O código de segurança do cartão de crédito não é válido',\n      wrongFileDim: 'As dimensões da imagem não são válidas',\n      imageTooTall: 'a imagem não pode ser mais alta que ',\n      imageTooWide: 'a imagem não pode ser mais larga que ',\n      imageTooSmall: 'a imagem é muito pequena',\n      min: 'min',\n      max: 'max',\n      imageRatioNotAccepted : 'A proporção da imagem (largura x altura) não é válida',\n      badBrazilTelephoneAnswer: 'O número de telefone digitado é inválido',\n      badBrazilCEPAnswer: 'O CEP digitado é inválido',\n      badBrazilCPFAnswer: 'O CPF digitado é inválido'\n    };\n\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/ro.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * Romanian language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n\n  'use strict';\n\n  $(window).bind('validatorsLoaded', function() {\n\n    $.formUtils.LANG = {\n      errorTitle: 'Nu sa reusit lansarea formularului!',\n      requiredField: 'Acest câmp este obligatoriu',\n      requiredfields: 'Nu toate câmpurile obligatorii au fost completate',\n      badTime: 'Timpul introdus este incorect',\n      badEmail: 'Adresa de e-mail este incorectă',\n      badTelephone: 'Numărul de telefon este incorect',\n      badSecurityAnswer: 'Răspuns incorect la întrebarea de siguran?ă',\n      badDate: 'Dară incorectă',\n      lengthBadStart: 'Valoarea introdusă trebuie să fie interval ',\n      lengthBadEnd: ' caractere',\n      lengthTooLongStart: 'Valoarea introdusă este mai mare decât ',\n      lengthTooShortStart: 'Valoarea introdusă este mai mică decât ',\n      notConfirmed: 'Valorile introduse nu au fost confirmate',\n      badDomain: 'Domeniul este incorect',\n      badUrl: 'Adresa URL este incorectă',\n      badCustomVal: 'Valoarea introdusă este incorectă',\n      andSpaces: ' şi spaţierea',\n      badInt: 'Numărul introdus este incorect',\n      badSecurityNumber: 'Numărul de asigurare introdus este incorect',\n      badUKVatAnswer: 'Numărul CIF introdus este incorect',\n      badStrength: 'Parola Dvs nu este suficient de sigură',\n      badNumberOfSelectedOptionsStart: 'Trebuie să alegi măcar ',\n      badNumberOfSelectedOptionsEnd: ' răspunsuri',\n      badAlphaNumeric: 'Valoarea introdusă trebuie să con însă doar caractere alfanumerice ',\n      badAlphaNumericExtra: ' și ',\n      wrongFileSize: 'Fisierul trimis este prea mare (max %s)',\n      wrongFileType: 'Se acceptă doar fisiere tip %s',\n      groupCheckedRangeStart: 'Te rog alege între ',\n      groupCheckedTooFewStart: 'Te rog alege măcar ',\n      groupCheckedTooManyStart: 'Te rog alege maxim ',\n      groupCheckedEnd: ' elemnt(e)',\n      badCreditCard: 'Numărul de card introdus este incorect',\n      badCVV: 'Numărul CVV introdus este incorect',\n      wrongFileDim: 'Dimensiunea imaginii este incorectă,',\n      imageTooTall: 'imaginea nu poate fi mai înaltă decât',\n      imageTooWide: 'imaginea nu poate fi mai lată decât',\n      imageTooSmall: 'imaginea este prea mică',\n      min: 'min',\n      max: 'max',\n      imageRatioNotAccepted: 'Proportiile imaginii sunt incorecte',\n      badBrazilTelephoneAnswer: 'Numărul de telefon introdus este incorect.',\n      badBrazilCEPAnswer: 'CEP incorect',\n      badBrazilCPFAnswer: 'CPF incorect'\n    };\n\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/ru.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * Russian language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n  'use strict';\n\n  $(window).bind('validatorsLoaded', function() {\n\n    $.formUtils.LANG = {\n\n      errorTitle: 'Ошибка отправки формы!',\n      requiredField: 'Это обязательное поле',\n      requiredFields: 'Вы задали не все обязательные поля',\n      badTime: 'Вы задали некорректное время',\n      badEmail: 'Вы задали некорректный e-mail',\n      badTelephone: 'Вы задали некорректный номер телефона',\n      badSecurityAnswer: 'Вы задали некорректный ответ на секретный вопрос',\n      badDate: 'Вы задали некорректную дату',\n      lengthBadStart: 'Значение должно быть в диапазоне',\n      lengthBadEnd: ' символов',\n      lengthTooLongStart: 'Значение длинее, чем ',\n      lengthTooShortStart: 'Значение меньше, чем ',\n      notConfirmed: 'Введённые значения не могут быть подтверждены',\n      badDomain: 'Некорректное значение домена',\n      badUrl: 'Некорретный URL',\n      badCustomVal: 'Введённое значение неверно',\n      andSpaces: ' и пробелы ',\n      badInt: 'Значение - не число',\n      badSecurityNumber: 'Введённый защитный номер - неправильный',\n      badUKVatAnswer: 'Некорректный UK VAT номер',\n      badStrength: 'Пароль не достаточно надёжен',\n      badNumberOfSelectedOptionsStart: 'Вы должны выбрать как минимум ',\n      badNumberOfSelectedOptionsEnd: ' ответов',\n      badAlphaNumeric: 'Значение должно содержать только числа и буквы ',\n      badAlphaNumericExtra: ' и ',\n      wrongFileSize: 'Загружаемый файл слишком велик (максимальный размер %s)',\n      wrongFileType: 'Принимаются файлы следующих типов %s',\n      groupCheckedRangeStart: 'Выберите между ',\n      groupCheckedTooFewStart: 'Выберите как минимум ',\n      groupCheckedTooManyStart: 'Выберите максимум из ',\n      groupCheckedEnd: ' элемент(ов)',\n      badCreditCard: 'Номер кредитной карты некорректен',\n      badCVV: 'CVV номер некорректно',\n      wrongFileDim : 'Неверные размеры графического файла,',\n      imageTooTall : 'изображение не может быть уже чем',\n      imageTooWide : 'изображение не может быть шире чем',\n      imageTooSmall : 'изображение слишком мало',\n      min : 'минимум',\n      max : 'максимум',\n      imageRatioNotAccepted : 'Изображение с таким соотношением сторон не принимается',\n      badBrazilTelephoneAnswer: 'Введённый номер телефона неправильный',\n      badBrazilCEPAnswer: 'CEP неправильный',\n      badBrazilCPFAnswer: 'CPF неправильный'\n    };\n\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/sv.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * Swedish language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n\n  'use strict';\n\n  $(window).bind('validatorsLoaded', function() {\n\n    $.formUtils.LANG = {\n      errorTitle: 'Formuläret kunde inte skickas!',\n      requiredField: 'Detta är ett obligtoriskt fält',\n      requiredFields: 'Du har inte besvarat alla frågor',\n      badTime: 'Du har inte angett en korrekt tidpunkt',\n      badEmail: 'Du har inte angett en korrekt e-postadress',\n      badTelephone: 'Du har inte angett ett korrekt telefonnummer',\n      badSecurityAnswer: 'Du har angett fel svar på säkerhetsfrågan',\n      badDate: 'Du har anget ett felaktigt datum',\n      lengthBadStart: 'Ditt svar måste innehålla mellan ',\n      lengthBadEnd: ' tecken',\n      lengthTooLongStart: 'Du har angett ett svar som är längre än ',\n      lengthTooShortStart: 'Du har angett ett svar som är kortare än ',\n      notConfirmed: 'Svaren kunde inte bekräfta varandra',\n      badDomain: 'Du har angett en inkorrekt domän',\n      badUrl: 'Du har inte angett en korrekt webbadress',\n      badCustomVal: 'Du har anget ett inkorrekt svar',\n      andSpaces: ' och mellanslag ',\n      badInt: 'Du har inte angett en siffra',\n      badSecurityNumber: 'Du har angett ett felaktigt personnummer',\n      badUKVatAnswer: 'Du har inte angett ett brittiskt moms-nummer',\n      badStrength: 'Du har angett ett lösenord som inte är nog säkert',\n      badNumberOfSelectedOptionsStart: 'Du måste åtminstone välja ',\n      badNumberOfSelectedOptionsEnd: ' svarsalternativ',\n      badAlphaNumeric: 'Du kan endast svara med alfanumersika tecken (a-z och siffror)',\n      badAlphaNumericExtra: ' och ',\n      wrongFileSize: 'Filen du försöker ladda upp är för stor (max %s)',\n      wrongFileType: 'Endast filer av typen %s är tillåtna',\n      groupCheckedRangeStart: 'Välj mellan ',\n      groupCheckedTooFewStart: 'Då måste göra minst ',\n      groupCheckedTooManyStart: 'Du får inte göra fler än ',\n      groupCheckedEnd: ' val',\n      badCreditCard: 'Du har angett ett felaktigt kreditkortsnummer',\n      badCVV: 'Du har angett ett felaktigt CVV-nummer',\n      wrongFileDim : 'Otillåten bildstorlek,',\n      imageTooTall : 'bilden får inte vara högre än',\n      imageTooWide : 'bilden får inte vara bredare än',\n      imageTooSmall : 'bilden är för liten',\n      genericBadInputValue : 'The input value can be accepted',\n      min : 'minst',\n      max : 'max',\n      imageRatioNotAccepted : 'Bildens dimensioner (förhållandet mellan höjd och längd) kan inte accepteras'\n    };\n\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/lang/vi.js":"/**\n * jQuery Form Validator\n * ------------------------------------------\n *\n * Vietnamese language package\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n\n  'use strict';\n\n  $(window).bind('validatorsLoaded', function() {\n\n    $.formUtils.LANG = {\n      errorTitle: 'Có lỗi trong qua trình gửi dữ liệu!',\n      requiredFields: 'Bạn chưa nhập đủ các thông tin bắt buộc',\n      badTime: 'Thời gian chưa chính xác',\n      badEmail: 'Địa chỉ email chưa chính xác',\n      badTelephone: 'Số điện thoại chưa chính xác',\n      badSecurityAnswer: 'Câu hỏi bảo mật chưa chính xác',\n      badDate: 'Ngày tháng chưa chính xác',\n      lengthBadStart: 'Yêu cầu nhập từ ',\n      lengthBadEnd: ' ký tự',\n      lengthTooLongStart: 'Dữ liệu quá dài, yêu cầu ít hơn ',\n      lengthTooShortStart: 'Dữ liệu quá ngắn, yêu cầu nhiều hơn ',\n      notConfirmed: 'Dữ liệu không được xác nhận',\n      badDomain: 'Tên miền chưa chính xác',\n      badUrl: 'Địa chỉ website chưa chính xác',\n      badCustomVal: 'Dữ liệu chưa chính xác',\n      andSpaces: ' và các khoảng cách ',\n      badInt: 'Yêu cầu chỉ nhập số',\n      badSecurityNumber: 'Mã bảo mật chưa chính xác',\n      badUKVatAnswer: 'UK VAT chưa chính xác',\n      badStrength: 'Mật khẩu chưa đủ độ phức tạp',\n      badNumberOfSelectedOptionsStart: 'Bạn cần tích chọn ít nhất ',\n      badNumberOfSelectedOptionsEnd: ' lựa chọn',\n      badAlphaNumeric: 'Yêu cầu chỉ nhập chữ hoặc số ',\n      badAlphaNumericExtra: ' và ',\n      wrongFileSize: 'File của bạn quá lớn (chỉ chấp nhận file không quá %s)',\n      wrongFileType: 'Chỉ cho phép các định dạng file sau: %s',\n      groupCheckedRangeStart: 'Vui lòng tích chọn từ ',\n      groupCheckedTooFewStart: 'Vui lòng tích chọn ít nhất ',\n      groupCheckedTooManyStart: 'Vui lòng tích chọn nhiều nhất ',\n      groupCheckedEnd: ' lựa chọn',\n      badCreditCard: 'Mã thẻ chưa chính xác',\n      badCVV: 'Mã bảo mật (CVV) chưa chính xác',\n      wrongFileDim: 'Kích thước ảnh chưa chính xác,',\n      imageTooTall: 'Chiều cao ảnh không được vượt quá',\n      imageTooWide: 'Chiều rộng ảnh không được vượt quá',\n      imageTooSmall: 'Kích thước ảnh quá nhỏ',\n      min: 'nhỏ nhất',\n      max: 'lớn nhất',\n      imageRatioNotAccepted: 'Tỷ lệ ảnh chưa chính xác'\n    };\n\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/main/async.js":"/**\n */\n(function ($, undefined) {\n\n  var disableFormSubmit = function () {\n      return false;\n    },\n    HaltManager = {\n      numHalted: 0,\n      haltValidation: function($form) {\n        this.numHalted++;\n        $.formUtils.haltValidation = true;\n        $form\n          .unbind('submit', disableFormSubmit)\n          .bind('submit', disableFormSubmit)\n          .find('*[type=\"submit\"]')\n            .addClass('disabled')\n            .attr('disabled', 'disabled');\n      },\n      unHaltValidation: function($form) {\n        this.numHalted--;\n        if (this.numHalted === 0) {\n          $.formUtils.haltValidation = false;\n          $form\n            .unbind('submit', disableFormSubmit)\n            .find('*[type=\"submit\"]')\n              .removeClass('disabled')\n              .removeAttr('disabled', 'disabled');\n        }\n      }\n    };\n\n  function AsyncValidation($form, $input) {\n    this.$form = $form;\n    this.$input = $input;\n    this.reset();\n    $input.on('change paste', this.reset.bind(this));\n  }\n\n  AsyncValidation.prototype.reset = function() {\n    this.haltedFormValidation = false;\n    this.hasRun = false;\n    this.isRunning = false;\n    this.result = undefined;\n  };\n\n  AsyncValidation.prototype.run = function(eventContext, callback) {\n    if (eventContext === 'keyup') {\n      return null;\n    } else if (this.isRunning) {\n      if (!this.haltedFormValidation && eventContext === 'submit') {\n        HaltManager.haltValidation();\n        this.haltedFormValidation = true;\n      }\n      return null; // Waiting for result\n    } else if(this.hasRun) {\n      //this.$input.one('keyup change paste', this.reset.bind(this));\n      return this.result;\n    } else {\n      if (eventContext === 'submit') {\n        HaltManager.haltValidation(this.$form);\n        this.haltedFormValidation = true;\n      }\n      this.isRunning = true;\n      this.$input\n        .attr('disabled', 'disabled')\n        .addClass('async-validation');\n      this.$form.addClass('async-validation');\n\n      callback(function(result) {\n        this.done(result);\n      }.bind(this));\n\n      return null;\n    }\n  };\n\n  AsyncValidation.prototype.done = function(result) {\n    this.result = result;\n    this.hasRun = true;\n    this.isRunning = false;\n    this.$input\n      .removeAttr('disabled')\n      .removeClass('async-validation');\n    this.$form.removeClass('async-validation');\n    if (this.haltedFormValidation) {\n      HaltManager.unHaltValidation(this.$form);\n      this.$form.trigger('submit');\n    } else {\n      this.$input.trigger('validation.revalidate');\n    }\n  };\n\n  $.formUtils = $.extend($.formUtils || {}, {\n    asyncValidation: function(validatorName, $input, $form) {\n      // Return async validator attached to this input element\n      // or create a new async validator and attach it to the input\n      var asyncValidation,\n        input = $input.get(0);\n\n      if (!input.asyncValidators) {\n        input.asyncValidators = {};\n      }\n\n      if (input.asyncValidators[validatorName]) {\n        asyncValidation = input.asyncValidators[validatorName];\n      } else {\n        asyncValidation = new AsyncValidation($form, $input);\n        input.asyncValidators[validatorName] = asyncValidation;\n      }\n\n      return asyncValidation;\n    }\n  });\n\n})(jQuery);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/main/core-validators.js":"/**\n * File declaring all default validators.\n */\n(function($) {\n\n  /*\n   * Validate email\n   */\n  $.formUtils.addValidator({\n    name: 'email',\n    validatorFunction: function (email) {\n\n      var emailParts = email.toLowerCase().split('@'),\n        localPart = emailParts[0],\n        domain = emailParts[1];\n\n      if (localPart && domain) {\n\n        if( localPart.indexOf('\"') === 0 ) {\n          var len = localPart.length;\n          localPart = localPart.replace(/\\\"/g, '');\n          if( localPart.length !== (len-2) ) {\n            return false; // It was not allowed to have more than two apostrophes\n          }\n        }\n\n        return $.formUtils.validators.validate_domain.validatorFunction(emailParts[1]) &&\n          localPart.indexOf('.') !== 0 &&\n          localPart.substring(localPart.length-1, localPart.length) !== '.' &&\n          localPart.indexOf('..') === -1 &&\n          !(/[^\\w\\+\\.\\-\\#\\-\\_\\~\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\:]/.test(localPart));\n      }\n\n      return false;\n    },\n    errorMessage: '',\n    errorMessageKey: 'badEmail'\n  });\n\n  /*\n   * Validate domain name\n   */\n  $.formUtils.addValidator({\n    name: 'domain',\n    validatorFunction: function (val) {\n      return val.length > 0 &&\n        val.length <= 253 && // Including sub domains\n        !(/[^a-zA-Z0-9]/.test(val.slice(-2))) && !(/[^a-zA-Z0-9]/.test(val.substr(0, 1))) && !(/[^a-zA-Z0-9\\.\\-]/.test(val)) &&\n        val.split('..').length === 1 &&\n        val.split('.').length > 1;\n    },\n    errorMessage: '',\n    errorMessageKey: 'badDomain'\n  });\n\n  /*\n   * Validate required\n   */\n  $.formUtils.addValidator({\n    name: 'required',\n    validatorFunction: function (val, $el, config, language, $form) {\n      switch ($el.attr('type')) {\n        case 'checkbox':\n          return $el.is(':checked');\n        case 'radio':\n          return $form.find('input[name=\"' + $el.attr('name') + '\"]').filter(':checked').length > 0;\n        default:\n          return $.trim(val) !== '';\n      }\n    },\n    errorMessage: '',\n    errorMessageKey: function(config) {\n      if (config.errorMessagePosition === 'top' || typeof config.errorMessagePosition === 'function') {\n        return 'requiredFields';\n      }\n      else {\n        return 'requiredField';\n      }\n    }\n  });\n\n  /*\n   * Validate length range\n   */\n  $.formUtils.addValidator({\n    name: 'length',\n    validatorFunction: function (val, $el, conf, lang) {\n      var lengthAllowed = $el.valAttr('length'),\n        type = $el.attr('type');\n\n      if (lengthAllowed === undefined) {\n        alert('Please add attribute \"data-validation-length\" to ' + $el[0].nodeName + ' named ' + $el.attr('name'));\n        return true;\n      }\n\n      // check if length is above min, below max or within range.\n      var len = type === 'file' && $el.get(0).files !== undefined ? $el.get(0).files.length : val.length,\n        lengthCheckResults = $.formUtils.numericRangeCheck(len, lengthAllowed),\n        checkResult;\n\n      switch (lengthCheckResults[0]) {   // outside of allowed range\n        case 'out':\n          this.errorMessage = lang.lengthBadStart + lengthAllowed + lang.lengthBadEnd;\n          checkResult = false;\n          break;\n        // too short\n        case 'min':\n          this.errorMessage = lang.lengthTooShortStart + lengthCheckResults[1] + lang.lengthBadEnd;\n          checkResult = false;\n          break;\n        // too long\n        case 'max':\n          this.errorMessage = lang.lengthTooLongStart + lengthCheckResults[1] + lang.lengthBadEnd;\n          checkResult = false;\n          break;\n        // ok\n        default:\n          checkResult = true;\n      }\n\n      return checkResult;\n    },\n    errorMessage: '',\n    errorMessageKey: ''\n  });\n\n  /*\n   * Validate url\n   */\n  $.formUtils.addValidator({\n    name: 'url',\n    validatorFunction: function (url) {\n      // written by Scott Gonzalez: http://projects.scottsplayground.com/iri/\n      // - Victor Jonsson added support for arrays in the url ?arg[]=sdfsdf\n      // - General improvements made by Stéphane Moureau <https://github.com/TraderStf>\n\n      var urlFilter = /^(https?|ftp):\\/\\/((((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])(\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])(\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/(((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|\\[|\\]|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#(((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i;\n      if (urlFilter.test(url)) {\n        var domain = url.split('://')[1],\n          domainSlashPos = domain.indexOf('/');\n\n        if (domainSlashPos > -1) {\n          domain = domain.substr(0, domainSlashPos);\n        }\n\n        return $.formUtils.validators.validate_domain.validatorFunction(domain); // todo: add support for IP-addresses\n      }\n      return false;\n    },\n    errorMessage: '',\n    errorMessageKey: 'badUrl'\n  });\n\n  /*\n   * Validate number (floating or integer)\n   */\n  $.formUtils.addValidator({\n    name: 'number',\n    validatorFunction: function (val, $el, conf) {\n      if (val !== '') {\n        var allowing = $el.valAttr('allowing') || '',\n          decimalSeparator = $el.valAttr('decimal-separator') || conf.decimalSeparator,\n          allowsRange = false,\n          begin, end,\n          steps = $el.valAttr('step') || '',\n          allowsSteps = false,\n          sanitize = $el.attr('data-sanitize') || '',\n          isFormattedWithNumeral = sanitize.match(/(^|[\\s])numberFormat([\\s]|$)/i);\n\n        if (isFormattedWithNumeral) {\n          if (!window.numeral) {\n            throw new ReferenceError('The data-sanitize value numberFormat cannot be used without the numeral' +\n              ' library. Please see Data Validation in http://www.formvalidator.net for more information.');\n          }\n          //Unformat input first, then convert back to String\n          if (val.length) {\n            val = String(numeral().unformat(val));\n          }\n        }\n\n        if (allowing.indexOf('number') === -1) {\n          allowing += ',number';\n        }\n\n        if (allowing.indexOf('negative') === -1 && val.indexOf('-') === 0) {\n          return false;\n        }\n\n        if (allowing.indexOf('range') > -1) {\n          begin = parseFloat(allowing.substring(allowing.indexOf('[') + 1, allowing.indexOf(';')));\n          end = parseFloat(allowing.substring(allowing.indexOf(';') + 1, allowing.indexOf(']')));\n          allowsRange = true;\n        }\n\n        if (steps !== '') {\n          allowsSteps = true;\n        }\n\n        if (decimalSeparator === ',') {\n          if (val.indexOf('.') > -1) {\n            return false;\n          }\n          // Fix for checking range with floats using ,\n          val = val.replace(',', '.');\n        }\n        if (val.replace(/[0-9-]/g, '') === '' && (!allowsRange || (val >= begin && val <= end)) && (!allowsSteps || (val % steps === 0))) {\n          return true;\n        }\n\n        if (allowing.indexOf('float') > -1 && val.match(new RegExp('^([0-9-]+)\\\\.([0-9]+)$')) !== null && (!allowsRange || (val >= begin && val <= end)) && (!allowsSteps || (val % steps === 0))) {\n          return true;\n        }\n      }\n      return false;\n    },\n    errorMessage: '',\n    errorMessageKey: 'badInt'\n  });\n\n  /*\n   * Validate alpha numeric\n   */\n  $.formUtils.addValidator({\n    name: 'alphanumeric',\n    validatorFunction: function (val, $el, conf, language) {\n      var patternStart = '^([a-zA-Z0-9',\n        patternEnd = ']+)$',\n        additionalChars = $el.valAttr('allowing'),\n        pattern = '';\n\n      if (additionalChars) {\n        pattern = patternStart + additionalChars + patternEnd;\n        var extra = additionalChars.replace(/\\\\/g, '');\n        if (extra.indexOf(' ') > -1) {\n          extra = extra.replace(' ', '');\n          extra += language.andSpaces || $.formUtils.LANG.andSpaces;\n        }\n        this.errorMessage = language.badAlphaNumeric + language.badAlphaNumericExtra + extra;\n      } else {\n        pattern = patternStart + patternEnd;\n        this.errorMessage = language.badAlphaNumeric;\n      }\n\n      return new RegExp(pattern).test(val);\n    },\n    errorMessage: '',\n    errorMessageKey: ''\n  });\n\n  /*\n   * Validate against regexp\n   */\n  $.formUtils.addValidator({\n    name: 'custom',\n    validatorFunction: function (val, $el) {\n      var regexp = new RegExp($el.valAttr('regexp'));\n      return regexp.test(val);\n    },\n    errorMessage: '',\n    errorMessageKey: 'badCustomVal'\n  });\n\n  /*\n   * Validate date\n   */\n  $.formUtils.addValidator({\n    name: 'date',\n    validatorFunction: function (date, $el, conf) {\n      var dateFormat = $el.valAttr('format') || conf.dateFormat || 'yyyy-mm-dd',\n        addMissingLeadingZeros = $el.valAttr('require-leading-zero') === 'false';\n      return $.formUtils.parseDate(date, dateFormat, addMissingLeadingZeros) !== false;\n    },\n    errorMessage: '',\n    errorMessageKey: 'badDate'\n  });\n\n\n  /*\n   * Validate group of checkboxes, validate qty required is checked\n   * written by Steve Wasiura : http://stevewasiura.waztech.com\n   * element attrs\n   *    data-validation=\"checkbox_group\"\n   *    data-validation-qty=\"1-2\"  // min 1 max 2\n   *    data-validation-error-msg=\"chose min 1, max of 2 checkboxes\"\n   */\n  $.formUtils.addValidator({\n    name: 'checkbox_group',\n    validatorFunction: function (val, $el, conf, lang, $form) {\n      // preset return var\n      var isValid = true,\n      // get name of element. since it is a checkbox group, all checkboxes will have same name\n        elname = $el.attr('name'),\n      // get checkboxes and count the checked ones\n        $checkBoxes = $('input[type=checkbox][name^=\"' + elname + '\"]', $form),\n        checkedCount = $checkBoxes.filter(':checked').length,\n      // get el attr that specs qty required / allowed\n        qtyAllowed = $el.valAttr('qty');\n\n      if (qtyAllowed === undefined) {\n        var elementType = $el.get(0).nodeName;\n        alert('Attribute \"data-validation-qty\" is missing from ' + elementType + ' named ' + $el.attr('name'));\n      }\n\n      // call Utility function to check if count is above min, below max, within range etc.\n      var qtyCheckResults = $.formUtils.numericRangeCheck(checkedCount, qtyAllowed);\n\n      // results will be array, [0]=result str, [1]=qty int\n      switch (qtyCheckResults[0]) {\n        // outside allowed range\n        case 'out':\n          this.errorMessage = lang.groupCheckedRangeStart + qtyAllowed + lang.groupCheckedEnd;\n          isValid = false;\n          break;\n        // below min qty\n        case 'min':\n          this.errorMessage = lang.groupCheckedTooFewStart + qtyCheckResults[1] + lang.groupCheckedEnd;\n          isValid = false;\n          break;\n        // above max qty\n        case 'max':\n          this.errorMessage = lang.groupCheckedTooManyStart + qtyCheckResults[1] + lang.groupCheckedEnd;\n          isValid = false;\n          break;\n        // ok\n        default:\n          isValid = true;\n      }\n\n      if( !isValid ) {\n        var _triggerOnBlur = function() {\n          $checkBoxes.unbind('click', _triggerOnBlur);\n          $checkBoxes.filter('*[data-validation]').validateInputOnBlur(lang, conf, false, 'blur');\n        };\n        $checkBoxes.bind('click', _triggerOnBlur);\n      }\n\n      return isValid;\n    }\n    //   errorMessage : '', // set above in switch statement\n    //   errorMessageKey: '' // not used\n  });\n\n})(jQuery);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/main/deprecated.js":"/**\n * Deprecated functions and attributes\n * @todo: Remove in release of 3.0\n */\n(function ($, undefined) {\n\n  'use strict';\n\n  /**\n   * @deprecated\n   * @param language\n   * @param conf\n   */\n  $.fn.validateForm = function (language, conf) {\n    $.formUtils.warn('Use of deprecated function $.validateForm, use $.isValid instead');\n    return this.isValid(language, conf, true);\n  };\n\n  $(window)\n    .on('formValidationPluginInit', function(evt, config) {\n      convertDeprecatedLangCodeToISO6391(config);\n      addSupportForCustomErrorMessageCallback(config);\n      addSupportForElementReferenceInPositionParam(config);\n    })\n    .on('validatorsLoaded formValidationSetup', function(evt, $form) {\n      if( !$form ) {\n        $form = $('form');\n      }\n      addSupportForValidationDependingOnCheckedInput($form);\n    });\n\n\n  function addSupportForCustomErrorMessageCallback(config) {\n    if (config &&\n        config.errorMessagePosition === 'custom' &&\n        typeof config.errorMessageCustom === 'function') {\n\n      $.formUtils.warn('Use of deprecated function errorMessageCustom, use config.submitErrorMessageCallback instead');\n\n      config.submitErrorMessageCallback = function($form, errorMessages) {\n        config.errorMessageCustom(\n            $form,\n            config.language.errorTitle,\n            errorMessages,\n            config\n        );\n      };\n    }\n  }\n\n  function addSupportForElementReferenceInPositionParam(config) {\n    if (config.errorMessagePosition && typeof config.errorMessagePosition === 'object') {\n      $.formUtils.warn('Deprecated use of config parameter errorMessagePosition, use config.submitErrorMessageCallback instead');\n      var $errorMessageContainer = config.errorMessagePosition;\n      config.errorMessagePosition = 'top';\n      config.submitErrorMessageCallback = function() {\n        return $errorMessageContainer;\n      };\n    }\n  }\n\n  function addSupportForValidationDependingOnCheckedInput($form) {\n    var $inputsDependingOnCheckedInputs = $form.find('[data-validation-if-checked]');\n    if ($inputsDependingOnCheckedInputs.length) {\n      $.formUtils.warn(\n        'Detected use of attribute \"data-validation-if-checked\" which is '+\n        'deprecated. Use \"data-validation-depends-on\" provided by module \"logic\"'\n      );\n    }\n\n    $inputsDependingOnCheckedInputs\n      .on('beforeValidation', function() {\n\n        var $elem = $(this),\n          nameOfDependingInput = $elem.valAttr('if-checked');\n\n        // Set the boolean telling us that the validation depends\n        // on another input being checked\n        var $dependingInput = $('input[name=\"' + nameOfDependingInput + '\"]', $form),\n          dependingInputIsChecked = $dependingInput.is(':checked'),\n          valueOfDependingInput = ($.formUtils.getValue($dependingInput) || '').toString(),\n          requiredValueOfDependingInput = $elem.valAttr('if-checked-value');\n\n        if (!dependingInputIsChecked || !(\n              !requiredValueOfDependingInput ||\n              requiredValueOfDependingInput === valueOfDependingInput\n          )) {\n          $elem.valAttr('skipped', true);\n        }\n\n      });\n    }\n\n    function convertDeprecatedLangCodeToISO6391(config) {\n      var deprecatedLangCodes = {\n        se: 'sv',\n        cz: 'cs',\n        dk: 'da'\n      };\n\n      if (config.lang in deprecatedLangCodes) {\n        var newLangCode = deprecatedLangCodes[config.lang];\n        $.formUtils.warn(\n          'Deprecated use of lang code \"'+config.lang+'\" use \"'+newLangCode+'\" instead'\n        );\n        config.lang = newLangCode;\n      }\n    }\n\n})(jQuery);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/main/dialogs.js":"/**\n * Utility methods used for displaying error messages (attached to $.formUtils)\n */\n(function ($) {\n\n  'use strict';\n\n  var dialogs = {\n\n    resolveErrorMessage: function($elem, validator, validatorName, conf, language) {\n      var errorMsgAttr = conf.validationErrorMsgAttribute + '-' + validatorName.replace('validate_', ''),\n        validationErrorMsg = $elem.attr(errorMsgAttr);\n\n      if (!validationErrorMsg) {\n        validationErrorMsg = $elem.attr(conf.validationErrorMsgAttribute);\n        if (!validationErrorMsg) {\n          if (typeof validator.errorMessageKey !== 'function') {\n            validationErrorMsg = language[validator.errorMessageKey];\n          }\n          else {\n            validationErrorMsg = language[validator.errorMessageKey(conf)];\n          }\n          if (!validationErrorMsg) {\n            validationErrorMsg = validator.errorMessage;\n          }\n        }\n      }\n      return validationErrorMsg;\n    },\n    getParentContainer: function ($elem) {\n      if ($elem.valAttr('error-msg-container')) {\n        return $($elem.valAttr('error-msg-container'));\n      } else {\n        var $parent = $elem.parent();\n        if (!$parent.hasClass('form-group') && !$parent.closest('form').hasClass('form-horizontal')) {\n          var $formGroup = $parent.closest('.form-group');\n          if ($formGroup.length) {\n            return $formGroup.eq(0);\n          }\n        }\n        return $parent;\n      }\n    },\n    applyInputErrorStyling: function ($input, conf) {\n      $input\n        .addClass(conf.errorElementClass)\n        .removeClass(conf.successElementClass);\n\n      this.getParentContainer($input)\n        .addClass(conf.inputParentClassOnError)\n        .removeClass(conf.inputParentClassOnSuccess);\n\n      if (conf.borderColorOnError !== '') {\n        $input.css('border-color', conf.borderColorOnError);\n      }\n    },\n    applyInputSuccessStyling: function($input, conf) {\n      $input.addClass('valid');\n      this.getParentContainer($input)\n        .addClass(conf.inputParentClassOnSuccess);\n    },\n    removeInputStylingAndMessage: function($input, conf) {\n\n      // Reset input css\n      $input\n        .removeClass(conf.successElementClass)\n        .removeClass(conf.errorElementClass)\n        .css('border-color', '');\n\n      var $parentContainer = dialogs.getParentContainer($input);\n\n      // Reset parent css\n      $parentContainer\n        .removeClass(conf.inputParentClassOnError)\n        .removeClass(conf.inputParentClassOnSuccess);\n\n      // Remove possible error message\n      if (typeof conf.inlineErrorMessageCallback === 'function') {\n        var $errorMessage = conf.inlineErrorMessageCallback($input, false, conf);\n        if ($errorMessage) {\n          $errorMessage.html('');\n        }\n      } else {\n        $parentContainer\n          .find('.' + conf.errorMessageClass)\n          .remove();\n      }\n\n    },\n    removeAllMessagesAndStyling: function($form, conf) {\n\n      // Remove error messages in top of form\n      if (typeof conf.submitErrorMessageCallback === 'function') {\n        var $errorMessagesInTopOfForm = conf.submitErrorMessageCallback($form, false, conf);\n        if ($errorMessagesInTopOfForm) {\n          $errorMessagesInTopOfForm.html('');\n        }\n      } else {\n        $form.find('.' + conf.errorMessageClass + '.alert').remove();\n      }\n\n      // Remove input css/messages\n      $form.find('.' + conf.errorElementClass + ',.' + conf.successElementClass).each(function() {\n        dialogs.removeInputStylingAndMessage($(this), conf);\n      });\n    },\n    setInlineMessage: function ($input, errorMsg, conf) {\n\n      this.applyInputErrorStyling($input, conf);\n\n      var custom = document.getElementById($input.attr('name') + '_err_msg'),\n        $messageContainer = false,\n        setErrorMessage = function ($elem) {\n          $.formUtils.$win.trigger('validationErrorDisplay', [$input, $elem]);\n          $elem.html(errorMsg);\n        },\n        addErrorToMessageContainer = function() {\n          var $found = false;\n          $messageContainer.find('.' + conf.errorMessageClass).each(function () {\n            if (this.inputReferer === $input[0]) {\n              $found = $(this);\n              return false;\n            }\n          });\n          if ($found) {\n            if (!errorMsg) {\n              $found.remove();\n            } else {\n              setErrorMessage($found);\n            }\n          } else if(errorMsg !== '') {\n            $message = $('<div class=\"' + conf.errorMessageClass + ' alert\"></div>');\n            setErrorMessage($message);\n            $message[0].inputReferer = $input[0];\n            $messageContainer.prepend($message);\n          }\n        },\n        $message;\n\n      if (custom) {\n        // Todo: remove in 3.0\n        $.formUtils.warn('Using deprecated element reference ' + custom.id);\n        $messageContainer = $(custom);\n        addErrorToMessageContainer();\n      } else if (typeof conf.inlineErrorMessageCallback === 'function') {\n        $messageContainer = conf.inlineErrorMessageCallback($input, errorMsg, conf);\n        if (!$messageContainer) {\n          // Error display taken care of by inlineErrorMessageCallback\n          return;\n        }\n        addErrorToMessageContainer();\n      } else {\n        var $parent = this.getParentContainer($input);\n        $message = $parent.find('.' + conf.errorMessageClass + '.help-block');\n        if ($message.length === 0) {\n          $message = $('<span></span>').addClass('help-block').addClass(conf.errorMessageClass);\n          $message.appendTo($parent);\n        }\n        setErrorMessage($message);\n      }\n    },\n    setMessageInTopOfForm: function ($form, errorMessages, conf, lang) {\n      var view = '<div class=\"{errorMessageClass} alert alert-danger\">'+\n                    '<strong>{errorTitle}</strong>'+\n                    '<ul>{fields}</ul>'+\n                '</div>',\n          $container = false;\n\n      if (typeof conf.submitErrorMessageCallback === 'function') {\n        $container = conf.submitErrorMessageCallback($form, errorMessages, conf);\n        if (!$container) {\n          // message display taken care of by callback\n          return;\n        }\n      }\n\n      var viewParams = {\n            errorTitle: lang.errorTitle,\n            fields: '',\n            errorMessageClass: conf.errorMessageClass\n          };\n\n      $.each(errorMessages, function (i, msg) {\n        viewParams.fields += '<li>'+msg+'</li>';\n      });\n\n      $.each(viewParams, function(param, value) {\n        view = view.replace('{'+param+'}', value);\n      });\n\n      if ($container) {\n        $container.html(view);\n      } else {\n        $form.children().eq(0).before($(view));\n      }\n    }\n  };\n\n  $.formUtils = $.extend($.formUtils || {}, {\n    dialogs: dialogs\n  });\n\n})(jQuery);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/main/jquery-plugins.js":"/**\n * File declaring all methods if this plugin which is applied to $.fn.\n */\n(function($, window, undefined) {\n\n  'use strict';\n\n  var _helpers = 0;\n\n\n  /**\n   * Assigns validateInputOnBlur function to elements blur event\n   *\n   * @param {Object} language Optional, will override $.formUtils.LANG\n   * @param {Object} conf Optional, will override the default settings\n   * @return {jQuery}\n   */\n  $.fn.validateOnBlur = function (language, conf) {\n    var $form = this,\n        $elems = this.find('*[data-validation]');\n\n    $elems.each(function(){\n      var $this = $(this);\n      if ($this.is('[type=radio]')){\n        var $additionals = $form.find('[type=radio][name=\"' + $this.attr('name') + '\"]');\n        $additionals.bind('blur.validation', function(){\n          $this.validateInputOnBlur(language, conf, true, 'blur');\n        });\n        if (conf.validateCheckboxRadioOnClick) {\n          $additionals.bind('click.validation', function () {\n            $this.validateInputOnBlur(language, conf, true, 'click');\n          });\n        }\n      }\n    });\n\n    $elems.bind('blur.validation', function () {\n      $(this).validateInputOnBlur(language, conf, true, 'blur');\n    });\n\n    if (conf.validateCheckboxRadioOnClick) {\n      // bind click event to validate on click for radio & checkboxes for nice UX\n      this.find('input[type=checkbox][data-validation],input[type=radio][data-validation]')\n        .bind('click.validation', function () {\n          $(this).validateInputOnBlur(language, conf, true, 'click');\n        });\n    }\n\n    return this;\n  };\n\n  /*\n   * Assigns validateInputOnBlur function to elements custom event\n   * @param {Object} language Optional, will override $.formUtils.LANG\n   * @param {Object} settings Optional, will override the default settings\n   * * @return {jQuery}\n   */\n  $.fn.validateOnEvent = function (language, config) {\n    var $elements = this[0].nodeName === 'FORM' ? this.find('*[data-validation-event]') : this;\n    $elements\n      .each(function () {\n        var $el = $(this),\n          etype = $el.valAttr('event');\n        if (etype) {\n          $el\n            .unbind(etype + '.validation')\n            .bind(etype + '.validation', function (evt) {\n              if( (evt || {}).keyCode !== 9 ) {\n                $(this).validateInputOnBlur(language, config, true, etype);\n              }\n            });\n        }\n      });\n    return this;\n  };\n\n  /**\n   * fade in help message when input gains focus\n   * fade out when input loses focus\n   * <input data-help=\"The info that I want to display for the user when input is focused\" ... />\n   *\n   * @param {String} attrName - Optional, default is data-help\n   * @return {jQuery}\n   */\n  $.fn.showHelpOnFocus = function (attrName) {\n    if (!attrName) {\n      attrName = 'data-validation-help';\n    }\n\n    // Add help text listeners\n    this.find('textarea,input').each(function () {\n      var $elem = $(this),\n        className = 'jquery_form_help_' + (++_helpers),\n        help = $elem.attr(attrName);\n\n      // Reset\n      $elem\n        .removeClass('has-help-text')\n        .unbind('focus.help')\n        .unbind('blur.help');\n\n      if (help) {\n        $elem\n          .addClass('has-help-txt')\n          .bind('focus.help', function () {\n            var $help = $elem.parent().find('.' + className);\n            if ($help.length === 0) {\n              $help = $('<span />')\n                .addClass(className)\n                .addClass('help')\n                .addClass('help-block') // twitter bs\n                .text(help)\n                .hide();\n\n              $elem.after($help);\n            }\n            $help.fadeIn();\n          })\n          .bind('blur.help', function () {\n            $(this)\n              .parent()\n              .find('.' + className)\n              .fadeOut('slow');\n          });\n      }\n    });\n\n    return this;\n  };\n\n  /**\n   * @param {Function} cb\n   * @param {Object} [conf]\n   * @param {Object} [lang]\n   */\n  $.fn.validate = function(cb, conf, lang) {\n    var language = $.extend({}, $.formUtils.LANG, lang || {});\n    this.each(function() {\n      var $elem = $(this),\n        $closestForm = $elem.closest('form').get(0) || {},\n        formDefaultConfig = $closestForm.validationConfig || {};\n\n      $elem.one('validation', function(evt, isValid) {\n        if ( typeof cb === 'function' ) {\n          cb(isValid, this, evt);\n        }\n      });\n\n      $elem.validateInputOnBlur(\n        language,\n        $.extend({}, formDefaultConfig, conf || {}),\n        true\n      );\n    });\n  };\n\n  /**\n   * Tells whether or not validation of this input will have to postpone the form submit ()\n   * @returns {Boolean}\n   */\n  $.fn.willPostponeValidation = function() {\n    return (this.valAttr('suggestion-nr') ||\n      this.valAttr('postpone') ||\n      this.hasClass('hasDatepicker')) &&\n      !window.postponedValidation;\n  };\n\n  /**\n   * Validate single input when it loses focus\n   * shows error message in a span element\n   * that is appended to the parent element\n   *\n   * @param {Object} [language] Optional, will override $.formUtils.LANG\n   * @param {Object} [conf] Optional, will override the default settings\n   * @param {Boolean} attachKeyupEvent Optional\n   * @param {String} eventContext\n   * @return {jQuery}\n   */\n  $.fn.validateInputOnBlur = function (language, conf, attachKeyupEvent, eventContext) {\n\n    $.formUtils.eventType = eventContext;\n\n    if ( this.willPostponeValidation() ) {\n      // This validation has to be postponed\n      var _self = this,\n        postponeTime = this.valAttr('postpone') || 200;\n\n      window.postponedValidation = function () {\n        _self.validateInputOnBlur(language, conf, attachKeyupEvent, eventContext);\n        window.postponedValidation = false;\n      };\n\n      setTimeout(function () {\n        if (window.postponedValidation) {\n          window.postponedValidation();\n        }\n      }, postponeTime);\n\n      return this;\n    }\n\n    language = $.extend({}, $.formUtils.LANG, language || {});\n    $.formUtils.dialogs.removeInputStylingAndMessage(this, conf);\n\n    var $elem = this,\n      $form = $elem.closest('form'),\n      result = $.formUtils.validateInput(\n        $elem,\n        language,\n        conf,\n        $form,\n        eventContext\n      );\n\n    var reValidate = function() {\n      $elem.validateInputOnBlur(language, conf, false, 'blur.revalidated');\n    };\n\n    if (eventContext === 'blur') {\n      $elem\n        .unbind('validation.revalidate', reValidate)\n        .one('validation.revalidate', reValidate);\n    }\n\n    if (attachKeyupEvent) {\n      $elem.removeKeyUpValidation();\n    }\n\n    if (result.shouldChangeDisplay) {\n      if (result.isValid) {\n        $.formUtils.dialogs.applyInputSuccessStyling($elem, conf);\n      } else {\n        $.formUtils.dialogs.setInlineMessage($elem, result.errorMsg, conf);\n      }\n    }\n\n    if (!result.isValid && attachKeyupEvent) {\n      $elem.validateOnKeyUp(language, conf);\n    }\n\n    return this;\n  };\n\n  /**\n   * Validate element on keyup-event\n   */\n  $.fn.validateOnKeyUp = function(language, conf) {\n    this.each(function() {\n      var $input = $(this);\n      if (!$input.valAttr('has-keyup-event')) {\n        $input\n          .valAttr('has-keyup-event', 'true')\n          .bind('keyup.validation', function (evt) {\n            if( evt.keyCode !== 9 ) {\n              $input.validateInputOnBlur(language, conf, false, 'keyup');\n            }\n          });\n      }\n    });\n    return this;\n  };\n\n  /**\n   * Remove validation on keyup\n   */\n  $.fn.removeKeyUpValidation = function() {\n    this.each(function() {\n      $(this)\n        .valAttr('has-keyup-event', false)\n        .unbind('keyup.validation');\n    });\n    return this;\n  };\n\n  /**\n   * Short hand for fetching/adding/removing element attributes\n   * prefixed with 'data-validation-'\n   *\n   * @param {String} name\n   * @param {String|Boolean} [val]\n   * @return {String|undefined|jQuery}\n   * @protected\n   */\n  $.fn.valAttr = function (name, val) {\n    if (val === undefined) {\n      return this.attr('data-validation-' + name);\n    } else if (val === false || val === null) {\n      return this.removeAttr('data-validation-' + name);\n    } else {\n      name = ((name.length > 0) ? '-' + name : '');\n      return this.attr('data-validation' + name, val);\n    }\n  };\n\n  /**\n   * Function that validates all inputs in active form\n   *\n   * @param {Object} [language]\n   * @param {Object} [conf]\n   * @param {Boolean} [displayError] Defaults to true\n   */\n  $.fn.isValid = function (language, conf, displayError) {\n\n    if ($.formUtils.isLoadingModules) {\n      var $self = this;\n      setTimeout(function () {\n        $self.isValid(language, conf, displayError);\n      }, 200);\n      return null;\n    }\n\n    conf = $.extend({}, $.formUtils.defaultConfig(), conf || {});\n    language = $.extend({}, $.formUtils.LANG, language || {});\n    displayError = displayError !== false;\n\n    if ($.formUtils.errorDisplayPreventedWhenHalted) {\n      // isValid() was called programmatically with argument displayError set\n      // to false when the validation was halted by any of the validators\n      delete $.formUtils.errorDisplayPreventedWhenHalted;\n      displayError = false;\n    }\n\n    /**\n     * Adds message to error message stack if not already in the message stack\n     *\n     * @param {String} mess\n     * @para {jQuery} $elem\n     */\n    var addErrorMessage = function (mess, $elem) {\n        if ($.inArray(mess, errorMessages) < 0) {\n          errorMessages.push(mess);\n        }\n        errorInputs.push($elem);\n        $elem.valAttr('current-error', mess);\n        if (displayError) {\n          $.formUtils.dialogs.applyInputErrorStyling($elem, conf);\n        }\n      },\n\n      /** Holds inputs (of type checkox or radio) already validated, to prevent recheck of mulitple checkboxes & radios */\n      checkedInputs = [],\n\n      /** Error messages for this validation */\n      errorMessages = [],\n\n      /** Input elements which value was not valid */\n      errorInputs = [],\n\n      /** Form instance */\n      $form = this,\n\n      /**\n       * Tells whether or not to validate element with this name and of this type\n       *\n       * @param {String} name\n       * @param {String} type\n       * @return {Boolean}\n       */\n      ignoreInput = function (name, type) {\n        if (type === 'submit' || type === 'button' || type === 'reset') {\n          return true;\n        }\n        return $.inArray(name, conf.ignore || []) > -1;\n      };\n\n    // Reset style and remove error class\n    if (displayError) {\n      $.formUtils.dialogs.removeAllMessagesAndStyling($form, conf);\n    }\n\n    // Validate element values\n    $form.find('input,textarea,select').filter(':not([type=\"submit\"],[type=\"button\"])').each(function () {\n      var $elem = $(this),\n        elementType = $elem.attr('type'),\n        isCheckboxOrRadioBtn = elementType === 'radio' || elementType === 'checkbox',\n        elementName = $elem.attr('name');\n\n      if (!ignoreInput(elementName, elementType) && (!isCheckboxOrRadioBtn || $.inArray(elementName, checkedInputs) < 0)) {\n\n        if (isCheckboxOrRadioBtn) {\n          checkedInputs.push(elementName);\n        }\n\n        var result = $.formUtils.validateInput(\n          $elem,\n          language,\n          conf,\n          $form,\n          'submit'\n        );\n\n        if (!result.isValid) {\n          addErrorMessage(result.errorMsg, $elem);\n        } else if (result.isValid && result.shouldChangeDisplay) {\n          $elem.valAttr('current-error', false);\n          $.formUtils.dialogs.applyInputSuccessStyling($elem, conf);\n        }\n      }\n\n    });\n\n    // Run validation callback\n    if (typeof conf.onValidate === 'function') {\n      var errors = conf.onValidate($form);\n      if ($.isArray(errors)) {\n        $.each(errors, function (i, err) {\n          addErrorMessage(err.message, err.element);\n        });\n      }\n      else if (errors && errors.element && errors.message) {\n        addErrorMessage(errors.message, errors.element);\n      }\n    }\n\n    // Reset form validation flag\n    $.formUtils.isValidatingEntireForm = false;\n\n    // Validation failed\n    if (errorInputs.length > 0) {\n      if (displayError) {\n        if (conf.errorMessagePosition === 'top') {\n          $.formUtils.dialogs.setMessageInTopOfForm($form, errorMessages, conf, language);\n        } else {\n          $.each(errorInputs, function (i, $input) {\n            $.formUtils.dialogs.setInlineMessage($input, $input.valAttr('current-error'), conf);\n          });\n        }\n        if (conf.scrollToTopOnError) {\n          $.formUtils.$win.scrollTop($form.offset().top - 20);\n        }\n      }\n    }\n\n    if (!displayError && $.formUtils.haltValidation) {\n      $.formUtils.errorDisplayPreventedWhenHalted = true;\n    }\n\n    return errorInputs.length === 0 && !$.formUtils.haltValidation;\n  };\n\n  /**\n   * Plugin for displaying input length restriction\n   */\n  $.fn.restrictLength = function (maxLengthElement) {\n    new $.formUtils.lengthRestriction(this, maxLengthElement);\n    return this;\n  };\n\n  /**\n   * Add suggestion dropdown to inputs having data-suggestions with a comma\n   * separated string with suggestions\n   * @param {Array} [settings]\n   * @returns {jQuery}\n   */\n  $.fn.addSuggestions = function (settings) {\n    var sugs = false;\n    this.find('input').each(function () {\n      var $field = $(this);\n\n      sugs = $.split($field.attr('data-suggestions'));\n\n      if (sugs.length > 0 && !$field.hasClass('has-suggestions')) {\n        $.formUtils.suggest($field, sugs, settings);\n        $field.addClass('has-suggestions');\n      }\n    });\n    return this;\n  };\n\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/main/module-loader.js":"/**\n * Utility methods used for handling loading of modules (attached to $.formUtils)\n */\n(function($) {\n\n  'use strict';\n\n  $.formUtils = $.extend($.formUtils || {}, {\n\n    /**\n     * @var {Boolean}\n     */\n    isLoadingModules: false,\n\n    /**\n     * @var {Object}\n     */\n    loadedModules: {},\n\n    /**\n     * @example\n     *  $.formUtils.loadModules('date, security.dev');\n     *\n     * Will load the scripts date.js and security.dev.js from the\n     * directory where this script resides. If you want to load\n     * the modules from another directory you can use the\n     * path argument.\n     *\n     * The script will be cached by the browser unless the module\n     * name ends with .dev\n     *\n     * @param {String} modules - Comma separated string with module file names (no directory nor file extension)\n     * @param {String} [path] - Optional, path where the module files is located if their not in the same directory as the core modules\n     * @param {function} [callback] - Optional, whether or not to fire event 'load' when modules finished loading\n     */\n    loadModules: function (modules, path, callback) {\n\n      if ($.formUtils.isLoadingModules) {\n        setTimeout(function () {\n          $.formUtils.loadModules(modules, path, callback);\n        }, 10);\n        return;\n      }\n\n      var hasLoadedAnyModule = false,\n        loadModuleScripts = function (modules, path) {\n\n          var moduleList = $.split(modules),\n            numModules = moduleList.length,\n            moduleLoadedCallback = function () {\n              numModules--;\n              if (numModules === 0) {\n                $.formUtils.isLoadingModules = false;\n                if (callback && hasLoadedAnyModule) {\n                  if( typeof callback === 'function' ) {\n                    callback();\n                  }\n                }\n              }\n            };\n\n\n          if (numModules > 0) {\n            $.formUtils.isLoadingModules = true;\n          }\n\n          var cacheSuffix = '?_=' + ( new Date().getTime() ),\n            appendToElement = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n          $.each(moduleList, function (i, modName) {\n            modName = $.trim(modName);\n            if (modName.length === 0) {\n              moduleLoadedCallback();\n            }\n            else {\n              var scriptUrl = path + modName + (modName.slice(-3) === '.js' ? '' : '.js'),\n                script = document.createElement('SCRIPT');\n\n              if (scriptUrl in $.formUtils.loadedModules) {\n                // already loaded\n                moduleLoadedCallback();\n              }\n              else {\n\n                // Remember that this script is loaded\n                $.formUtils.loadedModules[scriptUrl] = 1;\n                hasLoadedAnyModule = true;\n\n                if (typeof define === 'function' && define.amd) {\n                  require([scriptUrl + ( scriptUrl.slice(-7) === '.dev.js' ? cacheSuffix : '' )], moduleLoadedCallback);\n                } else {\n                  // Load the script\n                  script.type = 'text/javascript';\n                  script.onload = moduleLoadedCallback;\n                  script.src = scriptUrl + ( scriptUrl.slice(-7) === '.dev.js' ? cacheSuffix : '' );\n                  script.onerror = function() {\n                    $.formUtils.warn('Unable to load form validation module '+scriptUrl);\n                  };\n                  script.onreadystatechange = function () {\n                    // IE 7 fix\n                    if (this.readyState === 'complete' || this.readyState === 'loaded') {\n                      moduleLoadedCallback();\n                      // Handle memory leak in IE\n                      this.onload = null;\n                      this.onreadystatechange = null;\n                    }\n                  };\n                  appendToElement.appendChild(script);\n                }\n              }\n            }\n          });\n        };\n\n      if (path) {\n        loadModuleScripts(modules, path);\n      } else {\n        var findScriptPathAndLoadModules = function () {\n          var foundPath = false;\n          $('script[src*=\"form-validator\"]').each(function () {\n            var isScriptFromPluginNodeModulesDirectory = this.src.split('form-validator')[1].split('node_modules').length > 1;\n            if (!isScriptFromPluginNodeModulesDirectory) {\n              foundPath = this.src.substr(0, this.src.lastIndexOf('/')) + '/';\n              if (foundPath === '/') {\n                foundPath = '';\n              }\n              return false;\n            }\n          });\n\n          if (foundPath !== false) {\n            loadModuleScripts(modules, foundPath);\n            return true;\n          }\n          return false;\n        };\n\n        if (!findScriptPathAndLoadModules()) {\n          $(findScriptPathAndLoadModules);\n        }\n      }\n    }\n\n  });\n\n})(jQuery);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/main/setup.js":"/**\n * Setup function for the plugin\n */\n(function ($) {\n\n  'use strict';\n\n\n  /**\n   * A bit smarter split function\n   * delimiter can be space, comma, dash or pipe\n   * @param {String} val\n   * @param {Function|String} [callback]\n   * @param {Boolean} [allowSpaceAsDelimiter]\n   * @returns {Array|void}\n   */\n  $.split = function (val, callback, allowSpaceAsDelimiter) {\n    // default to true\n    allowSpaceAsDelimiter = allowSpaceAsDelimiter === undefined || allowSpaceAsDelimiter === true;\n    var pattern = '[,|'+(allowSpaceAsDelimiter ? '\\\\s':'')+'-]\\\\s*',\n      regex = new RegExp(pattern, 'g');\n    if (typeof callback !== 'function') {\n      // return array\n      if (!val) {\n        return [];\n      }\n      var values = [];\n      $.each(val.split(callback ? callback : regex),\n        function (i, str) {\n          str = $.trim(str);\n          if (str.length) {\n            values.push(str);\n          }\n        }\n      );\n      return values;\n    } else if (val) {\n      // exec callback func on each\n      $.each(val.split(regex),\n        function (i, str) {\n          str = $.trim(str);\n          if (str.length) {\n            return callback(str, i);\n          }\n        }\n      );\n    }\n  };\n\n  /**\n   * Short hand function that makes the validation setup require less code\n   * @param conf\n   */\n  $.validate = function (conf) {\n\n    var defaultConf = $.extend($.formUtils.defaultConfig(), {\n      form: 'form',\n      validateOnEvent: false,\n      validateOnBlur: true,\n      validateCheckboxRadioOnClick: true,\n      showHelpOnFocus: true,\n      addSuggestions: true,\n      modules: '',\n      onModulesLoaded: null,\n      language: false,\n      onSuccess: false,\n      onError: false,\n      onElementValidate: false\n    });\n\n    conf = $.extend(defaultConf, conf || {});\n\n    $(window).trigger('formValidationPluginInit', [conf]);\n\n    if( conf.lang && conf.lang !== 'en' ) {\n      var langModule = 'lang/'+conf.lang+'.js';\n      conf.modules += conf.modules.length ? ','+langModule : langModule;\n    }\n\n    // Add validation to forms\n    $(conf.form).each(function (i, form) {\n\n      // Make a reference to the config for this form\n      form.validationConfig = conf;\n\n      // Trigger jQuery event that we're about to setup validation\n      var $form = $(form);\n      $form.trigger('formValidationSetup', [$form, conf]);\n\n      // Remove classes and event handlers that might have been\n      // added by a previous call to $.validate\n      $form.find('.has-help-txt')\n          .unbind('focus.validation')\n          .unbind('blur.validation');\n\n      $form\n        .removeClass('has-validation-callback')\n        .unbind('submit.validation')\n        .unbind('reset.validation')\n        .find('input[data-validation],textarea[data-validation]')\n          .unbind('blur.validation');\n\n      // Validate when submitted\n      $form.bind('submit.validation', function (evt) {\n\n        var $form = $(this),\n          stop = function() {\n            evt.stopImmediatePropagation();\n            return false;\n          };\n\n        if ($.formUtils.haltValidation) {\n          // pressing several times on submit button while validation is halted\n          return stop();\n        }\n\n        if ($.formUtils.isLoadingModules) {\n          setTimeout(function () {\n            $form.trigger('submit.validation');\n          }, 200);\n          return stop();\n        }\n\n        var valid = $form.isValid(conf.language, conf);\n        if ($.formUtils.haltValidation) {\n          // Validation got halted by one of the validators\n          return stop();\n        } else {\n          if (valid && typeof conf.onSuccess === 'function') {\n            var callbackResponse = conf.onSuccess($form);\n            if (callbackResponse === false) {\n              return stop();\n            }\n          } else if (!valid && typeof conf.onError === 'function') {\n            conf.onError($form);\n            return stop();\n          } else {\n            return valid ? true : stop();\n          }\n        }\n      })\n      .bind('reset.validation', function () {\n        $.formUtils.dialogs.removeAllMessagesAndStyling($form, conf);\n      })\n      .addClass('has-validation-callback');\n\n      if (conf.showHelpOnFocus) {\n        $form.showHelpOnFocus();\n      }\n      if (conf.addSuggestions) {\n        $form.addSuggestions();\n      }\n      if (conf.validateOnBlur) {\n        $form.validateOnBlur(conf.language, conf);\n        $form.bind('html5ValidationAttrsFound', function () {\n          $form.validateOnBlur(conf.language, conf);\n        });\n      }\n      if (conf.validateOnEvent) {\n        $form.validateOnEvent(conf.language, conf);\n      }\n    });\n\n    if (conf.modules !== '') {\n      $.formUtils.loadModules(conf.modules, false, function() {\n        if (typeof conf.onModulesLoaded === 'function') {\n          conf.onModulesLoaded();\n        }\n        var $form = typeof conf.form === 'string' ? $(conf.form) : conf.form;\n        $.formUtils.$win.trigger('validatorsLoaded', [$form, conf]);\n      });\n    }\n  };\n\n})(jQuery);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/main/utils.js":"/**\n * Utility methods and properties attached to $.formUtils\n */\n(function($, window) {\n\n  'use strict';\n\n  var $win = $(window);\n\n  $.formUtils = $.extend($.formUtils || {}, {\n\n    $win: $win,\n\n    /**\n     * Default config for $(...).isValid();\n     */\n    defaultConfig: function () {\n      return {\n        ignore: [], // Names of inputs not to be validated even though `validationRuleAttribute` containing the validation rules tells us to\n        errorElementClass: 'error', // Class that will be put on elements which value is invalid\n        successElementClass: 'valid', // Class that will be put on elements that has been validated with success\n        borderColorOnError: '#b94a48', // Border color of elements which value is invalid, empty string to not change border color\n        errorMessageClass: 'form-error', // class name of div containing error messages when validation fails\n        validationRuleAttribute: 'data-validation', // name of the attribute holding the validation rules\n        validationErrorMsgAttribute: 'data-validation-error-msg', // define custom err msg inline with element\n        errorMessagePosition: 'inline', // Can be either \"top\" or \"inline\"\n        errorMessageTemplate: {\n          container: '<div class=\"{errorMessageClass} alert alert-danger\">{messages}</div>',\n          messages: '<strong>{errorTitle}</strong><ul>{fields}</ul>',\n          field: '<li>{msg}</li>'\n        },\n        scrollToTopOnError: true,\n        dateFormat: 'yyyy-mm-dd',\n        addValidClassOnAll: false, // whether or not to apply class=\"valid\" even if the input wasn't validated\n        decimalSeparator: '.',\n        inputParentClassOnError: 'has-error', // twitter-bootstrap default class name\n        inputParentClassOnSuccess: 'has-success', // twitter-bootstrap default class name\n        validateHiddenInputs: false, // whether or not hidden inputs should be validated\n        inlineErrorMessageCallback: false,\n        submitErrorMessageCallback: false\n      };\n    },\n\n    /**\n     * Available validators\n     */\n    validators: {},\n\n    /**\n     * Events triggered by form validator\n     */\n    _events: {load: [], valid: [], invalid: []},\n\n    /**\n     * Setting this property to true during validation will\n     * stop further validation from taking place and form will\n     * not be sent\n     */\n    haltValidation: false,\n\n    /**\n     * Function for adding a validator\n     * @param {Object} validator\n     */\n    addValidator: function (validator) {\n      // prefix with \"validate_\" for backward compatibility reasons\n      var name = validator.name.indexOf('validate_') === 0 ? validator.name : 'validate_' + validator.name;\n      if (validator.validateOnKeyUp === undefined) {\n        validator.validateOnKeyUp = true;\n      }\n      this.validators[name] = validator;\n    },\n\n    /**\n     * Warn user via the console if available\n     */\n    warn: function(msg) {\n      if( 'console' in window ) {\n        if( typeof window.console.warn === 'function' ) {\n          window.console.warn(msg);\n        } else if( typeof window.console.log === 'function' ) {\n          window.console.log(msg);\n        }\n      } else {\n        alert(msg);\n      }\n    },\n\n    /**\n     * Same as input $.fn.val() but also supporting input of typ radio or checkbox\n     * @example\n     *\n     *  $.formUtils.getValue('.myRadioButtons', $('#some-form'));\n     *  $.formUtils.getValue($('#some-form').find('.check-boxes'));\n     *\n     * @param query\n     * @param $parent\n     * @returns {String|Boolean}\n     */\n    getValue: function(query, $parent) {\n      var $inputs = $parent ? $parent.find(query) : query;\n      if ($inputs.length > 0 ) {\n        var type = $inputs.eq(0).attr('type');\n        if (type === 'radio' || type === 'checkbox') {\n          return $inputs.filter(':checked').val() || '';\n        } else {\n          return $inputs.val() || '';\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Validate the value of given element according to the validation rules\n     * found in the attribute data-validation. Will return an object representing\n     * a validation result, having the props shouldChangeDisplay, isValid and errorMsg\n     * @param {jQuery} $elem\n     * @param {Object} language ($.formUtils.LANG)\n     * @param {Object} conf\n     * @param {jQuery} $form\n     * @param {String} [eventContext]\n     * @return {Object}\n     */\n    validateInput: function ($elem, language, conf, $form, eventContext) {\n\n      conf = conf || $.formUtils.defaultConfig();\n      language = language || $.formUtils.LANG;\n\n      var value = this.getValue($elem);\n\n      $elem\n        .valAttr('skipped', false)\n        .one('beforeValidation', function() {\n          // Skip input because its hidden or disabled\n          // Doing this in a callback makes it possible for others to prevent the default\n          // behaviour by binding to the same event and call evt.stopImmediatePropagation()\n          if ($elem.attr('disabled') || (!$elem.is(':visible') && !conf.validateHiddenInputs)) {\n            $elem.valAttr('skipped', 1);\n          }\n        })\n        .trigger('beforeValidation', [value, language, conf]);\n\n\n      var inputIsOptional = $elem.valAttr('optional') === 'true',\n          skipBecauseItsEmpty = !value && inputIsOptional,\n          validationRules = $elem.attr(conf.validationRuleAttribute),\n          isValid = true,\n          errorMsg = '',\n          result = {isValid: true, shouldChangeDisplay:true, errorMsg:''};\n\n      // For input type=\"number\", browsers attempt to parse the entered value into a number.\n      // If the input is not numeric, browsers handle the situation differently:\n      // Chrome 48 simply disallows non-numeric input; FF 44 clears out the input box on blur;\n      // Safari 5 parses the entered string to find a leading number.\n      // If the input fails browser validation, the browser sets the input value equal to an empty string.\n      // Therefore, we cannot distinguish (apart from hacks) between an empty input type=\"text\" and one with a\n      // value that can't be parsed by the browser.\n\n      if (!validationRules || skipBecauseItsEmpty || $elem.valAttr('skipped')) {\n        result.shouldChangeDisplay = conf.addValidClassOnAll;\n        return result;\n      }\n\n      // Filter out specified characters\n      var ignore = $elem.valAttr('ignore');\n      if (ignore) {\n        $.each(ignore.split(''), function(i, character) {\n          value = value.replace(new RegExp('\\\\'+character, 'g'), '');\n        });\n      }\n\n      $.split(validationRules, function (rule) {\n\n        if (rule.indexOf('validate_') !== 0) {\n          rule = 'validate_' + rule;\n        }\n\n        var validator = $.formUtils.validators[rule];\n\n        if (validator) {\n\n          // special change of element for checkbox_group rule\n          if (rule === 'validate_checkbox_group') {\n            // set element to first in group, so error msg attr doesn't need to be set on all elements in group\n            $elem = $form.find('[name=\"' + $elem.attr('name') + '\"]:eq(0)');\n          }\n\n          if (eventContext !== 'keyup' || validator.validateOnKeyUp) {\n            // A validator can prevent itself from getting triggered on keyup\n            isValid = validator.validatorFunction(value, $elem, conf, language, $form, eventContext);\n          }\n\n          if (!isValid) {\n            if (conf.validateOnBlur) {\n              $elem.validateOnKeyUp(language, conf);\n            }\n            errorMsg = $.formUtils.dialogs.resolveErrorMessage($elem, validator, rule, conf, language);\n            return false; // break iteration\n          }\n\n        } else {\n\n          // todo: Add some validator lookup function and tell immediately which module is missing\n          throw new Error('Using undefined validator \"' + rule +\n            '\". Maybe you have forgotten to load the module that \"' + rule +'\" belongs to?');\n\n        }\n\n      });\n\n\n      if (isValid === false) {\n        $elem.trigger('validation', false);\n        result.errorMsg = errorMsg;\n        result.isValid = false;\n        result.shouldChangeDisplay = true;\n      } else if (isValid === null) {\n        // A validatorFunction returning null means that it's not able to validate\n        // the input at this time. Most probably some async stuff need to gets finished\n        // first and then the validator will re-trigger the validation.\n        result.shouldChangeDisplay = false;\n      } else {\n        $elem.trigger('validation', true);\n        result.shouldChangeDisplay = true;\n      }\n\n      // Run element validation callback\n      if (typeof conf.onElementValidate === 'function' && errorMsg !== null) {\n        conf.onElementValidate(result.isValid, $elem, $form, errorMsg);\n      }\n\n      $elem.trigger('afterValidation', [result, eventContext]);\n\n      return result;\n    },\n\n    /**\n     * Is it a correct date according to given dateFormat. Will return false if not, otherwise\n     * an array 0=>year 1=>month 2=>day\n     *\n     * @param {String} val\n     * @param {String} dateFormat\n     * @param {Boolean} [addMissingLeadingZeros]\n     * @return {Array}|{Boolean}\n     */\n    parseDate: function (val, dateFormat, addMissingLeadingZeros) {\n      var divider = dateFormat.replace(/[a-zA-Z]/gi, '').substring(0, 1),\n        regexp = '^',\n        formatParts = dateFormat.split(divider || null),\n        matches, day, month, year;\n\n      $.each(formatParts, function (i, part) {\n        regexp += (i > 0 ? '\\\\' + divider : '') + '(\\\\d{' + part.length + '})';\n      });\n\n      regexp += '$';\n\n      if (addMissingLeadingZeros) {\n        var newValueParts = [];\n        $.each(val.split(divider), function(i, part) {\n          if(part.length === 1) {\n            part = '0'+part;\n          }\n          newValueParts.push(part);\n        });\n        val = newValueParts.join(divider);\n      }\n\n      matches = val.match(new RegExp(regexp));\n      if (matches === null) {\n        return false;\n      }\n\n      var findDateUnit = function (unit, formatParts, matches) {\n        for (var i = 0; i < formatParts.length; i++) {\n          if (formatParts[i].substring(0, 1) === unit) {\n            return $.formUtils.parseDateInt(matches[i + 1]);\n          }\n        }\n        return -1;\n      };\n\n      month = findDateUnit('m', formatParts, matches);\n      day = findDateUnit('d', formatParts, matches);\n      year = findDateUnit('y', formatParts, matches);\n\n      if ((month === 2 && day > 28 && (year % 4 !== 0 || year % 100 === 0 && year % 400 !== 0)) ||\n        (month === 2 && day > 29 && (year % 4 === 0 || year % 100 !== 0 && year % 400 === 0)) ||\n        month > 12 || month === 0) {\n        return false;\n      }\n      if ((this.isShortMonth(month) && day > 30) || (!this.isShortMonth(month) && day > 31) || day === 0) {\n        return false;\n      }\n\n      return [year, month, day];\n    },\n\n    /**\n     * skum fix. är talet 05 eller lägre ger parseInt rätt int annars får man 0 när man kör parseInt?\n     *\n     * @param {String} val\n     * @return {Number}\n     */\n    parseDateInt: function (val) {\n      if (val.indexOf('0') === 0) {\n        val = val.replace('0', '');\n      }\n      return parseInt(val, 10);\n    },\n\n    /**\n     * Has month only 30 days?\n     *\n     * @param {Number} m\n     * @return {Boolean}\n     */\n    isShortMonth: function (m) {\n      return (m % 2 === 0 && m < 7) || (m % 2 !== 0 && m > 7);\n    },\n\n    /**\n     * Restrict input length\n     *\n     * @param {jQuery} $inputElement Jquery Html object\n     * @param {jQuery} $maxLengthElement jQuery Html Object\n     * @return void\n     */\n    lengthRestriction: function ($inputElement, $maxLengthElement) {\n      // read maxChars from counter display initial text value\n      var maxChars = parseInt($maxLengthElement.text(), 10),\n        charsLeft = 0,\n\n      // internal function does the counting and sets display value\n        countCharacters = function () {\n          var numChars = $inputElement.val().length;\n          if (numChars > maxChars) {\n            // get current scroll bar position\n            var currScrollTopPos = $inputElement.scrollTop();\n            // trim value to max length\n            $inputElement.val($inputElement.val().substring(0, maxChars));\n            $inputElement.scrollTop(currScrollTopPos);\n          }\n          charsLeft = maxChars - numChars;\n          if (charsLeft < 0) {\n            charsLeft = 0;\n          }\n\n          // set counter text\n          $maxLengthElement.text(charsLeft);\n        };\n\n      // bind events to this element\n      // setTimeout is needed, cut or paste fires before val is available\n      $($inputElement).bind('keydown keyup keypress focus blur', countCharacters)\n        .bind('cut paste', function () {\n          setTimeout(countCharacters, 100);\n        });\n\n      // count chars on pageload, if there are prefilled input-values\n      $(document).bind('ready', countCharacters);\n    },\n\n    /**\n     * Test numeric against allowed range\n     *\n     * @param $value int\n     * @param $rangeAllowed str; (1-2, min1, max2, 10)\n     * @return array\n     */\n    numericRangeCheck: function (value, rangeAllowed) {\n      // split by dash\n      var range = $.split(rangeAllowed),\n      // min or max\n        minmax = parseInt(rangeAllowed.substr(3), 10);\n\n      if( range.length === 1 && rangeAllowed.indexOf('min') === -1 && rangeAllowed.indexOf('max') === -1 ) {\n        range = [rangeAllowed, rangeAllowed]; // only a number, checking agains an exact number of characters\n      }\n\n      // range ?\n      if (range.length === 2 && (value < parseInt(range[0], 10) || value > parseInt(range[1], 10) )) {\n        return [ 'out', range[0], range[1] ];\n      } // value is out of range\n      else if (rangeAllowed.indexOf('min') === 0 && (value < minmax )) // min\n      {\n        return ['min', minmax];\n      } // value is below min\n      else if (rangeAllowed.indexOf('max') === 0 && (value > minmax )) // max\n      {\n        return ['max', minmax];\n      } // value is above max\n      // since no other returns executed, value is in allowed range\n      return [ 'ok' ];\n    },\n\n\n    _numSuggestionElements: 0,\n    _selectedSuggestion: null,\n    _previousTypedVal: null,\n\n    /**\n     * Utility function that can be used to create plugins that gives\n     * suggestions when inputs is typed into\n     * @param {jQuery} $elem\n     * @param {Array} suggestions\n     * @param {Object} settings - Optional\n     * @return {jQuery}\n     */\n    suggest: function ($elem, suggestions, settings) {\n      var conf = {\n          css: {\n            maxHeight: '150px',\n            background: '#FFF',\n            lineHeight: '150%',\n            textDecoration: 'underline',\n            overflowX: 'hidden',\n            overflowY: 'auto',\n            border: '#CCC solid 1px',\n            borderTop: 'none',\n            cursor: 'pointer'\n          },\n          activeSuggestionCSS: {\n            background: '#E9E9E9'\n          }\n        },\n        setSuggsetionPosition = function ($suggestionContainer, $input) {\n          var offset = $input.offset();\n          $suggestionContainer.css({\n            width: $input.outerWidth(),\n            left: offset.left + 'px',\n            top: (offset.top + $input.outerHeight()) + 'px'\n          });\n        };\n\n      if (settings) {\n        $.extend(conf, settings);\n      }\n\n      conf.css.position = 'absolute';\n      conf.css['z-index'] = 9999;\n      $elem.attr('autocomplete', 'off');\n\n      if (this._numSuggestionElements === 0) {\n        // Re-position suggestion container if window size changes\n        $win.bind('resize', function () {\n          $('.jquery-form-suggestions').each(function () {\n            var $container = $(this),\n              suggestID = $container.attr('data-suggest-container');\n            setSuggsetionPosition($container, $('.suggestions-' + suggestID).eq(0));\n          });\n        });\n      }\n\n      this._numSuggestionElements++;\n\n      var onSelectSuggestion = function ($el) {\n        var suggestionId = $el.valAttr('suggestion-nr');\n        $.formUtils._selectedSuggestion = null;\n        $.formUtils._previousTypedVal = null;\n        $('.jquery-form-suggestion-' + suggestionId).fadeOut('fast');\n      };\n\n      $elem\n        .data('suggestions', suggestions)\n        .valAttr('suggestion-nr', this._numSuggestionElements)\n        .unbind('focus.suggest')\n        .bind('focus.suggest', function () {\n          $(this).trigger('keyup');\n          $.formUtils._selectedSuggestion = null;\n        })\n        .unbind('keyup.suggest')\n        .bind('keyup.suggest', function () {\n          var $input = $(this),\n            foundSuggestions = [],\n            val = $.trim($input.val()).toLocaleLowerCase();\n\n          if (val === $.formUtils._previousTypedVal) {\n            return;\n          }\n          else {\n            $.formUtils._previousTypedVal = val;\n          }\n\n          var hasTypedSuggestion = false,\n            suggestionId = $input.valAttr('suggestion-nr'),\n            $suggestionContainer = $('.jquery-form-suggestion-' + suggestionId);\n\n          $suggestionContainer.scrollTop(0);\n\n          // Find the right suggestions\n          if (val !== '') {\n            var findPartial = val.length > 2;\n            $.each($input.data('suggestions'), function (i, suggestion) {\n              var lowerCaseVal = suggestion.toLocaleLowerCase();\n              if (lowerCaseVal === val) {\n                foundSuggestions.push('<strong>' + suggestion + '</strong>');\n                hasTypedSuggestion = true;\n                return false;\n              } else if (lowerCaseVal.indexOf(val) === 0 || (findPartial && lowerCaseVal.indexOf(val) > -1)) {\n                foundSuggestions.push(suggestion.replace(new RegExp(val, 'gi'), '<strong>$&</strong>'));\n              }\n            });\n          }\n\n          // Hide suggestion container\n          if (hasTypedSuggestion || (foundSuggestions.length === 0 && $suggestionContainer.length > 0)) {\n            $suggestionContainer.hide();\n          }\n\n          // Create suggestion container if not already exists\n          else if (foundSuggestions.length > 0 && $suggestionContainer.length === 0) {\n            $suggestionContainer = $('<div></div>').css(conf.css).appendTo('body');\n            $elem.addClass('suggestions-' + suggestionId);\n            $suggestionContainer\n              .attr('data-suggest-container', suggestionId)\n              .addClass('jquery-form-suggestions')\n              .addClass('jquery-form-suggestion-' + suggestionId);\n          }\n\n          // Show hidden container\n          else if (foundSuggestions.length > 0 && !$suggestionContainer.is(':visible')) {\n            $suggestionContainer.show();\n          }\n\n          // add suggestions\n          if (foundSuggestions.length > 0 && val.length !== foundSuggestions[0].length) {\n\n            // put container in place every time, just in case\n            setSuggsetionPosition($suggestionContainer, $input);\n\n            // Add suggestions HTML to container\n            $suggestionContainer.html('');\n            $.each(foundSuggestions, function (i, text) {\n              $('<div></div>')\n                .append(text)\n                .css({\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap',\n                  padding: '5px'\n                })\n                .addClass('form-suggest-element')\n                .appendTo($suggestionContainer)\n                .click(function () {\n                  $input.focus();\n                  $input.val($(this).text());\n                  $input.trigger('change');\n                  onSelectSuggestion($input);\n                });\n            });\n          }\n        })\n        .unbind('keydown.validation')\n        .bind('keydown.validation', function (e) {\n          var code = (e.keyCode ? e.keyCode : e.which),\n            suggestionId,\n            $suggestionContainer,\n            $input = $(this);\n\n          if (code === 13 && $.formUtils._selectedSuggestion !== null) {\n            suggestionId = $input.valAttr('suggestion-nr');\n            $suggestionContainer = $('.jquery-form-suggestion-' + suggestionId);\n            if ($suggestionContainer.length > 0) {\n              var newText = $suggestionContainer.find('div').eq($.formUtils._selectedSuggestion).text();\n              $input.val(newText);\n              $input.trigger('change');\n              onSelectSuggestion($input);\n              e.preventDefault();\n            }\n          }\n          else {\n            suggestionId = $input.valAttr('suggestion-nr');\n            $suggestionContainer = $('.jquery-form-suggestion-' + suggestionId);\n            var $suggestions = $suggestionContainer.children();\n            if ($suggestions.length > 0 && $.inArray(code, [38, 40]) > -1) {\n              if (code === 38) { // key up\n                if ($.formUtils._selectedSuggestion === null) {\n                  $.formUtils._selectedSuggestion = $suggestions.length - 1;\n                }\n                else{\n                  $.formUtils._selectedSuggestion--;\n                }\n                if ($.formUtils._selectedSuggestion < 0) {\n                  $.formUtils._selectedSuggestion = $suggestions.length - 1;\n                }\n              }\n              else if (code === 40) { // key down\n                if ($.formUtils._selectedSuggestion === null) {\n                  $.formUtils._selectedSuggestion = 0;\n                }\n                else {\n                  $.formUtils._selectedSuggestion++;\n                }\n                if ($.formUtils._selectedSuggestion > ($suggestions.length - 1)) {\n                  $.formUtils._selectedSuggestion = 0;\n                }\n              }\n\n              // Scroll in suggestion window\n              var containerInnerHeight = $suggestionContainer.innerHeight(),\n                containerScrollTop = $suggestionContainer.scrollTop(),\n                suggestionHeight = $suggestionContainer.children().eq(0).outerHeight(),\n                activeSuggestionPosY = suggestionHeight * ($.formUtils._selectedSuggestion);\n\n              if (activeSuggestionPosY < containerScrollTop || activeSuggestionPosY > (containerScrollTop + containerInnerHeight)) {\n                $suggestionContainer.scrollTop(activeSuggestionPosY);\n              }\n\n              $suggestions\n                .removeClass('active-suggestion')\n                .css('background', 'none')\n                .eq($.formUtils._selectedSuggestion)\n                .addClass('active-suggestion')\n                .css(conf.activeSuggestionCSS);\n\n              e.preventDefault();\n              return false;\n            }\n          }\n        })\n        .unbind('blur.suggest')\n        .bind('blur.suggest', function () {\n          onSelectSuggestion($(this));\n        });\n\n      return $elem;\n    },\n\n    /**\n     * Error dialogs\n     *\n     * @var {Object}\n     */\n    LANG: {\n      errorTitle: 'Form submission failed!',\n      requiredField: 'This is a required field',\n      requiredFields: 'You have not answered all required fields',\n      badTime: 'You have not given a correct time',\n      badEmail: 'You have not given a correct e-mail address',\n      badTelephone: 'You have not given a correct phone number',\n      badSecurityAnswer: 'You have not given a correct answer to the security question',\n      badDate: 'You have not given a correct date',\n      lengthBadStart: 'The input value must be between ',\n      lengthBadEnd: ' characters',\n      lengthTooLongStart: 'The input value is longer than ',\n      lengthTooShortStart: 'The input value is shorter than ',\n      notConfirmed: 'Input values could not be confirmed',\n      badDomain: 'Incorrect domain value',\n      badUrl: 'The input value is not a correct URL',\n      badCustomVal: 'The input value is incorrect',\n      andSpaces: ' and spaces ',\n      badInt: 'The input value was not a correct number',\n      badSecurityNumber: 'Your social security number was incorrect',\n      badUKVatAnswer: 'Incorrect UK VAT Number',\n      badUKNin: 'Incorrect UK NIN',\n      badUKUtr: 'Incorrect UK UTR Number',\n      badStrength: 'The password isn\\'t strong enough',\n      badNumberOfSelectedOptionsStart: 'You have to choose at least ',\n      badNumberOfSelectedOptionsEnd: ' answers',\n      badAlphaNumeric: 'The input value can only contain alphanumeric characters ',\n      badAlphaNumericExtra: ' and ',\n      wrongFileSize: 'The file you are trying to upload is too large (max %s)',\n      wrongFileType: 'Only files of type %s is allowed',\n      groupCheckedRangeStart: 'Please choose between ',\n      groupCheckedTooFewStart: 'Please choose at least ',\n      groupCheckedTooManyStart: 'Please choose a maximum of ',\n      groupCheckedEnd: ' item(s)',\n      badCreditCard: 'The credit card number is not correct',\n      badCVV: 'The CVV number was not correct',\n      wrongFileDim : 'Incorrect image dimensions,',\n      imageTooTall : 'the image can not be taller than',\n      imageTooWide : 'the image can not be wider than',\n      imageTooSmall : 'the image was too small',\n      min : 'min',\n      max : 'max',\n      imageRatioNotAccepted : 'Image ratio is not be accepted',\n      badBrazilTelephoneAnswer: 'The phone number entered is invalid',\n      badBrazilCEPAnswer: 'The CEP entered is invalid',\n      badBrazilCPFAnswer: 'The CPF entered is invalid',\n      badPlPesel: 'The PESEL entered is invalid',\n      badPlNip: 'The NIP entered is invalid',\n      badPlRegon: 'The REGON entered is invalid',\n      badreCaptcha: 'Please confirm that you are not a bot',\n      passwordComplexityStart: 'Password must contain at least ',\n      passwordComplexitySeparator: ', ',\n      passwordComplexityUppercaseInfo: ' uppercase letter(s)',\n      passwordComplexityLowercaseInfo: ' lowercase letter(s)',\n      passwordComplexitySpecialCharsInfo: ' special character(s)',\n      passwordComplexityNumericCharsInfo: ' numeric character(s)',\n      passwordComplexityEnd: '.'\n    }\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/modules/brazil.js":"/**\n * jQuery Form Validator Module: Brazil\n * ------------------------------------------\n * Created by Eduardo Cuducos <http://cuducos.me/>\n *\n * This form validation module adds validators typically used on\n * websites in the Brazil. This module adds the following validators:\n *  - cpf\n *  - cep\n *  - brphone\n *\n * @website http://formvalidator.net/#brazil-validators\n * @license MIT\n */\n\n$.formUtils.addValidator({\n    name : 'cpf',\n    validatorFunction : function(string) {\n\n        // Based on this post from DevMedia:\n        // http://www.devmedia.com.br/validar-cpf-com-javascript/23916\n\n        // clean up the input (digits only) and set some support vars\n        var cpf = string.replace(/\\D/g,'');\n        var sum1 = 0;\n        var sum2 = 0;\n        var remainder1 = 0;\n        var remainder2 = 0;\n\n        // skip special cases\n        if (cpf.length !== 11 || cpf === '00000000000') {\n            return false;\n        }\n\n        // check 1st verification digit\n        for (i = 1; i<= 9; i++) {\n            sum1 += parseInt(cpf.substring(i - 1, i)) * (11 - i);\n        }\n        remainder1 = (sum1 * 10) % 11;\n        if (remainder1 >= 10) {\n            remainder1 = 0;\n        }\n        if (remainder1 !== parseInt(cpf.substring(9, 10))) {\n            return false;\n        }\n\n        // check 2nd verification digit\n        for (i = 1; i <= 10; i++) {\n            sum2 += parseInt(cpf.substring(i - 1, i)) * (12 - i);\n        }\n        remainder2 = (sum2 * 10) % 11;\n        if (remainder2 >= 10) {\n            remainder2 = 0;\n        }\n        if (remainder2 !== parseInt(cpf.substring(10, 11))) {\n            return false;\n        }\n\n        return true;\n\n    },\n    errorMessage : '',\n    errorMessageKey: 'badBrazilCPFAnswer'\n\n});\n\n$.formUtils.addValidator({\n    name : 'brphone',\n    validatorFunction : function(string) {\n\n        // validates telefones such as (having X as numbers):\n        // (XX) XXXX-XXXX\n        // (XX) XXXXX-XXXX\n        // XX XXXXXXXX\n        // XX XXXXXXXXX\n        // XXXXXXXXXX\n        // XXXXXXXXXXX\n        // +XX XX XXXXX-XXXX\n        // +X XX XXXX-XXXX\n        // And so on…\n\n        if (string.match(/^(\\+[\\d]{1,3}[\\s]{0,1}){0,1}(\\(){0,1}(\\d){2}(\\)){0,1}(\\s){0,1}(\\d){4,5}([-. ]){0,1}(\\d){4}$/g)) {\n            return true;\n        }\n\n        return false;\n\n    },\n    errorMessage : '',\n    errorMessageKey: 'badBrazilTelephoneAnswer'\n\n});\n\n$.formUtils.addValidator({\n    name : 'cep',\n    validatorFunction : function(string) {\n\n        // validates CEP  such as (having X as numbers):\n        // XXXXX-XXX\n        // XXXXX.XXX\n        // XXXXX XXX\n        // XXXXXXXX\n\n        if (string.match(/^(\\d){5}([-. ]){0,1}(\\d){3}$/g)) {\n            return true;\n        }\n\n        return false;\n\n    },\n    errorMessage : '',\n    errorMessageKey: 'badBrazilCEPAnswer'\n\n});\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/modules/date.js":"/**\n * jQuery Form Validator Module: Date\n * ------------------------------------------\n * Created by Victor Jonsson <http://www.victorjonsson.se>\n * Documentation and issue tracking on Github <https://github.com/victorjonsson/jQuery-Form-Validator/>\n *\n * The following validators will be added by this module:\n *  - Time (HH:mmm)\n *  - Birth date\n *\n * @website http://formvalidator.net/#location-validators\n * @license MIT\n */\n(function($) {\n\n    /*\n     * Validate time hh:mm\n     */\n    $.formUtils.addValidator({\n        name : 'time',\n        validatorFunction : function(time) {\n            if (time.match(/^(\\d{2}):(\\d{2})$/) === null) {\n                return false;\n            } else {\n                var hours = parseInt(time.split(':')[0],10);\n                var minutes = parseInt(time.split(':')[1],10);\n                if( hours > 23 || minutes > 59 ) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        errorMessage : '',\n        errorMessageKey: 'badTime'\n    });\n\n    /*\n     * Is this a valid birth date\n     */\n    $.formUtils.addValidator({\n        name : 'birthdate',\n        validatorFunction : function(val, $el, conf) {\n            var dateFormat = 'yyyy-mm-dd';\n            if($el.valAttr('format')) {\n                dateFormat = $el.valAttr('format');\n            }\n            else if(typeof conf.dateFormat !== 'undefined') {\n                dateFormat = conf.dateFormat;\n            }\n\n            var inputDate = $.formUtils.parseDate(val, dateFormat);\n            if (!inputDate) {\n                return false;\n            }\n\n            var d = new Date();\n            var currentYear = d.getFullYear();\n            var year = inputDate[0];\n            var month = inputDate[1];\n            var day = inputDate[2];\n\n            if (year === currentYear) {\n                var currentMonth = d.getMonth() + 1;\n                if (month === currentMonth) {\n                    var currentDay = d.getDate();\n                    return day <= currentDay;\n                }\n                else {\n                    return month < currentMonth;\n                }\n            }\n            else {\n                return year < currentYear && year > (currentYear - 124); // we can not live for ever yet...\n            }\n        },\n        errorMessage : '',\n        errorMessageKey: 'badDate'\n    });\n\n})(jQuery);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/modules/file.js":"/**\n * jQuery Form Validator Module: File\n * ------------------------------------------\n * Created by Victor Jonsson <http://www.victorjonsson.se>\n *\n * The following validators will be added by this module:\n *  - mime type\n *  - file size\n *  - file extension\n *\n * @todo, Use $.formUtils.asyncValidation in \"dimension\" validator\n *\n * @website http://formvalidator.net/#file-validators\n * @license MIT\n */\n(function($, window) {\n\n    'use strict';\n\n    var SUPPORTS_FILE_READER = typeof window.FileReader !== 'undefined',\n\n      /**\n      * @return {Array}\n      */\n      _getTypes = function($input) {\n        var allowedTypes = $.split( ($input.valAttr('allowing') || '').toLowerCase() );\n        if ($.inArray('jpg', allowedTypes) > -1 && $.inArray('jpeg', allowedTypes) === -1) {\n          allowedTypes.push('jpeg');\n        }\n        else if ($.inArray('jpeg', allowedTypes) > -1 && $.inArray('jpg', allowedTypes) === -1) {\n          allowedTypes.push('jpg');\n        }\n        return allowedTypes;\n      },\n\n      /**\n      * @param {Object} obj\n      * @param {String} key\n      * @param {String} insert\n      * @param {Object} lang\n      */\n      _generateErrorMsg = function(obj, key, insert, lang) {\n        var msg = lang[key] || '';\n        obj.errorMessageKey = ''; // only use message attached to this object\n        obj.errorMessage = msg.replace('\\%s', insert);\n      },\n\n      /**\n       * @param {String} imgPath\n       * @param {Function} successCallback\n       * @param {Function} errCallback\n       * @private\n       */\n      _loadImage = function(imgPath, successCallback, errCallback) {\n        var reader = new FileReader(),\n          image  = new Image();\n\n        reader.readAsDataURL(imgPath);\n\n        reader.onload = function(fileObj) {\n          image.onload = function() {\n            $(window).trigger('imageValidation', [this]);\n            successCallback(this);\n          };\n\n          image.onerror= function() {\n            errCallback();\n          };\n\n          image.src = fileObj.target.result;\n        };\n      };\n\n    /*\n     * Validate mime type (falls back on validate_extension in older browsers)\n     */\n    $.formUtils.addValidator({\n        name : 'mime',\n        validatorFunction : function(str, $input, conf, language) {\n\n            if( SUPPORTS_FILE_READER ) {\n                var valid = true,\n                    files = $input.get(0).files || [],\n                    mime = '',\n                    allowedTypes = _getTypes($input);\n\n                if( files.length ) {\n                    $.each(files, function(i, file) {\n                        valid = false;\n                        mime = file.type || file.name.substring(file.name.lastIndexOf('.') + 1);\n                        $.each(allowedTypes, function(j, type) {\n                            valid = mime.indexOf(type) > -1;\n                            if( valid ) {\n                                return false;\n                            }\n                        });\n                        return valid;\n                    });\n\n                    if (!valid) {\n                        $.formUtils.warn('Trying to upload a file with mime type '+mime+' which is not allowed');\n                        _generateErrorMsg(this, 'wrongFileType', allowedTypes.join(', '), language);\n                    }\n                }\n\n                return valid;\n\n            } else {\n                $.formUtils.warn('FileReader not supported by browser, will check file extension');\n                return $.formUtils.validators.validate_extension.validatorFunction(str, $input, conf, language);\n            }\n        },\n        errorMessage : '',\n        errorMessageKey: 'wrongFileType'\n    });\n\n    /**\n     * Validate file extension\n     */\n    $.formUtils.addValidator({\n        name : 'extension',\n        validatorFunction : function(value, $input, conf, language) {\n            var valid = true,\n                _this = this,\n                allowedTypes = _getTypes($input);\n\n            $.each($input.get(0).files || [value], function(i, file) {\n                var val = typeof file === 'string' ? file : (file.value || file.fileName || file.name),\n                    ext = val.substr( val.lastIndexOf('.')+1 );\n\n                if( $.inArray(ext.toLowerCase(), allowedTypes) === -1 ) {\n                    valid = false;\n                    _generateErrorMsg(_this, 'wrongFileType', allowedTypes.join(', '), language);\n                    return false;\n                }\n            });\n\n            return valid;\n        },\n        errorMessage : '',\n        errorMessageKey: 'wrongFileType'\n    });\n\n    /**\n     * Validate file size\n     */\n    $.formUtils.addValidator({\n        name : 'size',\n        validatorFunction : function(val, $input, conf, language) {\n            var maxSize = $input.valAttr('max-size');\n            if( !maxSize ) {\n                $.formUtils.warn('Input \"'+$input.attr('name')+'\" is missing data-validation-max-size attribute');\n                return true;\n            } else if( !SUPPORTS_FILE_READER ) {\n                return true; // no fallback available\n            }\n\n            var maxBytes = $.formUtils.convertSizeNameToBytes(maxSize),\n                valid = true;\n\n            $.each($input.get(0).files || [], function(i, file) {\n                valid = file.size <= maxBytes;\n                return valid;\n            });\n\n            if( !valid ) {\n                _generateErrorMsg(this, 'wrongFileSize', maxSize, language);\n            }\n            return valid;\n        },\n        errorMessage : '',\n        errorMessageKey: 'wrongFileSize'\n    });\n\n    /**\n     * Make this function accessible via formUtils for unit tests\n     * @param {String} sizeName\n     * @return {Number}\n     */\n    $.formUtils.convertSizeNameToBytes = function(sizeName) {\n        sizeName = sizeName.toUpperCase();\n        if( sizeName.substr(sizeName.length-1, 1) === 'M' ) {\n            return parseInt(sizeName.substr(0, sizeName.length-1), 10) * 1024 * 1024;\n        } else if( sizeName.substr(sizeName.length-2, 2) === 'MB' ) {\n            return parseInt(sizeName.substr(0, sizeName.length-2), 10) * 1024 * 1024;\n        } else if( sizeName.substr(sizeName.length-2, 2) === 'KB' ) {\n            return parseInt(sizeName.substr(0, sizeName.length-2), 10) * 1024;\n        } else if( sizeName.substr(sizeName.length-1, 1) === 'B' ) {\n            return parseInt(sizeName.substr(0, sizeName.length-1), 10);\n        } else {\n            return parseInt(sizeName, 10);\n        }\n    };\n\n   /**\n    * Attach dimension check onto formUtils only for unit testing purpose\n    * @param {HTMLImageElement} img\n    * @param {String} dimDeclaration\n    * @param {Boolean|String} Returns error message if image was invalid, false otherwise\n    */\n    $.formUtils.checkImageDimension = function(img, dimDeclaration, language) {\n      var error = false,\n          restrictedDim = {width:0, height:0},\n          getDimRestriction = function(dimDeclaration) {\n            dimDeclaration = dimDeclaration.replace('min', '').replace('max', '');\n            var chunks = dimDeclaration.split('x');\n            restrictedDim.width = chunks[0];\n            restrictedDim.height = chunks[1] ? chunks[1] : chunks[0];\n          },\n          minDeclaration = false,\n          maxDeclaration = false,\n          declarationParts = dimDeclaration.split('-');\n\n      if( declarationParts.length === 1 ) {\n        if( declarationParts[0].indexOf('min') === 0 ) {\n          minDeclaration = declarationParts[0];\n        } else {\n          maxDeclaration = declarationParts[0];\n        }\n      } else {\n        minDeclaration = declarationParts[0];\n        maxDeclaration = declarationParts[1];\n      }\n\n      if( minDeclaration ) {\n        // check min\n        getDimRestriction(minDeclaration);\n        if( img.width < restrictedDim.width || img.height < restrictedDim.height )  {\n          error = language.imageTooSmall + ' ('+language.min+' '+restrictedDim.width+'x'+restrictedDim.height+'px)';\n        }\n      }\n\n      if( !error && maxDeclaration ) {\n        // Check max\n        getDimRestriction(maxDeclaration);\n        if( img.width > restrictedDim.width || img.height > restrictedDim.height ) {\n          if( img.width > restrictedDim.width ) {\n            error = language.imageTooWide +' '+restrictedDim.width+'px';\n          } else {\n            error = language.imageTooTall +' '+restrictedDim.height+'px';\n          }\n          error += ' ('+language.max+' '+restrictedDim.width+'x'+restrictedDim.height+'px)';\n        }\n      }\n\n      return error;\n    };\n\n    /**\n     * Attach ratio validation onto formUtils only for unit testing purpose\n     * @param {HTMLImageElement} img\n     * @param {String} dimDeclaration\n     * @param {Boolean|String} Returns error message if image was invalid, false otherwise\n     */\n    $.formUtils.checkImageRatio = function(img, ratioDeclaration, language) {\n      var ratio = img.width / img.height,\n          calculateRatio = function(declaration) {\n            var dims = declaration.replace('max', '').replace('min', '').split(':');\n            return dims[0] / dims[1];\n          },\n          declarationParts = ratioDeclaration.split('-'),\n          isWithin = function(val, min, max) {\n            return val >= min && val <= max;\n          };\n\n      if ( declarationParts.length === 1 ) {\n        if ( ratio !== calculateRatio(declarationParts[0]) ) {\n          return language.imageRatioNotAccepted;\n        }\n      }\n      else if( declarationParts.length === 2 && !isWithin(ratio, calculateRatio(declarationParts[0]), calculateRatio(declarationParts[1])) ) {\n        return language.imageRatioNotAccepted;\n      }\n      return false;\n    };\n\n    /**\n     * Validate image dimension\n     */\n    $.formUtils.addValidator({\n      name : 'dimension',\n      validatorFunction : function(val, $input, conf, language, $form, eventContext) {\n        if (SUPPORTS_FILE_READER) {\n          var thisValidator = this,\n            asyncValidation = $.formUtils.asyncValidation(this.name, $input, $form);\n\n          return asyncValidation.run(eventContext, function (done) {\n            var file = $input.get(0).files || [];\n            if ($input.attr('data-validation').indexOf('mime') === -1) {\n              alert('You should validate file type being jpg, gif or png on input ' + $input[0].name);\n              done(false);\n            } else if (file.length > 1) {\n              alert('Validating image dimensions does not support inputs allowing multiple files');\n              done(false);\n            } else if (file.length === 0) {\n              done(true);\n            } else {\n              _loadImage(file[0], function (img) {\n                var error = false;\n\n                if ($input.valAttr('dimension')) {\n                  error = $.formUtils.checkImageDimension(img, $input.valAttr('dimension'), language);\n                }\n\n                if (!error && $input.valAttr('ratio')) {\n                  error = $.formUtils.checkImageRatio(img, $input.valAttr('ratio'), language);\n                }\n\n                // Set validation result flag on input\n                if (error) {\n                  thisValidator.errorMessage = language.wrongFileDim + ' ' + $input.valAttr('has-not-valid-dim');\n                  done(false);\n                } else {\n                  done(true);\n                }\n\n              }, function (err) {\n                throw err;\n              });\n            }\n          });\n        }\n\n        return true; // Unable to do the validation, lacking FileReader support\n      },\n      errorMessage : '',\n      errorMessageKey: '' // error message created dynamically\n    //  errorMessageKey: 'wrongFileDim'\n    });\n\n    /*\n     * This event listener will remove error messages for file\n     * inputs when file changes\n     */\n    $(window).one('validatorsLoaded formValidationSetup', function(evt, $form, conf) {\n      var $inputs;\n      if( $form ) {\n          $inputs = $form.find('input[type=\"file\"]');\n      } else {\n          $inputs = $('input[type=\"file\"]');\n      }\n      $.formUtils.dialogs.removeInputStylingAndMessage($inputs, conf);\n    });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/modules/html5.js":"/**\n * jQuery Form Validator Module: html5\n * ------------------------------------------\n * Created by Victor Jonsson <http://www.victorjonsson.se>\n *\n * The following module will make this jQuery plugin serve as a\n * html5 fallback. It makes older browsers support the following\n *  - validation when type=\"email\"\n *  - validation when type=\"url\"\n *  - validation when type=\"time\"\n *  - validation when type=\"date\"\n *  - validation when type=\"number\" and max=\"\" min=\"\"\n *  - validation when pattern=\"REGEXP\"\n *  - validation when using maxlength\n *  - Using datalist element for creating suggestions\n *  - placeholders\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function ($) {\n\n  'use strict';\n\n  var SUPPORTS_PLACEHOLDER = 'placeholder' in document.createElement('INPUT'),\n    SUPPORTS_DATALIST = 'options' in document.createElement('DATALIST'),\n    hasLoadedDateModule = false,\n    setupValidationUsingHTML5Attr = function ($form) {\n\n      $form.each(function () {\n        var $f = $(this),\n          $formInputs = $f.find('input,textarea,select'),\n          foundHtml5Rule = false;\n\n        $formInputs.each(function () {\n          var validation = [],\n            $input = $(this),\n            isRequired = $input.attr('required'),\n            attrs = {};\n\n          if (isRequired) {\n            validation.push('required');\n          }\n\n          switch (($input.attr('type') || '').toLowerCase()) {\n            case 'time':\n              validation.push('time');\n              if (!$.formUtils.validators.validate_date && !hasLoadedDateModule) {\n                hasLoadedDateModule = true;\n                $.formUtils.loadModules('date');\n              }\n              break;\n            case 'url':\n              validation.push('url');\n              break;\n            case 'email':\n              validation.push('email');\n              break;\n            case 'date':\n              validation.push('date');\n              break;\n            case 'number':\n              validation.push('number');\n              var max = $input.attr('max'),\n                min = $input.attr('min'),\n                step = $input.attr('step');\n              if (min || max) {\n                if (!min) {\n                  min = '0';\n                }\n                if (!max) {\n                  max = '9007199254740992'; // js max int\n                }\n                if (!step) {\n                  step = '1'; // default value\n                }\n\n                attrs['data-validation-allowing'] = 'range[' + min + ';' + max + ']';\n                if (min.indexOf('-') === 0 || max.indexOf('-') === 0) {\n                  attrs['data-validation-allowing'] += ',negative';\n                }\n                if (min.indexOf('.') > -1 || max.indexOf('.') > -1 || step.indexOf('.') > -1) {\n                  attrs['data-validation-allowing'] += ',float';\n                }\n              } else {\n                attrs['data-validation-allowing'] += ',float,negative';\n              }\n              break;\n          }\n\n          if ($input.attr('pattern')) {\n            validation.push('custom');\n            attrs['data-validation-regexp'] = $input.attr('pattern');\n          }\n          if ($input.attr('maxlength')) {\n            validation.push('length');\n            attrs['data-validation-length'] = 'max' + $input.attr('maxlength');\n          }\n\n          if (!SUPPORTS_DATALIST && $input.attr('list')) {\n            var suggestions = [],\n              $list = $('#' + $input.attr('list'));\n\n            $list.find('option').each(function () {\n              suggestions.push($(this).text());\n            });\n\n            if (suggestions.length === 0) {\n              // IE fix\n              var opts = $.trim($('#' + $input.attr('list')).text()).split('\\n');\n              $.each(opts, function (i, option) {\n                suggestions.push($.trim(option));\n              });\n            }\n\n            $list.remove();\n\n            $.formUtils.suggest($input, suggestions);\n          }\n\n          if (validation.length) {\n            if (!isRequired) {\n              attrs['data-validation-optional'] = 'true';\n            }\n\n            foundHtml5Rule = true;\n\n            var validationRules = ($input.attr('data-validation') || '') + ' ' + validation.join(' ');\n            $input.attr('data-validation', $.trim(validationRules));\n\n            $.each(attrs, function (attrName, attrVal) {\n              $input.attr(attrName, attrVal);\n            });\n          }\n        });\n\n        if (foundHtml5Rule) {\n          $f.trigger('html5ValidationAttrsFound');\n        }\n\n        if (!SUPPORTS_PLACEHOLDER) {\n          $formInputs.filter('input[placeholder]').each(function () {\n            this.__defaultValue = this.getAttribute('placeholder');\n            $(this)\n              .bind('focus', function () {\n                if (this.value === this.__defaultValue) {\n                  this.value = '';\n                  $(this).removeClass('showing-placeholder');\n                }\n              })\n              .bind('blur', function () {\n                if ($.trim(this.value) === '') {\n                  this.value = this.__defaultValue;\n                  $(this).addClass('showing-placeholder');\n                }\n              });\n          });\n        }\n\n      });\n    };\n\n  $.formUtils.$win.bind('validatorsLoaded formValidationSetup', function (evt, $form) {\n    if (!$form) {\n      $form = $('form');\n    }\n    setupValidationUsingHTML5Attr($form);\n  });\n\n  // Make this method available outside the module\n  $.formUtils.setupValidationUsingHTML5Attr = setupValidationUsingHTML5Attr;\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/modules/jsconf.js":"/**\n * jQuery Form Validator Module: JSconf\n * ------------------------------------------\n * Created by Victor Jonsson <http://www.victorjonsson.se>\n *\n * This module makes it possible to configure form validation using javascript\n *\n * @website http://formvalidator.net/#location-validators\n * @license MIT\n */\n(function($) {\n\n  'use strict';\n\n  $.setupValidation = function(conf) {\n    var $forms = $(conf.form || 'form');\n    $.each(conf.validate || conf.validation || {}, function(elemRef, attr) {\n        var $elem;\n        if ( elemRef[0] === '#' ) {\n          $elem = $(elemRef);\n        }\n        else if ( elemRef[0] === '.' ) {\n          $elem = $forms.find(elemRef);\n        }\n        else {\n          $elem = $forms.find('*[name=\"' +elemRef+ '\"]');\n        }\n\n        $elem.attr('data-validation', attr.validation);\n\n        $.each(attr, function(name, val) {\n          if( name !== 'validation' && val !== false) {\n            if( val === true ) {\n              val = 'true';\n            }\n            if( name[0] === '_' ) {\n                name = name.substring(1);\n                if( val === false ) {\n                    $elem.removeAttr(name);\n                } else {\n                    $elem.attr(name, val);\n                }\n            } else {\n                $elem.valAttr(name, val);\n            }\n          }\n        });\n    });\n\n    $.validate(conf);\n\n  };\n\n})(jQuery);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/modules/location.js":"/**\n * jQuery Form Validator Module: Date\n * ------------------------------------------\n * Created by Victor Jonsson <http://www.victorjonsson.se>\n *\n * The following validators will be added by this module:\n *  - Country\n *  - US state\n *  - longitude and latitude\n *\n * @website http://formvalidator.net/#location-validators\n * @license MIT\n */\n(function($) {\n\n    /*\n     * Validate that country exists\n     */\n    $.formUtils.addValidator({\n        name : 'country',\n        validatorFunction : function(str) {\n            return $.inArray(str.toLowerCase(), this.countries) > -1;\n        },\n        countries : ['afghanistan','albania','algeria','american samoa','andorra','angola','anguilla','antarctica','antigua and barbuda','argentina','armenia','aruba','australia','austria','azerbaijan','bahamas','bahrain','bangladesh','barbados','belarus','belgium','belize','benin','bermuda','bhutan','bolivia','bonaire','bosnia and herzegovina','botswana','bouvet island','brazil','british indian ocean territory','brunei darussalam','bulgaria','burkina faso','burundi','cabo verde','cambodia','cameroon','canada','cayman islands','central african republic','chad','chile','china','christmas island','cocos islands','colombia','comoros','democratic republic of the congo','congo','cook islands','costa rica','côte d\\'ivoire','croatia','cuba','curaçao','cyprus','czechia','denmark','djibouti','dominica','dominican republic','ecuador','egypt','el salvador','equatorial guinea','eritrea','estonia','ethiopia','falkland islands','faroe islands','fiji','finland','france','french guiana','french polynesia','french southern territories','gabon','gambia','georgia','germany','ghana','gibraltar','greece','greenland','grenada','guadeloupe','guam','guatemala','guernsey','guinea','guinea-bissau','guyana','haiti','heard island and mcdonald islands','honduras','hong kong','hungary','iceland','india','indonesia','iran','iraq','ireland','isle of man','israel','italy','jamaica','japan','jersey','jordan','kazakhstan','kenya','kiribati','north korea','south korea','kuwait','kyrgyzstan','laos','latvia','lebanon','lesotho','liberia','libya','liechtenstein','lithuania','luxembourg','macao','macedonia','madagascar','malawi','malaysia','maldives','mali','malta','marshall islands','martinique','mauritania','mauritius','mayotte','mexico','micronesia','moldova','monaco','mongolia','montenegro','montserrat','morocco','mozambique','myanmar','namibia','nauru','nepal','netherlands','new caledonia','new zealand','nicaragua','niger','nigeria','niue','norfolk island','northern mariana islands','norway','oman','pakistan','palau','palestine','panama','papua new guinea','paraguay','peru','philippines','pitcairn','poland','portugal','puerto rico','qatar','réunion','romania','russia','rwanda','saint barthélemy','saint helena','ascension and tristan da cunha', 'Ascension and tristan da cunha','saint kitts and nevis','saint lucia','saint martin','saint pierre and miquelon','saint vincent and the grenadines','samoa','san marino','sao tome and principe','saudi arabia','senegal','serbia','seychelles','sierra leone','singapore','sint maarten','slovakia','slovenia','solomon islands','somalia','south africa','south georgia and the south sandwich islands','south sudan','spain','sri lanka','sudan','suriname','svalbard and jan mayen','swaziland','sweden','switzerland','syria','taiwan','tajikistan','tanzania','thailand','timor-leste','togo','tokelau','tonga','trinidad and tobago','tunisia','turkey','turkmenistan','turks and caicos islands','tuvalu','uganda','ukraine','united arab emirates','united kingdom','united states minor outlying islands','united states','uruguay','uzbekistan','vanuatu','venezuela','vatican city','vietnam','virgin islands (british)','virgin islands (us)','wallis and futuna','western sahara','yemen','zambia','zimbabwe','åland islands'],\n        errorMessage : '',\n        errorMessageKey: 'badCustomVal'\n    });\n\n    /*\n     * Is this a valid federate state in the US\n     */\n    $.formUtils.addValidator({\n        name : 'federatestate',\n        validatorFunction : function(str) {\n            return $.inArray(str.toLowerCase(), this.states) > -1;\n        },\n        states : ['alabama','alaska', 'arizona', 'arkansas','california','colorado','connecticut','delaware','florida','georgia','hawaii','idaho','illinois','indiana','iowa','kansas','kentucky','louisiana','maine','maryland', 'district of columbia', 'massachusetts','michigan','minnesota','mississippi','missouri','montana','nebraska','nevada','new hampshire','new jersey','new mexico','new york','north carolina','north dakota','ohio','oklahoma','oregon','pennsylvania','rhode island','south carolina','south dakota','tennessee','texas','utah','vermont','virginia','washington','west virginia','wisconsin','wyoming'],\n        errorMessage : '',\n        errorMessageKey: 'badCustomVal'\n    });\n\n\n    $.formUtils.addValidator({\n        name : 'longlat',\n        validatorFunction : function(str) {\n            var regexp = /^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/;\n            return regexp.test(str);\n        },\n        errorMessage:'',\n        errorMessageKey:'badCustomVal'\n    });\n\n    /**\n     * @private\n     * @param {Array} listItems\n     * @return {Array}\n     */\n    var _makeSortedList = function(listItems) {\n        var newList = [];\n        $.each(listItems, function(i, value) {\n            newList.push(value.substr(0,1).toUpperCase() + value.substr(1, value.length));\n        });\n        newList.sort();\n        return newList;\n    };\n\n    $.fn.suggestCountry = function(settings) {\n        var countries = _makeSortedList($.formUtils.validators.validate_country.countries),\n          usaIndex = $.inArray(countries, 'Usa');\n\n        countries[usaIndex] = 'USA';\n        return $.formUtils.suggest(this, countries, settings);\n    };\n\n    $.fn.suggestState = function(settings) {\n        var states = _makeSortedList($.formUtils.validators.validate_federatestate.states);\n        return $.formUtils.suggest(this, states, settings);\n    };\n\n})(jQuery);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/modules/logic.js":"/**\n * jQuery Form Validator Module: Logic\n * ------------------------------------------\n * Created by Victor Jonsson <http://www.victorjonsson.se>\n *\n * - data-validation-depends-on\n * - data-validation-if-answered\n *\n * @website http://formvalidator.net/#logic\n * @license MIT\n */\n(function($) {\n\n\t'use strict';\n\n  var setupValidationDependsOn = function($form, conf) {\n\n      var dependingOnBeforeValidation = function() {\n\n          var $input = $(this),\n            nameOfDependingInput = $input.valAttr('depends-on') || $input.valAttr('if-checked');\n\n          // Whether or not this input should be validated depends on if another input has a value\n          if (nameOfDependingInput) {\n\n            // Set the boolean telling us that the validation depends\n            // on another input being checked\n            var valueOfDependingInput = $.formUtils.getValue('[name=\"' + nameOfDependingInput + '\"]', $form),\n              listWithRequiredValues = $.split($input.valAttr('depends-on-value'), false, false),\n              dependingInputIsMissingValueOrHasIncorrectValue = !valueOfDependingInput || (\n                  listWithRequiredValues.length &&\n                    !valueIsInList(valueOfDependingInput, listWithRequiredValues)\n                );\n\n            if (dependingInputIsMissingValueOrHasIncorrectValue) {\n              $input.valAttr('skipped', '1');\n            }\n          }\n        },\n        valueIsInList = function(value, valueList) {\n          var isInList = false,\n            lowerCaseValue = value.toLocaleLowerCase();\n\n          $.each(valueList, function(i, otherValue) {\n            if (lowerCaseValue === otherValue.toLocaleLowerCase()) {\n              isInList = true;\n              return false;\n            }\n          });\n          return isInList;\n        },\n        dependingOnValueChanged = function() {\n          var $input = $(this),\n            $otherInput = this.$dependingInput,\n            valueOfDependingInput = $.formUtils.getValue($input),\n            requiredValueOfDependingInput = $input.valAttr('depending-value'),\n            otherInputHasValue = $.formUtils.getValue($otherInput) ? true:false,\n            dependingInputIsMissingValueOrHasIncorrectValue = !valueOfDependingInput || (\n                requiredValueOfDependingInput &&\n                requiredValueOfDependingInput !== valueOfDependingInput\n              );\n\n          if (dependingInputIsMissingValueOrHasIncorrectValue && !otherInputHasValue) {\n            $.formUtils.dialogs.removeInputStylingAndMessage($otherInput, conf);\n          }\n        };\n\n      $form.find('[data-validation-depends-on]')\n        .off('beforeValidation', dependingOnBeforeValidation)\n        .on('beforeValidation', dependingOnBeforeValidation)\n        .each(function() {\n          // Remove validation when on depending input\n          var $dependingInput = $(this);\n          $form.find('[name=\"'+$dependingInput.valAttr('depends-on')+'\"]').each(function() {\n            $(this)\n              .off('change', dependingOnValueChanged)\n              .on('change', dependingOnValueChanged)\n              .valAttr('depending-value', $dependingInput.valAttr('depends-on-value'));\n\n            this.$dependingInput = $dependingInput;\n\n          });\n\n        });\n\n    },\n    setupValidationTogetherWith = function($form, conf) {\n\n      var optionalBeforeValidation = function() {\n          var $input = $(this),\n            dependingInputs = $input.valAttr('optional-if-answered'),\n            dependingInputsHasValue = false,\n            thisInputHasAnswer = $.formUtils.getValue($input) ? true:false;\n\n          if (!thisInputHasAnswer) {\n            $.each($.split(dependingInputs), function(i, inputName) {\n              var $dependingInput = $form.find('[name=\"'+inputName+'\"]');\n              dependingInputsHasValue = $.formUtils.getValue($dependingInput) ? true:false;\n              if (dependingInputsHasValue) {\n                return false;\n              }\n            });\n\n            if (dependingInputsHasValue) {\n              $input.valAttr('skipped', 1);\n            }\n          }\n        },\n        optionalInputOnChange = function() {\n          var $input = $(this),\n            dependingInputs = $input.valAttr('optional-if-answered');\n\n          $.each($.split(dependingInputs), function(i, inputName) {\n            var $dependingInput = $form.find('[name=\"'+inputName+'\"]'),\n                dependingInputsHasValue = $.formUtils.getValue($dependingInput) ? true:false;\n            if (!dependingInputsHasValue) {\n              $.formUtils.dialogs.removeInputStylingAndMessage($dependingInput, conf);\n            }\n          });\n        };\n\n      $form.find('[data-validation-optional-if-answered]')\n        .off('beforeValidation', optionalBeforeValidation)\n        .on('beforeValidation', optionalBeforeValidation)\n        .each(function() {\n          $(this)\n            .off('change', optionalInputOnChange)\n            .on('change', optionalInputOnChange);\n        });\n    };\n\n  $.formUtils.$win.bind('validatorsLoaded formValidationSetup', function(evt, $form, conf) {\n    if( !$form ) {\n      $form = $('form');\n    }\n    setupValidationDependsOn($form, conf);\n    setupValidationTogetherWith($form, conf);\n  });\n\n})(jQuery);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/modules/poland.js":"/**\n * jQuery Form Validator Module: Poland\n * ------------------------------------------\n * Created by simivar <https://github.com/simivar>\n *\n * This form validation module adds validators typically used on\n * websites in Poland. This module adds the following validators:\n *  - plpesel\n *\n * @website http://formvalidator.net/#poland-validators\n * @license MIT\n */\n(function($) {\n\n\t/**\n\t * PL PESEL - polish personal identity number (in Polish identity cards) validator\n\t */\n\t$.formUtils.addValidator({\n\t\tname: 'plpesel',\n\t\tvalidatorFunction: function(pesel){\n\t\t\tvar weights = [1, 3, 7, 9, 1, 3, 7, 9, 1, 3],\n\t\t\t\tcheckSum = 0, checkDigit = 0;\n\n\t\t\tif( /\\d{11}/.test( pesel ) && pesel.length === 11 ){\n\t\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\t\tcheckSum += pesel[ i ] * weights[ i ];\n\t\t\t\t}\n\n\t\t\t\tif( checkSum % 10 !== 0 ){\n\t\t\t\t\tcheckDigit = 10 - (checkSum % 10);\n\t\t\t\t}\n\n\t\t\t\tif( parseInt( pesel.charAt( 10 ) ) === checkDigit ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\terrorMessage: '',\n\t\terrorMessageKey: 'badPlPesel'\n\t});\n\n\t/**\n\t * PL NIP - polish VAT identification number validator\n\t */\n\t$.formUtils.addValidator({\n\t\tname: 'plnip',\n\t\tvalidatorFunction: function(nip){\n\t\t\tvar weights = [6, 5, 7, 2, 3, 4, 5, 6, 7],\n\t\t\t\tcheckSum = 0;\n\n\t\t\tif( /\\d{10}/.test( nip ) && nip.length === 10 ){\n\t\t\t\tfor (var i = 0; i < 9; i++) {\n\t\t\t\t\tcheckSum += nip[ i ] * weights[ i ];\n\t\t\t\t}\n\n\t\t\t\tif( parseInt( nip.charAt( 9 ) ) === checkSum % 11 ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\terrorMessage: '',\n\t\terrorMessageKey: 'badPlNip'\n\t});\n\n\t/**\n\t * PL REGON - polish bussiness identity number validator\n\t */\n\t$.formUtils.addValidator({\n\t\tname: 'plregon',\n\t\tvalidatorFunction: function(regon){\n\t\t\tvar weightsNine = [8, 9, 2, 3, 4, 5, 6, 7],\n\t\t\t\tweightsFourteen = [2, 4, 8, 5, 0, 9, 7, 3, 6, 1, 2, 4, 8],\n\t\t\t\tcheckSum = 0, checkDigit = 0;\n\n\t\t\tif( /(\\d{14}|\\d{9})/.test( regon ) && ( regon.length === 9 || regon.length === 14 ) ){\n\t\t\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\t\tcheckSum += regon[ i ] * weightsNine[ i ];\n\t\t\t\t}\n\n\t\t\t\tif( checkSum % 11 !== 10 ){\n\t\t\t\t\tcheckDigit = checkSum % 11;\n\t\t\t\t}\n\n\t\t\t\tif( parseInt( regon.charAt( 8 ) ) === checkDigit ){\n\t\t\t\t\tif( regon.length === 14 ){\n\t\t\t\t\t\tcheckSum = 0;\n\n\t\t\t\t\t\tfor (i = 0; i < 13; i++) {\n\t\t\t\t\t\t\tcheckSum += regon[ i ] * weightsFourteen[ i ];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( checkSum % 11 !== 10 ){\n\t\t\t\t\t\t\tcheckDigit = checkSum % 11;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( parseInt( regon.charAt( 13 ) ) === checkDigit ){\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\terrorMessage: '',\n\t\terrorMessageKey: 'badPlRegon'\n\t});\n\n})(jQuery);","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/modules/sanitize.js":"/**\n * jQuery Form Validator Module: sanitize\n * ------------------------------------------\n * Created by Victor Jonsson <http://www.victorjonsson.se>\n *\n * This module makes it possible to add sanitation functions to\n * inputs. The functions is triggered on blur. Example:\n *\n * <input data-sanitize=\"uppercase trim\" />\n *\n * Available functions are:\n *  - uppercase\n *  - lowercase\n *  - capitalize\n *  - trim\n *  - trimLeft\n *  - trimRight\n *  - numberFormat\n *  - insertLeft\n *  - insertRight\n *  - strip\n *  - escape (replace <, >, &, ' and \" with HTML entities)\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window) {\n\n  'use strict';\n\n  var inputsThatCantBeSanitized = '[type=\"button\"], [type=\"submit\"], [type=\"radio\"], [type=\"checkbox\"], [type=\"reset\"], [type=\"search\"]',\n      sanitizeCommands = {\n        upper : function(val) {\n          return val.toLocaleUpperCase();\n        },\n        lower : function(val) {\n          return val.toLocaleLowerCase();\n        },\n        trim : function(val) {\n          return $.trim(val);\n        },\n        trimLeft : function(val) {\n          return val.replace(/^\\s+/,'');\n        },\n        trimRight : function(val) {\n          return val.replace(/\\s+$/,'');\n        },\n        capitalize : function(val) {\n          var words = val.split(' ');\n          $.each(words, function(i, word) {\n            words[i] = word.substr(0,1).toUpperCase() + word.substr(1, word.length);\n          });\n          return words.join(' ');\n        },\n        insert : function(val, $input, pos) {\n          var extra = ($input.attr('data-sanitize-insert-'+pos) || '').replace(/\\[SPACE\\]/g, ' ');\n          if ( (pos === 'left' && val.indexOf(extra) === 0) || (pos === 'right' && val.substring(val.length - extra.length) === extra)) {\n            return val;\n          }\n          return (pos === 'left' ? extra:'') + val + (pos === 'right' ? extra : '');\n        },\n        insertRight : function(val, $input) {\n          return this.insert(val, $input, 'right');\n        },\n        insertLeft : function(val, $input) {\n          return this.insert(val, $input, 'left');\n        },\n        numberFormat : function(val, $input) {\n          if (val.length === 0) {\n            return val;\n          }\n          if ( 'numeral' in window ) {\n            //If this has been previously formatted, it needs to be unformatted first before being reformatted.\n            //Else numeral will fail\n            val = numeral().unformat(val);\n            val = numeral(val).format( $input.attr('data-sanitize-number-format') );\n          }\n          else {\n            throw new ReferenceError('Using sanitation function \"numberFormat\" requires that you include numeral.js ' +\n              '(http://numeraljs.com/)');\n          }\n          return val;\n        },\n        strip: function(val, $input) {\n          var toRemove = $input.attr('data-sanitize-strip') || '';\n          $.split(toRemove, function(char) {\n            var regex = new RegExp($.isNumeric(char) ? char : '\\\\'+char, 'g');\n            val = val.replace(regex, '');\n          });\n          return val;\n        },\n        escape : function(val, $input) {\n          var isEscaped = $input.valAttr('is-escaped'),\n            entities = {\n              '<' : '__%AMP%__lt;',\n              '>' : '__%AMP%__gt;',\n              '&' : '__%AMP%__amp;',\n              '\\'': '__%AMP%__#8217;',\n              '\"' : '__%AMP%__quot;'\n            };\n\n          if (isEscaped === 'yes') {\n             return val;\n          }\n\n          $input.valAttr('is-escaped', 'yes');\n          $input.one('keyup', function(evt) {\n            if(evt.keyCode !== 9) {\n              $input.valAttr('is-escaped', 'no');\n            }\n          });\n\n          $.each(entities, function(symbol, replacement) {\n            val = val.replace(new RegExp(symbol, 'g'), replacement);\n          });\n\n          return val.replace(new RegExp('__\\%AMP\\%__', 'g'), '&');\n        }\n      },\n      setupSanitation = function(evt, $forms, config) {\n\n        if ( !$forms ) {\n          $forms = $('form');\n        }\n        if ( !$forms.each ) {\n          $forms = $($forms);\n        }\n\n        var execSanitationCommands = function() {\n          var $input = $(this),\n            value = $input.val();\n          $.split($input.attr('data-sanitize'), function(command) {\n            if ( command in sanitizeCommands ) {\n              value = sanitizeCommands[command](value, $input, config);\n            }\n            else {\n              throw new Error('Use of unknown sanitize command \"'+command+'\"');\n            }\n          });\n          $input\n            .val(value)\n            .trigger('keyup.validation'); // we need to re-validate in case it gets validated on blur\n        };\n\n        $forms.each(function() {\n          var $form = $(this);\n          if( config.sanitizeAll ) {\n            $form.find('input,textarea').not(inputsThatCantBeSanitized).each(function() {\n              var $input = $(this),\n                  sanitation = $input.attr('data-sanitize') || '';\n              $input.attr('data-sanitize', config.sanitizeAll +' '+ sanitation);\n            });\n          }\n\n          $form.find('[data-sanitize]')\n            .unbind('blur.sanitation', execSanitationCommands)\n            .bind('blur.sanitation', execSanitationCommands);\n\n          $(function() {\n              $form.trigger('blur.sanitation');\n          });\n\n        });\n      };\n\n  $(window).on('validatorsLoaded formValidationSetup', setupSanitation);\n\n  // Only for unit testing\n  $.formUtils.setupSanitation = setupSanitation;\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/modules/security.js":"/**\n * jQuery Form Validator Module: Security\n * ------------------------------------------\n * Created by Victor Jonsson <http://victorjonsson.se>\n *\n * This module adds validators typically used in registration forms.\n * This module adds the following validators:\n *  - spamcheck\n *  - confirmation\n *  - strength\n *  - backend\n *  - credit card\n *  - cvv\n *\n * @website http://formvalidator.net/#security-validators\n * @license MIT\n */\n(function ($, window) {\n\n  'use strict';\n\n  /*\n   * Simple spam check\n   */\n  $.formUtils.addValidator({\n    name: 'spamcheck',\n    validatorFunction: function (val, $el) {\n      var attr = $el.valAttr('captcha');\n      return attr === val;\n    },\n    errorMessage: '',\n    errorMessageKey: 'badSecurityAnswer'\n  });\n\n  /*\n   * Validate confirmation (tests that two inputs are identical; usually used for\n   * passwords)\n   */\n  $.formUtils.addValidator({\n    name: 'confirmation',\n    validatorFunction: function (value, $el, config, language, $form) {\n      var password,\n        passwordInputName = $el.valAttr('confirm') ||\n          ($el.attr('name') + '_confirmation'),\n        $passwordInput = $form.find('[name=\"' + passwordInputName + '\"]');\n      if (!$passwordInput.length) {\n        $.formUtils.warn('Password confirmation validator: could not find an input ' +\n          'with name \"' + passwordInputName + '\"');\n        return false;\n      }\n\n      password = $passwordInput.val();\n      if (config.validateOnBlur && !$passwordInput[0].hasValidationCallback) {\n        $passwordInput[0].hasValidationCallback = true;\n        var keyUpCallback = function () {\n          $el.validate();\n        };\n        $passwordInput.on('keyup', keyUpCallback);\n        $form.one('formValidationSetup', function () {\n          $passwordInput[0].hasValidationCallback = false;\n          $passwordInput.off('keyup', keyUpCallback);\n        });\n      }\n\n      return value === password;\n    },\n    errorMessage: '',\n    errorMessageKey: 'notConfirmed'\n  });\n\n  var creditCards = {\n      'amex': [15, 15],\n      'diners_club': [14, 14],\n      'cjb': [16, 16],\n      'laser': [16, 19],\n      'visa': [16, 16],\n      'mastercard': [16, 16],\n      'maestro': [12, 19],\n      'discover': [16, 16]\n    },\n    checkOnlyAmex = false,\n    allowsAmex = false;\n\n  /*\n   * Credit card\n   */\n  $.formUtils.addValidator({\n    name: 'creditcard',\n    validatorFunction: function (value, $el) {\n      var allowing = $.split($el.valAttr('allowing') || '');\n\n      // Setup for cvv validation\n      allowsAmex = $.inArray('amex', allowing) > -1;\n      checkOnlyAmex = allowsAmex && allowing.length === 1;\n\n      // Correct length\n      if (allowing.length > 0) {\n        var hasValidLength = false;\n        $.each(allowing, function (i, cardName) {\n          if (cardName in creditCards) {\n            if (value.length >= creditCards[cardName][0] && value.length <= creditCards[cardName][1]) {\n              hasValidLength = true;\n              return false;\n            }\n          } else {\n            $.formUtils.warn('Use of unknown credit card \"' + cardName + '\"');\n          }\n        });\n\n        if (!hasValidLength) {\n          return false;\n        }\n      }\n\n      // only numbers\n      if (value.replace(new RegExp('[0-9]', 'g'), '') !== '') {\n        return false;\n      }\n\n      // http://en.wikipedia.org/wiki/Luhn_algorithm\n      // http://www.brainjar.com/js/validation/default2.asp\n      var checkSum = 0;\n      $.each(value.split('').reverse(), function (i, digit) {\n        digit = parseInt(digit, 10);\n        if (i % 2 === 0) {\n          checkSum += digit;\n        } else {\n          digit *= 2;\n          if (digit < 10) {\n            checkSum += digit;\n          } else {\n            checkSum += digit - 9;\n          }\n        }\n      });\n      return checkSum % 10 === 0;\n    },\n    errorMessage: '',\n    errorMessageKey: 'badCreditCard'\n  });\n\n  /*\n   * Credit card number\n   */\n  $.formUtils.addValidator({\n    name: 'cvv',\n    validatorFunction: function (val) {\n      if (val.replace(/[0-9]/g, '') === '') {\n        val = val + '';\n        if (checkOnlyAmex) {\n          return val.length === 4;\n        } else if (allowsAmex) {\n          return val.length === 3 || val.length === 4;\n        } else {\n          return val.length === 3;\n        }\n      }\n      return false;\n    },\n    errorMessage: '',\n    errorMessageKey: 'badCVV'\n  });\n\n  /*\n   * Validate password strength\n   */\n  $.formUtils.addValidator({\n    name: 'strength',\n    validatorFunction: function (val, $el) {\n      var requiredStrength = $el.valAttr('strength') || 2;\n      if (requiredStrength && requiredStrength > 3) {\n        requiredStrength = 3;\n      }\n\n      return $.formUtils.validators.validate_strength.calculatePasswordStrength(val) >= requiredStrength;\n    },\n    errorMessage: '',\n    errorMessageKey: 'badStrength',\n\n    /**\n     * Code more or less borrowed from jQuery plugin \"Password Strength Meter\"\n     * written by Darren Mason (djmason9@gmail.com), myPocket technologies (www.mypocket-technologies.com)\n     * @param {String} password\n     * @return {Number}\n     */\n    calculatePasswordStrength: function (password) {\n\n      if (password.length < 4) {\n        return 0;\n      }\n\n      var score = 0;\n\n      var checkRepetition = function (pLen, str) {\n        var res = '';\n        for (var i = 0; i < str.length; i++) {\n          var repeated = true;\n\n          for (var j = 0; j < pLen && (j + i + pLen) < str.length; j++) {\n            repeated = repeated && (str.charAt(j + i) === str.charAt(j + i + pLen));\n          }\n          if (j < pLen) {\n            repeated = false;\n          }\n          if (repeated) {\n            i += pLen - 1;\n            repeated = false;\n          }\n          else {\n            res += str.charAt(i);\n          }\n        }\n        return res;\n      };\n\n      //password length\n      score += password.length * 4;\n      score += ( checkRepetition(1, password).length - password.length ) * 1;\n      score += ( checkRepetition(2, password).length - password.length ) * 1;\n      score += ( checkRepetition(3, password).length - password.length ) * 1;\n      score += ( checkRepetition(4, password).length - password.length ) * 1;\n\n      //password has 3 numbers\n      if (password.match(/(.*[0-9].*[0-9].*[0-9])/)) {\n        score += 5;\n      }\n\n      //password has 2 symbols\n      if (password.match(/(.*[!,@,#,$,%,^,&,*,?,_,~].*[!,@,#,$,%,^,&,*,?,_,~])/)) {\n        score += 5;\n      }\n\n      //password has Upper and Lower chars\n      if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {\n        score += 10;\n      }\n\n      //password has number and chars\n      if (password.match(/([a-zA-Z])/) && password.match(/([0-9])/)) {\n        score += 15;\n      }\n      //\n      //password has number and symbol\n      if (password.match(/([!,@,#,$,%,^,&,*,?,_,~])/) && password.match(/([0-9])/)) {\n        score += 15;\n      }\n\n      //password has char and symbol\n      if (password.match(/([!,@,#,$,%,^,&,*,?,_,~])/) && password.match(/([a-zA-Z])/)) {\n        score += 15;\n      }\n\n      //password is just a numbers or chars\n      if (password.match(/^\\w+$/) || password.match(/^\\d+$/)) {\n        score -= 10;\n      }\n\n      //verifying 0 < score < 100\n      if (score < 0) {\n        score = 0;\n      }\n      if (score > 100) {\n        score = 100;\n      }\n\n      if (score < 20) {\n        return 0;\n      }\n      else if (score < 40) {\n        return 1;\n      }\n      else if (score <= 60) {\n        return 2;\n      }\n      else {\n        return 3;\n      }\n    },\n\n    strengthDisplay: function ($el, options) {\n      var config = {\n        fontSize: '12pt',\n        padding: '4px',\n        bad: 'Very bad',\n        weak: 'Weak',\n        good: 'Good',\n        strong: 'Strong'\n      };\n\n      if (options) {\n        $.extend(config, options);\n      }\n\n      $el.bind('keyup', function () {\n        var val = $(this).val(),\n          $parent = typeof config.parent === 'undefined' ? $(this).parent() : $(config.parent),\n          $displayContainer = $parent.find('.strength-meter'),\n          strength = $.formUtils.validators.validate_strength.calculatePasswordStrength(val),\n          css = {\n            background: 'pink',\n            color: '#FF0000',\n            fontWeight: 'bold',\n            border: 'red solid 1px',\n            borderWidth: '0px 0px 4px',\n            display: 'inline-block',\n            fontSize: config.fontSize,\n            padding: config.padding\n          },\n          text = config.bad;\n\n        if ($displayContainer.length === 0) {\n          $displayContainer = $('<span></span>');\n          $displayContainer\n            .addClass('strength-meter')\n            .appendTo($parent);\n        }\n\n        if (!val) {\n          $displayContainer.hide();\n        } else {\n          $displayContainer.show();\n        }\n\n        if (strength === 1) {\n          text = config.weak;\n        }\n        else if (strength === 2) {\n          css.background = 'lightyellow';\n          css.borderColor = 'yellow';\n          css.color = 'goldenrod';\n          text = config.good;\n        }\n        else if (strength >= 3) {\n          css.background = 'lightgreen';\n          css.borderColor = 'darkgreen';\n          css.color = 'darkgreen';\n          text = config.strong;\n        }\n\n        $displayContainer\n          .css(css)\n          .text(text);\n      });\n    }\n  });\n\n  var requestServer = function (serverURL, $element, val, conf, callback) {\n      var reqParams = $element.valAttr('req-params') || $element.data('validation-req-params') || {},\n        handleResponse = function (response, callback) {\n          callback(response);\n        };\n\n      if (!reqParams) {\n        reqParams = {};\n      }\n      if (typeof reqParams === 'string') {\n        reqParams = $.parseJSON(reqParams);\n      }\n      reqParams[$element.valAttr('param-name') || $element.attr('name')] = val;\n\n      $.ajax({\n        url: serverURL,\n        type: 'POST',\n        cache: false,\n        data: reqParams,\n        dataType: 'json',\n        error: function (error) {\n          handleResponse({valid: false, message: 'Connection failed with status: ' + error.statusText}, callback);\n          return false;\n        },\n        success: function (response) {\n          handleResponse(response, callback);\n        }\n      });\n    };\n\n  /*\n   * Server validation\n   */\n  $.formUtils.addValidator({\n    name: 'server',\n    validatorFunction: function (val, $input, conf, lang, $form, eventContext) {\n      var asyncValidation = $.formUtils.asyncValidation(this.name, $input, $form);\n      return asyncValidation.run(eventContext, function(done) {\n        var serverURL = $input.valAttr('url') || conf.backendUrl || document.location.href;\n        // @todo: deprecated class names that should be removed when moving up to 3.0\n        $form.addClass('validating-server-side');\n        $input.addClass('validating-server-side');\n        requestServer(serverURL, $input, val, conf, function (response) {\n          $form.removeClass('validating-server-side');\n          $input.removeClass('validating-server-side');\n          if (response.message) {\n            $input.attr(conf.validationErrorMsgAttribute, response.message);\n            $input.one('validation', function() {\n              $input.removeAttr(conf.validationErrorMsgAttribute);\n            });\n          }\n          done(response.valid);\n        });\n      });\n    },\n    errorMessage: '',\n    errorMessageKey: 'badBackend'\n  });\n\n  /*\n   * Check for only letters and numbers\n   *\n   * http://www.slovo.info/testuni.htm\n   */\n  $.formUtils.addValidator({\n    name: 'letternumeric',\n    validatorFunction: function (val, $el, config, language) {\n      var patternStart = '^([a-zA-Z0-9\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n        patternEnd = ']+)$',\n        additionalChars = $el.valAttr('allowing'),\n        pattern = '';\n\n      if (additionalChars) {\n        pattern = patternStart + additionalChars + patternEnd;\n        var extra = additionalChars.replace(/\\\\/g, '');\n        if (extra.indexOf(' ') > -1) {\n          extra = extra.replace(' ', '');\n          extra += language.andSpaces || $.formUtils.LANG.andSpaces;\n        }\n        this.errorMessage = language.badAlphaNumeric + language.badAlphaNumericExtra + extra;\n      } else {\n        pattern = patternStart + patternEnd;\n        this.errorMessage = language.badAlphaNumeric;\n      }\n\n      return new RegExp(pattern).test(val);\n    },\n    errorMessage: '',\n    errorMessageKey: 'requiredFields'\n  });\n\n  /*\n   * Check password content depending on following parameters:\n   *    data-validation-require-uc-letter,\n   *    data-validation-require-lc-letter,\n   *    data-validation-require-special-char,\n   *    data-validation-require-numeral\n  */\n  $.formUtils.addValidator({\n    name : 'complexity',\n    validatorFunction : function(value, $input, config, language) {\n      var numRequiredUppercaseChars = $input.valAttr('require-uc-letter') || '0',\n        numRequiredLowercaseChars = $input.valAttr('require-lc-letter') || '0',\n        numRequiredSpecialChars = $input.valAttr('require-special-char') || '0',\n        numRequiredNumericChars = $input.valAttr('require-numeral') || '0',\n        numRequiredCharsTotal = $input.valAttr('require-length') || '0',\n        subValidators = {\n          'uc-letter': {\n            pattern: '^(?=(?:.*[A-Z]){'+numRequiredUppercaseChars+',}).+',\n            numRequired: numRequiredUppercaseChars,\n            dialogEnd: language.passwordComplexityUppercaseInfo\n          },\n          'lc-letter': {\n            pattern: '^(?=(?:.*[a-z]){'+numRequiredLowercaseChars+',}).+',\n            numRequired: numRequiredLowercaseChars,\n            dialogEnd: language.passwordComplexityLowercaseInfo\n          },\n          'special-char': {\n            pattern: '^(?=(?:.*(_|[!\"#$%&\\'()*+\\\\\\\\,-./:;<=>?@[\\\\]^_`{|}~])){'+numRequiredSpecialChars+',}).+',\n            numRequired: numRequiredSpecialChars,\n            dialogEnd: language.passwordComplexitySpecialCharsInfo\n          },\n          'numeral': {\n            pattern: '^(?=(?:.*\\\\d){'+numRequiredNumericChars+',}).+',\n            numRequired: numRequiredNumericChars,\n            dialogEnd: $.formUtils.LANG.passwordComplexityNumericCharsInfo\n          },\n          'length': {\n            callback: function(val) {\n              return val.length > numRequiredCharsTotal;\n            },\n            numRequired: numRequiredCharsTotal,\n            dialogEnd: 'Lorem te ipsum'\n          }\n        },\n        errorMessage = '';\n\n      $.each(subValidators, function(name, subValidator) {\n        var numRequired = parseInt(subValidator.numRequired, 10);\n        if (numRequired) {\n          var regexp = new RegExp(subValidator.pattern),\n            valid = false;\n\n          if (subValidator.callback) {\n            valid = subValidator.callback(value);\n          } else {\n            valid = regexp.test(value);\n          }\n\n          if (!valid) {\n            if (errorMessage === '') {\n              errorMessage = language.passwordComplexityStart;\n            }\n            errorMessage += language.passwordComplexitySeparator + numRequired + subValidator.dialogEnd;\n            $input.trigger('complexityRequirementValidation', [false, name]);\n          } else {\n            $input.trigger('complexityRequirementValidation', [true, name]);\n          }\n        }\n      });\n      if (errorMessage) {\n        this.errorMessage = errorMessage + language.passwordComplexityEnd;\n        return false;\n      } else {\n        return true;\n      }\n    },\n    errorMessage : '',\n    errorMessageKey: ''\n  });\n\n  /*\n   * Google reCaptcha 2\n   */\n  $.formUtils.addValidator({\n    name: 'recaptcha',\n    validatorFunction: function (val, $el) {\n      return grecaptcha.getResponse($el.valAttr('recaptcha-widget-id')) !== '';\n    },\n    errorMessage: '',\n    errorMessageKey: 'badreCaptcha'\n  });\n\n  $.fn.displayPasswordStrength = function (conf) {\n    new $.formUtils.validators.validate_strength.strengthDisplay(this, conf);\n    return this;\n  };\n\n  var setupGooglereCaptcha = function (evt, $forms, config) {\n    if (!$forms) {\n      $forms = $('form');\n    }\n    if (typeof grecaptcha !== 'undefined' && !$.formUtils.hasLoadedGrecaptcha) {\n      throw new Error('reCaptcha API can not be loaded by hand, delete reCaptcha API snippet.');\n    } else if (!$.formUtils.hasLoadedGrecaptcha && $('[data-validation~=\"recaptcha\"]', $forms).length) {\n      $.formUtils.hasLoadedGrecaptcha = true;\n\n      var src = '//www.google.com/recaptcha/api.js?onload=reCaptchaLoaded&render=explicit' + (config.lang ? '&hl=' + config.lang : '');\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = src;\n      document.getElementsByTagName('body')[0].appendChild(script);\n    }\n  };\n\n  window.reCaptchaLoaded = function ($forms) {\n    if (!$forms || typeof $forms !== 'object' || !$forms.length) {\n      $forms = $('form');\n    }\n\n    var i=0,\n\t\tgrecaptchaRenderCallback = [];\n    $forms.each(function () {\n      var $form = $(this),\n        config = $form.context.validationConfig || false;\n      if (config) {\n\n      $('[data-validation~=\"recaptcha\"]', $form).each(function () {\n        var $input = $(this),\n          div = document.createElement('DIV'),\n          siteKey = config.reCaptchaSiteKey || $input.valAttr('recaptcha-sitekey'),\n          theme = config.reCaptchaTheme || $input.valAttr('recaptcha-theme') || 'light',\n\t\t      size = config.reCaptchaSize || $input.valAttr('recaptcha-size') || 'normal',\n          type = config.reCaptchaType || $input.valAttr('recaptcha-type') || 'image';\n\n        if (!siteKey) {\n          throw new Error('Google reCaptcha site key is required.');\n        }\n\n        if (!$form.attr('id')) {\n\t\t\t$form.attr('id', 'recaptcha-form-' + (i++));\n\t\t}\n        grecaptchaRenderCallback[$form.attr('id')] = function (result) {\n\t\t  var formID;\n          $('#' + formID).each(function () {\n            $('[data-validation~=\"recaptcha\"]', $(this)).each(function () {\n              $(this).trigger('validation', (result && result !== ''));\n            });\n          });\n        };\n\t\tgrecaptchaRenderCallback[$form.attr('id')].formID = $form.attr('id');\n\n        var widgetId = grecaptcha.render(div, {\n          sitekey: siteKey,\n          theme: theme,\n\t\t      size: size,\n          type: type,\n          callback: grecaptchaRenderCallback[$form.attr('id')],\n          'expired-callback': grecaptchaRenderCallback[$form.attr('id')]\n        });\n\n        $input\n          .valAttr('recaptcha-widget-id', widgetId)\n          .hide()\n          .on('beforeValidation', function (evt) {\n            // prevent validator from skipping this input becaus its hidden\n            evt.stopImmediatePropagation();\n          })\n          .parent()\n          .append(div);\n\n      });\n\t  }\n\n    });\n  };\n\n  $(window).on('validatorsLoaded formValidationSetup', setupGooglereCaptcha);\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/modules/sepa.js":"// jQuery Form Validator Module: SEPA\n// Author: PispalanIT, Joni Saarinen\n//\n// Code based on https://github.com/arhs/iban.js/blob/master/iban.js\n\n(function($) {\n\n  'use strict';\n\n\n  var ibanCountryList = [\n    ['AD', 24, 'F04F04A12'],\n    ['AE', 23, 'F03F16'],\n    ['AL', 28, 'F08A16'],\n    ['AT', 20, 'F05F11'],\n    ['AZ', 28, 'U04A20'],\n    ['BA', 20, 'F03F03F08F02'],\n    ['BE', 16, 'F03F07F02'],\n    ['BG', 22, 'U04F04F02A08'],\n    ['BH', 22, 'U04A14'],\n    ['BR', 29, 'F08F05F10U01A01'],\n    ['CH', 21, 'F05A12'],\n    ['CR', 21, 'F03F14'],\n    ['CY', 28, 'F03F05A16'],\n    ['CZ', 24, 'F04F06F10'],\n    ['DE', 22, 'F08F10'],\n    ['DK', 18, 'F04F09F01'],\n    ['DO', 28, 'U04F20'],\n    ['EE', 20, 'F02F02F11F01'],\n    ['ES', 24, 'F04F04F01F01F10'],\n    ['FI', 18, 'F06F07F01'],\n    ['FO', 18, 'F04F09F01'],\n    ['FR', 27, 'F05F05A11F02'],\n    ['GB', 22, 'U04F06F08'],\n    ['GE', 22, 'U02F16'],\n    ['GI', 23, 'U04A15'],\n    ['GL', 18, 'F04F09F01'],\n    ['GR', 27, 'F03F04A16'],\n    ['GT', 28, 'A04A20'],\n    ['HR', 21, 'F07F10'],\n    ['HU', 28, 'F03F04F01F15F01'],\n    ['IE', 22, 'U04F06F08'],\n    ['IL', 23, 'F03F03F13'],\n    ['IS', 26, 'F04F02F06F10'],\n    ['IT', 27, 'U01F05F05A12'],\n    ['KW', 30, 'U04A22'],\n    ['KZ', 20, 'F03A13'],\n    ['LB', 28, 'F04A20'],\n    ['LC', 32, 'U04F24'],\n    ['LI', 21, 'F05A12'],\n    ['LT', 20, 'F05F11'],\n    ['LU', 20, 'F03A13'],\n    ['LV', 21, 'U04A13'],\n    ['MC', 27, 'F05F05A11F02'],\n    ['MD', 24, 'U02A18'],\n    ['ME', 22, 'F03F13F02'],\n    ['MK', 19, 'F03A10F02'],\n    ['MR', 27, 'F05F05F11F02'],\n    ['MT', 31, 'U04F05A18'],\n    ['MU', 30, 'U04F02F02F12F03U03'],\n    ['NL', 18, 'U04F10'],\n    ['NO', 15, 'F04F06F01'],\n    ['PK', 24, 'U04A16'],\n    ['PL', 28, 'F08F16'],\n    ['PS', 29, 'U04A21'],\n    ['PT', 25, 'F04F04F11F02'],\n    ['RO', 24, 'U04A16'],\n    ['RS', 22, 'F03F13F02'],\n    ['SA', 24, 'F02A18'],\n    ['SE', 24, 'F03F16F01'],\n    ['SI', 19, 'F05F08F02'],\n    ['SK', 24, 'F04F06F10'],\n    ['SM', 27, 'U01F05F05A12'],\n    ['ST', 25, 'F08F11F02'],\n    ['TL', 23, 'F03F14F02'],\n    ['TN', 24, 'F02F03F13F02'],\n    ['TR', 26, 'F05F01A16'],\n    ['VG', 24, 'U04F16'],\n    ['XK', 20, 'F04F10F02'],\n    ['AO', 25, 'F21'],\n    ['BF', 27, 'F23'],\n    ['BI', 16, 'F12'],\n    ['BJ', 28, 'F24'],\n    ['CI', 28, 'U01F23'],\n    ['CM', 27, 'F23'],\n    ['CV', 25, 'F21'],\n    ['DZ', 24, 'F20'],\n    ['IR', 26, 'F22'],\n    ['JO', 30, 'A04F22'],\n    ['MG', 27, 'F23'],\n    ['ML', 28, 'U01F23'],\n    ['MZ', 25, 'F21'],\n    ['QA', 29, 'U04A21'],\n    ['SN', 28, 'U01F23'],\n    ['UA', 29, 'F25']\n  ];\n\n  var generalValidatorFunction = function (sepa) {\n    sepa = sepa.replace(/\\s+/g, '');\n    sepa = sepa.substr(4) + sepa.substr(0,4);\n\n    sepa = sepa.split('').map(function(n){\n      var code = n.charCodeAt(0);\n      if (code >= 'A'.charCodeAt(0) && code <= 'Z'.charCodeAt(0)){\n        //A = 10, B = 11, ... Z = 35\n          return code - 'A'.charCodeAt(0) + 10;\n      } else {\n        return n;\n      }\n    }).join('');\n\n    var remainder = sepa;\n    var block;\n\n    while (remainder.length > 2) {\n      block = remainder.slice(0, 9);\n      remainder = (parseInt(block, 10) % 97).toString() + remainder.slice(block.length);\n    }\n\n    if (parseInt(remainder, 10) % 97 === 1){\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  var countryIBAN = function(sepa) {\n    sepa = sepa.toUpperCase();\n    sepa = sepa.replace(/\\s+/g, '');\n\n    var countryCode = sepa.slice(0,2);\n    var i = 0;\n    var structure = '';\n\n    for (i = 0; i < ibanCountryList.length; ++i){\n      if (ibanCountryList[i][0] === countryCode){\n        structure = ibanCountryList[i][2];\n        break;\n      }\n    }\n\n    if (structure === ''){\n      return false;\n    }\n\n    var regex = structure.match(/(.{3})/g).map(function(block){\n\n      // parse each structure block (1-char + 2-digits)\n      var format;\n      var pattern = block.slice(0, 1);\n      var repeats = parseInt(block.slice(1), 10);\n\n      switch (pattern){\n        case 'A': format = '0-9A-Za-z'; break;\n        case 'B': format = '0-9A-Z'; break;\n        case 'C': format = 'A-Za-z'; break;\n        case 'F': format = '0-9'; break;\n        case 'L': format = 'a-z'; break;\n        case 'U': format = 'A-Z'; break;\n        case 'W': format = '0-9a-z'; break;\n      }\n\n      return '([' + format + ']{' + repeats + '})';\n    });\n\n    var regextest = new RegExp('^' + regex.join('') + '$');\n\n    return sepa.length === ibanCountryList[i][1] && regextest.test(sepa.slice(4));\n  };\n\n\n  $.formUtils.addValidator({\n    name: 'sepa',\n    validatorFunction: generalValidatorFunction,\n    errorMessage: '',\n    errorMessageKey:'badSepa'\n  });\n\n  $.formUtils.addValidator({\n    name: 'iban',\n    validatorFunction: function(sepa) {\n      return countryIBAN(sepa) && generalValidatorFunction(sepa);\n    },\n    errorMessage: '',\n    errorMessageKey:'badIban'\n  });\n\n  $.formUtils.addValidator({\n    name: 'bic',\n    validatorFunction: function(bic) {\n      var regextest = new RegExp('^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$');\n      return regextest.test(bic);\n    },\n    errorMessage: '',\n    errorMessageKey:'badBic'\n  });\n\n})(jQuery);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/modules/sweden.js":"/**\n * jQuery Form Validator Module: Security\n * ------------------------------------------\n * Created by Victor Jonsson <http://www.victorjonsson.se>\n *\n * This form validation module adds validators typically used on swedish\n * websites. This module adds the following validators:\n *  - validate_swesec (Social security number)\n *  - validate_swemobile\n *  - validate_validate_municipality\n *  - validate_county\n *  - validate_swephone\n *\n * @website http://formvalidator.net/#swedish-validators\n * @license MIT\n */\n(function($, window) {\n\n    /*\n    * Validate swedish social security number yyyymmddXXXX\n    */\n    $.formUtils.addValidator({\n        name : 'swesec',\n        validatorFunction : function(securityNumber, $input) {\n\n            var year, month, day, ssnParts;\n\n            if( $input.valAttr('use-hyphen') ) {\n                ssnParts = securityNumber.split('-');\n                if( ssnParts.length !== 2 ) {\n                    return false;\n                }\n                securityNumber = ssnParts.join('');\n            }\n\n            if (!securityNumber.match(/^(\\d{4})(\\d{2})(\\d{2})(\\d{4})$/)) {\n                return false;\n            }\n\n            year = RegExp.$1;\n            month = $.formUtils.parseDateInt(RegExp.$2);\n            day = $.formUtils.parseDateInt(RegExp.$3);\n\n            window.ssnGender = ( parseInt( (RegExp.$4).substring(2,3) ) % 2 ) === 0 ? 'female':'male';\n\n            var months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n            if (year % 400 === 0 || year % 4 === 0 && year % 100 !== 0) {\n                months[1] = 29;\n            }\n            if (month < 1 || month > 12 || day < 1 || day > months[month - 1]) {\n                return false;\n            }\n\n            securityNumber = securityNumber.substring(2, securityNumber.length);\n            var check = '';\n            for (var i = 0; i < securityNumber.length; i++) {\n                check += ((((i + 1) % 2) + 1)* securityNumber.substring(i, i + 1));\n            }\n            var checksum = 0;\n            for (i = 0; i < check.length; i++) {\n                checksum += parseInt(check.substring(i, i + 1),10);\n            }\n\n            return checksum % 10 === 0;\n        },\n        errorMessage : '',\n        errorMessageKey: 'badSecurityNumber'\n    });\n\n    $.formUtils.addValidator({\n        name : 'swecounty',\n        validatorFunction : function(str) {\n            str = str.toLowerCase();\n            if($.inArray(str, this.counties) === -1) {\n                if(str.substr(-3).toLocaleLowerCase() !== 'län') {\n                    return $.inArray(str + 's län', this.counties) > -1;\n                }\n\n                return false;\n            }\n            else {\n                return true;\n            }\n        },\n        errorMessage: '',\n        errorMessageKey: 'badCustomVal',\n        counties : ['stockholms län',\n            'uppsala län',\n            'södermanlands län',\n            'östergötlands län',\n            'jönköpings län',\n            'kronobergs län',\n            'kalmar län',\n            'gotlands län',\n            'blekinge län',\n            'skåne län',\n            'hallands län',\n            'västra götalands län',\n            'värmlands län',\n            'örebro län',\n            'västmanlands län',\n            'dalarnas län',\n            'gävleborgs län',\n            'västernorrlands län',\n            'jämtlands län',\n            'västerbottens län',\n            'norrbottens län']\n    });\n\n    $.formUtils.addValidator({\n        name : 'swemunicipality',\n        validatorFunction : function(str) {\n            str = str.toLowerCase();\n            if ($.inArray(str, this.municipalities) === -1) {\n\n                // First check (dont return)\n                if (str.substr(-8) === 's kommun') {\n                    if ($.inArray( str.substr(0, str.length-8), this.municipalities ) > -1) {\n                        return true;\n                    }\n                }\n\n                // Second check\n                if (str.substr(-7) === ' kommun') {\n                    return $.inArray( str.substr(0, str.length-7), this.municipalities ) > -1;\n                }\n\n                return false;\n            }\n            else {\n                return true;\n            }\n        },\n        errorMessage : '',\n        errorMessageKey: 'badCustomVal',\n        municipalities : ['ale','alingsås','alvesta','aneby','arboga','arjeplog','arvidsjaur','arvika','askersund','avesta','bengtsfors','berg','bjurholm','bjuv','boden','bollebygd','bollnäs','borgholm','borlänge','borås','botkyrka','boxholm','bromölla','bräcke','burlöv','båstad','dals-ed','danderyd','degerfors','dorotea','eda','ekerö','eksjö','emmaboda','enköpings','eskilstuna','eslövs','essunga','fagersta','falkenberg','falköping','falu','filipstad','finspång','flen','forshaga','färgelanda','gagnef','gislaved','gnesta','gnosjö','gotland','grum','grästorp','gullspång','gällivare','gävle','göteborg','götene','habo','hagfor','hallsberg','hallstahammar','halmstad','hammarö','haninge','haparanda','heby','hedemora','helsingborg','herrljunga','hjo','hofor','huddinge','hudiksvall','hultsfred','hylte','håbo','hällefor','härjedalen','härnösand','härryda','hässleholm','höganäs','högsby','hörby','höör','jokkmokk','järfälla','jönköping','kalix','kalmar','karlsborg','karlshamn','karlskoga','karlskrona','karlstad','katrineholm','kil','kinda','kiruna','klippan','knivsta','kramfors','kristianstad','kristinehamn','krokoms','kumla','kungsbacka','kungsör','kungälv','kävlinge','köping','laholm','landskrona','laxå','lekeberg','leksand','lerum','lessebo','lidingö','lidköping','lilla edets','lindesbergs','linköpings','ljungby','ljusdals','ljusnarsbergs','lomma','ludvika','luleå','lunds','lycksele','lysekil','malmö','malung-sälen','malå','mariestad','marks','markaryd','mellerud','mjölby','mora','motala','mullsjö','munkedal','munkfors','mölndal','mönsterås','mörbylånga','nacka','nora','norberg','nordanstig','nordmaling','norrköping','norrtälje','norsjö','nybro','nykvarn','nyköping','nynäshamn','nässjö','ockelbo','olofström','orsa','orust','osby','oskarshamn','ovanåker','oxelösund','pajala','partille','perstorp','piteå','ragunda','robertsfors','ronneby','rättvik','sala','salem','sandviken','sigtuna','simrishamn','sjöbo','skara','skellefteå','skinnskatteberg','skurup','skövde','smedjebacken','sollefteå','sollentuna','solna','sorsele','sotenäs','staffanstorp','stenungsund','stockholm','storfors','storuman','strängnäs','strömstad','strömsund','sundbyberg','sundsvall','sunne','surahammar','svalöv','svedala','svenljunga','säffle','säter','sävsjö','söderhamns','söderköping','södertälje','sölvesborg','tanum','tibro','tidaholm','tierp','timrå','tingsryd','tjörn','tomelilla','torsby','torså','tranemo','tranå','trelleborg','trollhättan','trosa','tyresö','täby','töreboda','uddevalla','ulricehamns','umeå','upplands väsby','upplands-bro','uppsala','uppvidinge','vadstena','vaggeryd','valdemarsvik','vallentuna','vansbro','vara','varberg','vaxholm','vellinge','vetlanda','vilhelmina','vimmerby','vindeln','vingåker','vårgårda','vänersborg','vännäs','värmdö','värnamo','västervik','västerås','växjö','ydre','ystad','åmål','ånge','åre','årjäng','åsele','åstorp','åtvidaberg','älmhult','älvdalen','älvkarleby','älvsbyn','ängelholm','öckerö','ödeshög','örebro','örkelljunga','örnsköldsvik','östersund','österåker','östhammar','östra göinge','överkalix','övertorneå']\n    });\n\n\n    /*\n     * Validate phone number, at least 7 digits only one hyphen and plus allowed\n     */\n    $.formUtils.addValidator({\n        name : 'swephone',\n        validatorFunction : function(tele) {\n            var numPlus = tele.match(/\\+/g);\n            var numHifen = tele.match(/-/g);\n\n            if ((numPlus !== null && numPlus.length > 1) || (numHifen !== null && numHifen.length > 1)) {\n                return false;\n            }\n            if (numPlus !== null && tele.indexOf('+') !== 0) {\n                return false;\n            }\n\n            tele = tele.replace(/([-|\\+])/g, '');\n            return tele.length > 8 && tele.match(/[^0-9]/g) === null;\n        },\n        errorMessage : '',\n        errorMessageKey: 'badTelephone'\n    });\n\n\n    /*\n     * Validate that string is a swedish telephone number\n     */\n    $.formUtils.addValidator({\n        name : 'swemobile',\n        validatorFunction : function(number) {\n            if (!$.formUtils.validators.validate_swephone.validatorFunction(number)) {\n                return false;\n            }\n\n            number = number.replace(/[^0-9]/g, '');\n            var begin = number.substring(0, 3);\n\n            if (number.length !== 10 && begin !== '467') {\n                return false;\n            } else if (number.length !== 11 && begin === '467') {\n                return false;\n            }\n            return (/07[0-9{1}]/).test(begin) || begin === '467';\n        },\n        errorMessage : '',\n        errorMessageKey: 'badTelephone'\n    });\n\n    /**\n     * @private\n     * @param {Array} listItems\n     * @return {Array}\n     */\n    var _makeSortedList = function(listItems) {\n        var newList = [];\n        $.each(listItems, function(i, v) {\n            newList.push(v.substr(0,1).toUpperCase() + v.substr(1, v.length));\n        });\n        newList.sort();\n        return newList;\n    };\n\n    $.fn.suggestSwedishCounty = function(settings) {\n        var counties = _makeSortedList($.formUtils.validators.validate_swecounty.counties);\n        return $.formUtils.suggest(this, counties, settings);\n    };\n\n    $.fn.suggestSwedishMunicipality = function(settings) {\n        var municipalities = _makeSortedList($.formUtils.validators.validate_swemunicipality.municipalities);\n        return $.formUtils.suggest(this, municipalities, settings);\n    };\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/modules/toggleDisabled.js":"/**\n * jQuery Form Validator Module: Toggle Disabled\n * ------------------------------------------\n * Created by Victor Jonsson <http://www.victorjonsson.se>\n *\n * This module will take care of disabling/enabling submit buttons\n * in forms, depending on if the inputs of the form is valid or not.\n *\n * @website http://formvalidator.net/\n * @license MIT\n */\n(function($, window, undefined) {\n\n  'use strict';\n\n  // Function that can enable/disable form\n  var toggleFormState = function($form, state) {\n      if( state === 'disabled' ) {\n        $form.find('*[type=\"submit\"]')\n          .addClass('disabled')\n          .attr('disabled', 'disabled');\n      } else {\n        $form.find('*[type=\"submit\"]')\n          .removeClass('disabled')\n          .removeAttr('disabled');\n      }\n    },\n    isCheckingIfFormValid = false;\n\n  $.formUtils.$win.bind('validatorsLoaded formValidationSetup', function(evt, $forms, conf) {\n\n      var $formsToDisable = conf.disabledFormFilter ? $forms.filter(conf.disabledFormFilter) : $forms,\n          showErrorDialogs = conf.showErrorDialogs === undefined || conf.showErrorDialogs,\n          afterValidationCallback = function(evt, result, evtContext) {\n            var $this = $(this);\n            if (evtContext && evtContext.indexOf('blur') > -1) {\n              $this.unbind('afterValidation', afterValidationCallback);\n            } else {\n              if (result.isValid) {\n                $this.unbind('afterValidation', afterValidationCallback);\n              } else if (!$this.valAttr('have-been-blurred')) {\n                result.shouldChangeDisplay = false;\n              }\n            }\n          };\n\n      // Toggle form state depending on if it has only valid inputs or not.\n      $formsToDisable\n        .addClass(showErrorDialogs ? 'disabled-with-errors' : 'disabled-without-errors')\n        .on('reset', function() {\n          toggleFormState($(this), 'disabled');\n        })\n        .find('*[data-validation]')\n          .valAttr('event','keyup change')\n          .on('validation', function(evt, valid) {\n            if( !isCheckingIfFormValid ) {\n              isCheckingIfFormValid = true;\n              var $form = $(this).closest('form');\n              if( valid && $form.isValid(conf.language, conf, false) ) {\n                toggleFormState($form, 'enabled');\n              } else {\n                toggleFormState($form, 'disabled');\n              }\n              isCheckingIfFormValid = false;\n            }\n          })\n          .on('afterValidation', afterValidationCallback)\n          .on('blur', function() {\n            $(this).valAttr('have-been-blurred', 1);\n          });\n\n\n      // Make all inputs validated on keyup, require validateOnEvent in validation config\n      toggleFormState($formsToDisable, 'disabled');\n\n      $formsToDisable.validateOnEvent(conf.language, conf);\n\n  })\n  .on('validationErrorDisplay', function(evt, $input, $elem) {\n      if ( $input.closest('form').hasClass('disabled-without-errors') ) {\n        $elem.hide();\n      }\n  });\n\n})(jQuery, window);\n","/home/travis/build/npmtest/node-npmtest-jquery-form-validator/node_modules/jquery-form-validator/src/modules/uk.js":"/**\n * jQuery Form Validator Module: UK\n * ------------------------------------------\n * Created by Victor Jonsson <http://www.victorjonsson.se>\n *\n * This form validation module adds validators typically used on\n * websites in the UK. This module adds the following validators:\n *  - ukvatnumber\n *  - ukutr\n *  - uknin\n *\n * @website http://formvalidator.net/#uk-validators\n * @license MIT\n */\n(function($) {\n\n\t'use strict';\n\n\t/**\n\t * UK VAT Validator\n\t */\n\t$.formUtils.addValidator({\n    name : 'ukvatnumber',\n    validatorFunction : function(number) {\n\n        // Code Adapted from http://www.codingforums.com/showthread.php?t=211967\n        // TODO: Extra Checking for other VAT Numbers (Other countries and UK Government/Health Authorities)\n\n    \tnumber = number.replace(/[^0-9]/g, '');\n\n    \t//Check Length\n    \tif(number.length < 9) {\n    \t\treturn false;\n    \t}\n\n    \tvar valid = false;\n\n    \tvar VATsplit = [];\n    \tVATsplit = number.split('');\n\n    \tvar checkDigits = Number(VATsplit[7] + VATsplit[8]);  // two final digits as a number\n\n    \tvar firstDigit = VATsplit[0];\n    \tvar secondDigit = VATsplit[1];\n    \tif ((firstDigit === 0) && (secondDigit > 0)) {\n    \t\treturn false;\n    \t}\n\n    \tvar total = 0;\n    \tfor (var i = 0; i < 7; i++) {  // first 7 digits\n    \t\ttotal += VATsplit[i]* (8-i);  // sum weighted cumulative total\n    \t}\n\n    \tvar c = 0;\n    \tvar j = 0;\n\n    \tfor (var m = 8; m >= 2; m--) {\n    \t\tc += VATsplit[j] * m;\n    \t\tj++;\n    \t}\n\n    \t// Traditional Algorithm for VAT numbers issued before 2010\n\n    \twhile (total > 0) {\n    \t\ttotal -= 97; // deduct 97 repeatedly until total is negative\n    \t}\n    \ttotal = Math.abs(total);  // make positive\n\n    \tif (checkDigits === total) {\n    \t\tvalid = true;\n    \t}\n\n    \t// If not valid try the new method (introduced November 2009) by subtracting 55 from the mod 97 check digit if we can - else add 42\n\n    \tif (!valid) {\n    \t\ttotal = total%97;  // modulus 97\n\n    \t\tif (total >= 55) {\n    \t\t\ttotal = total - 55;\n    \t\t} else {\n    \t\t\ttotal = total + 42;\n    \t\t}\n\n    \t\tif (total === checkDigits) {\n    \t\t\tvalid = true;\n    \t\t}\n    \t}\n\n    \treturn valid;\n    },\n    errorMessage : '',\n    errorMessageKey: 'badUKVatAnswer'\n});\n\n\t/**\n\t * UK Unique Taxpayer Reference Validator\n\t */\n\t$.formUtils.addValidator({\n\t\tname: 'ukutr',\n\t\tvalidatorFunction: function (utr)\n\t\t{\n\t\t\tvar weights = [0, 6, 7, 8, 9, 10, 5, 4, 3, 2],\n\t\t\t\tcheckDigits = [2, 1, 9, 8, 7, 6, 5, 4, 3, 2, 1],\n\t\t\t\tcheckSum = 0;\n\n\t\t\tif (/\\d{10}/.test(utr) && utr.length === 10)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\t\tcheckSum += utr[ i ] * weights[ i ];\n\t\t\t\t}\n\n\t\t\t\tif (parseInt(utr.charAt(0)) === checkDigits[checkSum % 11])\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\terrorMessage: '',\n\t\terrorMessageKey: 'badUkUtr'\n\t});\n\n\t/**\n\t * UK National Insurance number Validator\n\t */\n\t$.formUtils.addValidator({\n\t\tname: 'uknin',\n\t\tvalidatorFunction: function(val){\n\t\t\tif( /^(?!BG)(?!GB)(?!NK)(?!KN)(?!TN)(?!NT)(?!ZZ)(?:[A-CEGHJ-PR-TW-Z][A-CEGHJ-NPR-TW-Z])(?:\\s*\\d\\s*){6}([A-D]|\\s)$/i.test( val ) ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\terrorMessage: '',\n\t\terrorMessageKey: 'badUkNin'\n\t});\n\n})(jQuery);\n"}